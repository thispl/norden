[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2021-09-30 17:06:18.582490",
  "name": "Lead-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\t\tvalidate(frm){\n\t    $.each(frm.doc.lead_table,function(i,d){\n\t        var company= d.company\n\t        var c = 0\n\t        $.each(frm.doc.lead_table,function(i,v){\n\t            \n\t            if(company == v.company){\n\t                if (c != 1){\n\t                c = 1\n\t                \n\t            }\n\t            else{\n\t                frappe.throw('Company '+ company + ' entered multipe times')\n\t            }\n\t            }\n\t         \n\t        })\n\t    })\n\t},\n\torganization_name(frm){\n\t\tif(frm.doc.organization_name){\n\t\t\tfrm.set_value('company_name',frm.doc.organization_name)\n\t\t}\n\t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2022-04-19 11:52:23.202275",
  "name": "Customer-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Customer', {\n\trefresh(frm) {\n\t\tfrm.set_value('customer',frm.doc.lead_name)\n\t},\n\t\n\t\tvalidate(frm){\n\t    $.each(frm.doc.customer_table,function(i,d){\n\t        var company= d.company\n\t        var c = 0\n\t        $.each(frm.doc.customer_table,function(i,v){\n\t            \n\t            if(company == v.company){\n\t                if (c != 1){\n\t                c = 1\n\t                \n\t            }\n\t            else{\n\t                frappe.throw('Company '+ company + ' entered multipe times')\n\t            }\n\t            }\n\t         \n\t        })\n\t    })\n\t},\n\tcustomer(frm){\n\t\tif(frm.doc.customer){\n\t\t   \n\t\t\tfrm.set_value('customer_name',frm.doc.customer)\n\t\t}\n\t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Datasheet",
  "enabled": 1,
  "modified": "2021-11-02 18:03:27.220753",
  "name": "Datasheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Eyenor Datasheet', {\n    refresh(frm){\n    // if(frm.doc.docstatus == 1){\n    frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.eyenor_datasheet.eyenor_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t        }\n\t         })\n\t        \n\t    })\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Datasheet 2\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Eyenor Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n    },\n    validate(frm){\n    var dimension ,weight = 0\n    $.each(frm.doc.ds_general,function(i,d){\n        if(d.title == \"Dimensions-Packed\"){\n          dimension = d.specification;\n        }\n        if(d.title == \"Gross Weight\"){\n          weight = d.specification;\n        }\n    });\n      \n    // frm.add_child('table_15', {\n    //     \"part_number\": frm.doc.ds_item_no,\n    //     \"packing_number\":\"Carton Box\",\n    //     \"dimension\":dimension,\n    //     \"gross_weight\":weight,\n    // });\n    //      frm.refresh_field('table_15');\n    \n\n        \n    // frm.add_child('ds_order', {\n    //     \"part_number\": frm.doc.ds_item_no,\n    //     \"description\":frm.doc.ds_item_name,\n    //     \"standard_quantity\": \"1\"\n    // });\n    // frm.refresh_field('ds_order');\n     \n}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS Datasheet",
  "enabled": 1,
  "modified": "2021-10-28 15:35:53.586492",
  "name": "NVS Datasheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('NVS Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nvs_datasheet.nvs_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    if(frm.doc.docstatus == 1){\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NAC Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NVS 2\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n    }\n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NAC Datasheet",
  "enabled": 1,
  "modified": "2021-10-28 18:53:16.707733",
  "name": "NAC Datasheet-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('NAC Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nac_datasheet.nac_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    if(!frm.doc.__islocal){\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NAC Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NAC Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n    }\n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS",
  "enabled": 1,
  "modified": "2021-10-28 15:37:07.409251",
  "name": "NVS-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('NVS', {\n\trefresh(frm) {\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NVS Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NVS\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n            frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nvs_datasheet.nvs_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    \n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Cable Datasheet",
  "enabled": 1,
  "modified": "2021-10-30 16:57:19.236522",
  "name": "Cable-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Cable Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.cable_datasheet.cable_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n\t\tfrm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Cable\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Cable Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 1 Sticker",
  "enabled": 1,
  "modified": "2021-09-12 02:10:46.341932",
  "name": "Keyston Stickers-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Norden 1 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__(\"Generate Print\"), function () {\n\t    var doctype = frm.doc.doctype\n\t    var docname = frm.doc.name\n        var print_format =\"Norden 1 Sticker\";\n\t\tlet w = window.open(\n\t\t\tfrappe.urllib.get_full_url(\n\t\t\t\t'/printview?doctype=' +\n\t\t\t\tencodeURIComponent(doctype) +\n\t\t\t\t'&name=' +\n\t\t\t\tencodeURIComponent(docname) +\n\t\t\t\t'&trigger_print=1' +\n\t\t\t\t'&format=' +\n\t\t\t\tencodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=0'\n\t\t\t)\n\t\t);\n\t    });\n\t    \n\t    frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Norden 1 Sticker\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(frm.doc.doctype)\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 2 Sticker",
  "enabled": 1,
  "modified": "2021-09-18 15:08:11.290732",
  "name": "Norden 2 Sticker-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Norden 2 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Norden 2 Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 2 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Norden 2 Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 2 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Stickers",
  "enabled": 1,
  "modified": "2021-12-21 12:13:01.006345",
  "name": "Eyenor Stickers-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Eyenor Stickers', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Eyenor Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Adapter Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Adapter Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS Stickers",
  "enabled": 1,
  "modified": "2021-09-19 10:55:05.738842",
  "name": "NVS Stickers-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('NVS Stickers', {\n\trefresh(frm) {\n\t\t frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"NVS Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('NVS Pack Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"NVS Pack Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('NVS Box Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"NVS Box Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2022-10-13 19:28:00.994113",
  "name": "Quotation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Quotation', {\n\n\ton_submit(frm) {\n\t    if(frm.doc.docstatus == 1){\n\t        frm.set_value(\"work_flow\",\"Approved\")\n\t    }\n\t},\n\n\tonload(frm) {\n\t    console.log(frm.doc.price_list_currency)\n\t    if(frm.doc.docstatus == 0){\n\t        frm.set_value(\"last_update\",new Date())\n\t    }\n\t    \n\t    if(frm.doc.__islocal ){\n\t   frm.set_value(\"prepared_by\",frappe.session.user)\n\t    console.log(frappe.session.user)\n\t    }\n\t    \n\t   // frm.set_value(\"work_flow\",Draft)\n\t    \n// \t\tif (frm.doc.doc_status != 1) {\n// \t\t\tfrm.set_value(\"session_user\", frappe.session.user)\n// // \t\t\tif (frappe.user.has_role(\"Sales Approver\")) {\n// // \t\t\t\tfrm.set_value(\"role\", \"Sales Approver\")\n// \t\t\t}\n\n\n// \t\t\tif (frappe.user.has_role(\"HOD Approver\")) {\n// \t\t\t\tfrm.set_value(\"role\", \"HOD Approver\")\n// \t\t\t}\n\n\n// \t\t\tif (frappe.user.has_role(\"COO Approver\")) {\n// \t\t\t\tfrm.set_value(\"role\", \"COO Approver\")\n// \t\t\t}\n\n\n// \t\t\tif (frappe.user.has_role(\"Quotation User\")) {\n// \t\t\t\tfrm.set_value(\"role\", \"Quotation User\")\n// \t\t\t}\n// \t\t}\n\n\n\t},\n\n\n\n\n\tafter_cancel(frm) {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: 'feedback form',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Reason',\n\t\t\t\t\tfieldname: 'reason',\n\t\t\t\t\tfieldtype: 'Small Text'\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: 'Submit',\n\t\t\tprimary_action(values) {\n\t\t\t\td.hide();\n\t\t\t\tfrm.set_value('test', values.reason);\n\t\t\t}\n\n\t\t});\n\n\t\td.show();\n\t\t//frm.set_value('test',reason);\n\t\tfrappe.msgprint(\"please fill the cancellation remarks\");\n\n\t},\n\tsame_as(frm) {\n\t\tif (frm.doc.same_as == '1') {\n\t\t\tvar add = 0\n\t\t\tadd = frm.doc.customer_address\n\t\t\tfrm.set_value('shipping_address_name', add)\n\t\t}\n\t},\n\tvalidate(frm) {\n\t    var netprofit =0\n\t    var total_ic = 0\n\t    $.each(frm.doc.items, function (i, d) {\n        \n    \t\t\n\t    frappe.call({\n    \t\t\tmethod: 'norden.custom.get_internal_cost',\n    \t\t\targs: {\n    \t\t\t\t'item_code': d.item_code,\n    \t\t\t\t'company': frm.doc.company,\n    \n    \t\t\t},\n    \t\t\tcallback(r) {\n    \t\t\t\tif (r.message) {\n    \t\t\t\t\td.internal_cost = r.message * d.qty\n    \t\t\t\t\tvar total_uc = total_ic + d.internal_cost\n    \t\t\t\t}\n    \t\t\t}\n    \t\t})\n    \t\t\n    \t\tfrappe.call({\n    \t\t\tmethod: 'norden.custom.get_cost',\n    \t\t\targs: {\n    \t\t\t\t'item_code': d.item_code,\n    \t\t\t},\n    \t\t\tcallback(r) {\n    \t\t\t\tif (r.message) {\n    \t\t\t\t    console.log(r.message)\n    \t\t\t\t\td.base_cost = r.message * d.qty\n    \t\t\t\t\t\n    \t\t\t\t}\n    \t\t\t}\n    \t\t})\n    \t\t\n\t\t\tif (d.item_code) {\n\t\t\t    var net = (d.rate*d.qty)-d.internal_cost\n\t\t\t    d.net_profit = net\n\t\t\t\t}\n\t\t\t\tnetprofit += d.net_profit\n\t\t\t\tfrm.set_value('total_net_profit', netprofit)\n\t\t\t})\n\t\t\t\n\t\t\t\n        \n        \n        \n\t\tfrm.trigger(\"discount_percentage\")\n\n\n\n\n\t\tif (frm.doc.items) {\n\t\t\tvar cost = 0\n\t\t\tvar total_selling_price = 0\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\tif (d.item_code) {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"norden.custom.create_item_price\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\"item_code\": d.item_code,\n\t\t\t\t\t\t\t\"rate\": d.rate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\td.price_list_rate = r.message\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcost = cost + d.internal_cost  \n\t\t\t\ttotal_selling_price = total_selling_price + (d.rate * d.qty)\n\t\t\t\t\n\t\t\t\t// d.qty = d.sales_order_qty + d.stock_quantity\n\t\t\t\td.discount_amount = ''\n\t\t\t\t\n\t\t\t\t\n\t\t\t})\n\t\t\t// var margin =  ((frm.doc.total_selling_price_in_usd- cost)/cost)*100\n\t\t\tfrm.set_value(\"internal_cost\", cost)\n\t\t\tfrm.set_value(\"total_selling_price\", total_selling_price)\n\t\t\n\t\t\t// frm.set_value(\"internal_cost_margin\",margin)\n\t\t}\n\n\t\tif (frm.doc.total_selling_price) {\n\t\t    if(frm.doc.company != \"Norden Communication Middle East FZE\" || frm.doc.price_list_currency != \"AED\" && frm.doc.company == \"Norden Communication Middle East FZE\"){\n\t\t        frappe.call({\n\t\t\t\tmethod: \"norden.custom.currency_conversion\",\n\t\t\t\targs: {\n\t\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\t\"price\": frm.doc.total_selling_price\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tfrm.set_value(\"total_selling_price_in_usd\", r.message)\n\t\t\t\t\t\t// var margin =  ((frm.doc.total_selling_price_in_usd- cost)/cost)*100\n\t\t\t\t\t\t// frm.set_value(\"internal_cost_margin\",margin)\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t    }\n\t\t    else{\n\t\t        frm.set_value(\"total_selling_price_in_usd\",frm.doc.total_selling_price)\n\t\t    }\n\t\t}\n\t\t\n\t\t\n// \t\tif (frm.doc.items) {\n// \t\t\tvar cost = 0\n// \t\t\t$.each(frm.doc.items, function (i, d) {\n// \t\t\t\tif (d.item_code) {\n// \t\t\t\t\tfrappe.call({\n// \t\t\t\t\t\tmethod: \"norden.custom.get_internal_cost\",\n// \t\t\t\t\t\targs: {\n// \t\t\t\t\t\t\t\"item_code\": d.item_code,\n// \t\t\t\t\t\t\t\"company\": frm.doc.company\n// \t\t\t\t\t\t},\n// \t\t\t\t\t\tcallback(r) {\n// \t\t\t\t\t\t\tif (r.message) {\n// \t\t\t\t\t\t\t    cost = cost + r.message\n// \t\t\t\t\t\t\t    console.log(cost)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t})\n\n// \t\t\t\t}\n\n\t\t\t\t\n// \t\t\t})\n// \t\t}\n\n\n\n\n\n\t},\n\n\n\n\tset_series(frm) {\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('file_number', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t},\n\n\n\trefresh(frm) {\n\t    var input = 'input[data-fieldname=\"item_code\"][data-doctype=\"Quotation Item\"]';\n\t\tvar isFocus = false;\n\t\tfrm.fields_dict.items.grid.wrapper.on('click', input, function (e) {\n\t\t\tif (!isFocus) {\n\t\t\t\tconst item_code = e.currentTarget.value;\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'norden.custom.stock_popup',\n\t\t\t\t\targs: {\n\t\t\t\t\t\t'item_code': item_code,\n\t\t\t\t\t\t'company':frm.doc.company\n\t\t\t\t\t},\n\t\t\t\t\tcallback(d) {\n\t\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\t\tfrm.get_field(\"items_html\").$wrapper.html(d.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'norden.custom.po_popup',\n\t\t\t\t\targs: {\n\t\t\t\t\t\t'item_code': item_code,\n\t\t\t\t\t\t'company':frm.doc.company\n\t\t\t\t\t},\n\t\t\t\t\tcallback(d) {\n\t\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\t\tfrm.get_field(\"po_html\").$wrapper.html(d.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tisFocus = false;\n\t\t});\n\t\n    \t   \n\t    \n\t    if (frm.doc.work_flow){\n\t        frm.set_df_property(\"work_flow\", 'hidden', 0)\n\t        \n\t    }\n\t    \n\t   else{\n\t        frm.set_df_property(\"work_flow\", 'hidden', 1)\n\t        \n\t    }\n\n\t\tfrm.add_custom_button(__(\"Margin Details\"), function () {\n\t\t\tvar item_details_list = []\n\t\t\tvar item_details = {}\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\titem_details = {}\n\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\titem_details['description'] = d.description\n\t\t\t\titem_details['qty'] = d.qty\n\t\t\t\titem_details['rate'] = d.rate\n\t\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\t\titem_details['amount'] = d.amount\n\t\t\t\titem_details_list.push(item_details)\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.custom.get_item_margin\",\n\t\t\t\targs: {\n\t\t\t\t\t'name': frm.doc.name,\n\t\t\t\t\t'item_details': item_details_list,\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n\t\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\t'user': frappe.session.user,\n\t\t\t\t\t// 'role':frappe.user.has_role\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\t\tsize: \"extra-large\",\n\t\t\t\t\t\t\ttitle: 'Margin',\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Margin',\n\t\t\t\t\t\t\t\t\tfieldname: 'margin',\n\t\t\t\t\t\t\t\t\tfieldtype: 'HTML'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\td.fields_dict.margin.$wrapper.html(r.message);\n\t\t\t\t\t\td.show();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\n\t\t});\n\n\n\n\n\n\n\t\tif (frm.doc.work_flow == \"Pending for HOD\" && frm.doc.work_flow == \"Pending for HOD\") {\n\t\t\tfrm.add_custom_button(__(\"Send to COO\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for COO\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to COO\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\t\t}\n\n\t\tif (frm.doc.work_flow == \"Pending for COO\" && frm.doc.work_flow != \"Pending for CFO\" || frm.doc.grand_total >= 10000000 && frm.doc.currency == \"INR\" || frm.doc.grand_total >= 100000 && frm.doc.currency != \"INR\" ) {\n\t\t\tfrm.add_custom_button(__(\"Send to CFO\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for CFO\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to CFO\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\t\t}\n\t\t\n\t\tif(frm.doc.work_flow == \"Pending for CFO\"){\n\t\t    frm.remove_custom_button('Send to CFO');\n\t\t}\n\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 10000000 && frm.doc.currency == \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow == \"Pending for Sales Manager\") {\n\t\t\tfrm.add_custom_button(__(\"Send to HOD\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for HOD\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to Sales HOD\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 100000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.company != \"Norden Communication Middle East FZE\") {\n\t\t\tfrm.add_custom_button(__(\"Send to HOD\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for HOD\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to HOD\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\n\t\t}\n\t\t\n\t\t\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 100000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for Operation Manager\" && frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.company == \"Norden Communication Middle East FZE\") {\n\t\tfrm.add_custom_button(__(\"Send to Operation Manager\"), function () {\n\t\t\tfrm.set_value(\"work_flow\", \"Pending for Operation Manager\")\n\t\t\tfrm.save()\n\t\t\tfrappe.show_alert({message:__(\"Sent to Operation Manager\"), indicator:'green'});\n\t\t}).css({'color':'white','background-color':\"#008000\"});\n\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 10000000 && frm.doc.currency == \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow != \"Pending for Sales Manager\") {\n\t\t\tfrm.add_custom_button(__(\"Send to Sales Manager\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for Sales Manager\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to Sales Manager\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 100000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow != \"Pending for Sales Manager\" && frm.doc.work_flow != \"Pending for Operation Manager\") {\n\t\t\tfrm.add_custom_button(__(\"Send to Sales Manager\"), function () {\n\t\t\t\tfrm.set_value(\"work_flow\", \"Pending for Sales Manager\")\n\t\t\t\tfrm.save()\n\t\t\t\tfrappe.show_alert({message:__(\"Sent to Sales Manager\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#008000\"});\n\n\t\t}\n\t\t\n\t\tif(frm.doc.work_flow == \"Pending for Sales Manager\" || frm.doc.work_flow == \"Pending for HOD\" || frm.doc.work_flow == \"Pending for COO\" || frm.doc.work_flow == \"Pending for CFO\"){\n\t    \tfrm.add_custom_button(__(\"Reject\"), function () {\n\t\t\tfrm.set_value(\"work_flow\", \"Draft\")\n\t\t\tfrm.save()\n// \t\t\tfrappe.show_alert({message:__(\"Sent to Sales Manager\"), indicator:'green'});\n\t\t\t}).css({'color':'white','background-color':\"#FF0000\"});\n\t\t}\n\t\t\n// \t\t\tif(frm.doc.work_flow == \"Pending for HOD\"){\n// \t    \tfrm.add_custom_button(__(\"Reject\"), function () {\n// \t\t\tfrm.set_value(\"work_flow\", \"Draft\")\n// \t\t\tfrm.save()\n// // \t\t\tfrappe.show_alert({message:__(\"Sent to Sales Manager\"), indicator:'green'});\n// \t\t\t});\n// \t\t}\n\t\t\n\n\t\tif (!frm.doc.__islocal) {\n\t\t\tfrm.add_custom_button(__(\"Print Quotation\"), function () {\n\t\t\t\tvar f_name = frm.doc.name\n\t\t\t\tif(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n\t\t\t\tvar print_format = \"SPARCOM Quotation\";\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t    var print_format = \"print Quotation\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Quotation\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n\t\t\t});\n\t\t}\n\t\t\n\t\n\t\n\t\t//  frm.set_value('converted_by',frappe.session.user)\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('national_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('national_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('regional_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('regional_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('system_integrator', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('system_integrator', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('end_user', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('enduser', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('stockist', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('stockist', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\t\targs: {\n\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\n\tfetch(frm) {\n\t\tfrappe.call({\n\t\t\tmethod: 'norden.custom.get_stock_balance',\n\t\t\targs: {\n\t\t\t\t'item_table': frm.doc.items\n\t\t\t},\n\t\t\tcallback(d) {\n\t\t\t\tfrm.clear_table('stock_availability')\n\t\t\t\tif (d.message) {\n\t\t\t\t\t$.each(d.message, function (i, v) {\n\t\t\t\t\t\tfrm.add_child('stock_availability', {\n\t\t\t\t\t\t\t'item_code': v[0],\n\t\t\t\t\t\t\t'item_name': v[1],\n\t\t\t\t\t\t\t'warehouse': v[2],\n\t\t\t\t\t\t\t'qty': v[3],\n\t\t\t\t\t\t\t'uom': v[4],\n\t\t\t\t\t\t\t'value': v[5]\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfrm.refresh_field('stock_availability')\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_previous_po',\n\t\t\t\targs: {\n\t\t\t\t\t'item_table': frm.doc.items\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tfrm.clear_table('previous_purchase_order')\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\t$.each(d.message, function (i, v) {\n\t\t\t\t\t\t\tfrm.add_child('previous_purchase_order', {\n\t\t\t\t\t\t\t\t'item_code': v[0],\n\t\t\t\t\t\t\t\t'item_name': v[1],\n\t\t\t\t\t\t\t\t'supplier': v[2],\n\t\t\t\t\t\t\t\t'qty': v[3],\n\t\t\t\t\t\t\t\t'po_date': v[4],\n\t\t\t\t\t\t\t\t'amount': v[5],\n\t\t\t\t\t\t\t\t'purchase_order': v[6]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfrm.refresh_field('previous_purchase_order')\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_out_qty',\n\t\t\t\targs: {\n\t\t\t\t\t'item_table': frm.doc.items\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tfrm.clear_table('stock_out_qty')\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\t$.each(d.message, function (i, v) {\n\t\t\t\t\t\t\tfrm.add_child('stock_out_qty', {\n\t\t\t\t\t\t\t\t'item_code': v[0],\n\t\t\t\t\t\t\t\t'warehouse': v[1],\n\t\t\t\t\t\t\t\t'qty': v[2],\n\t\t\t\t\t\t\t\t'date': v[3],\n\t\t\t\t\t\t\t\t'out_type': v[4]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tfrm.refresh_field('stock_out_qty')\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t},\n\n\n\n\n\n\n\n\n\n\n})\n\n\n\nfrappe.ui.form.on('Quotation Item', {\n\toptional_item(frm, cdt, cdn) {\n\t\tvar row = locals[cdt][cdn]\n\t\tif (row.optional_item) {\n\t\t\trow.price_list_rate = 0\n\t\t\trow.base_price_list_rate = 0\n\t\t\trow.rate = 0\n\t\t\tfrm.refresh_field('items')\n\t\t}\n\n\t},\n\titem_code(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tif (child.item_code) {\n\t\t\tfrm.trigger('fetch')\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.stock_popup',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code,\n\t\t\t\t\t'company': frm.doc.company\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\tfrm.get_field(\"items_html\").$wrapper.html(d.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\n\t},\n\titems_remove(frm) {\n\t\tfrm.trigger('fetch')\n\t},\n\n})\n\nfrappe.ui.form.on('Quotation Item', {\n\titem_code(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tvar rate = 0\n\t\tif (child.price_list_rate) {\n\t\t\tchild.margin_type = \"Percentage\"\n\t\t}\n\t\tfrm.refresh_field(\"items\")\n\t\t\n\t\t\n\t\tif (child.item_code) {\n\t\t    \n\t\t\tfrm.trigger('fetch')\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.stock_popup',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code,\n\t\t\t\t\t'company': frm.doc.company\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\tfrm.get_field(\"items_html\").$wrapper.html(d.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.po_popup',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\tfrm.get_field(\"po_html\").$wrapper.html(d.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_item_rate',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code,\n\t\t\t\t\t'company': frm.doc.company,\n\t\t\t\t\t'price_list': frm.doc.selling_price_list\n\t\t\t\t},\n\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tchild.rates = r.message\n\t\t\t\t\t\tchild.rate = r.message\n\t\t\t\t\t\tchild.unit_price = r.message\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\t\n\t\t}\n\t},\n   \n\trate(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t    child.unit_price = child.rate\n\t   // child.margin_rate = child.unit_price + (child.unit_price * child.margin_percentage )\n\t   // child.discount_rate = child.margin_rate - (child.margin_rate * child.discount )\n\t    frm.refresh_field(\"items\")\n\t},\n\tunit_price(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t\tchild.margin_rate = child.unit_price * (child.margin_percentage/100)\n\t\tchild.margin_value = child.margin_rate + child.unit_price\n\t\tchild.discount_rate = ((child.discount/100) * child.margin_value )\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tmargin_percentage(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tconsole.log(child.margin_percentage)\n\t\tchild.margin_rate = child.unit_price * (child.margin_percentage/100)\n\t\tchild.margin_value = child.margin_rate + child.unit_price\n\t\tchild.discount_rate = ((child.discount/100) * child.margin_value )\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tmargin_rate(frm,cdt,cdn){\n    \tvar child = locals[cdt][cdn]\n\t\tchild.margin_percentage = (child.margin_rate/child.unit_price)*100\n\t\tchild.margin_value = child.margin_rate + child.unit_price\n\t\tchild.discount_rate = ((child.discount/100) * child.margin_value )\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\n\t\tfrm.refresh_field(\"items\")\n\t},\n\n\tdiscount(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tchild.margin_rate = child.unit_price * (child.margin_percentage/100)\n\t\tchild.margin_value = child.margin_rate + child.unit_price\n\t\tchild.discount_rate = ((child.discount/100) * child.margin_value )\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tdiscount_rate(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tchild.discount = (child.discount_rate / child.unit_price) * 100\n\t\tchild.margin_rate = child.unit_price * (child.margin_percentage/100)\n\t\tchild.margin_value = child.margin_rate + child.unit_price\n// \t\tchild.discount_rate = ((child.discount/100) * child.margin_value )\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\n\titems_remove(frm) {\n\t\tfrm.trigger('fetch')\n\t}\n})\n\t\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2022-10-19 11:52:23.667832",
  "name": "Material Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Material Request', {\n    // validate(frm) {\n    //     if(frm.doc.sales_order_number){\n    //     var code = 'F-MR-' + frm.doc.abbr\n    //     var fino = frm.doc.name.slice(-5)\n    //     var fileno = code + '-' + fino\n    //     frm.set_value('file_number', fileno)\n        \n    //     }\n    // },\n    \n    validate(frm){\n        if(frm.doc.workflow_state == \"Draft\"){\n            if (frm.doc.items) {\n            $.each(frm.doc.items, function (i, d) {\n                // d.sales_order_qty = d.qty\n                d.qty = d.sales_order_qty + d.stock_quantity\n                if(d.uom){\n                frappe.call({\n                method: 'norden.custom.check_uom',\n                args: {\n                    'item_code':d.item_code,\n                },\n                callback(r) {\n                    if (r.message){\n                        console.log(r.message)\n                        if(d.uom != r.message){\n                            frappe.msgprint(\"Unit of measurement of an item cannot be changed\")\n                            frappe.validated = false;\n                            \n                        }\n                \n                    }\n                }\n            })\n                    \n                }\n            })\n        }\n        }\n    },\n    \n    onload(frm){\n        if(frm.doc.docstatus != 1){\n             if(frm.doc.transaction_date){\n        let date = frappe.datetime.add_days(frappe.datetime.add_days(frm.doc.transaction_date, 40));\n        frm.set_value(\"schedule_date\",date)\n        }\n        \n        if(frm.doc.file_number){\n            frappe.call({\n            method: 'norden.custom.fetch_customer',\n            args: {\n                'file': frm.doc.file_number\n            },\n            callback(d) {\n                if (d.message) {\n                    console.log(d.message)\n                    frm.set_value(\"customers\",d.message[0])\n                    frm.set_value(\"requester_name\",d.message[1])\n                }\n\n            }\n        })\n        }\n        }\n       \n            \n         if (frm.doc.items) {\n            $.each(frm.doc.items, function (i, d) {\n                d.sales_order_qty = d.qty\n                // d.qty = d.sales_order_qty + d.stock_quantity\n            })\n        }\n        \n        \n        \n        \n        \n    },\n\n    // validate(frm){\n    //             var res = ''\n    //     \t    if(frm.doc.file_number == '')\n    //     \t    res = frm.doc.name\n    //     \t    frm.set_value(\"file_number\",res)\n\n\n    // },\n\n    view_stock_available(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            // item_details['item_name'] = d.item_name\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.utils.stock_available',\n            args: {\n                'item_details': item_details_list\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"approval_stock_available\").$wrapper.html(\"\");\n                    frm.get_field(\"approval_stock_available\").$wrapper.html(d.message);\n                }\n\n            }\n        })\n\n    },\n    view_previous_purchase_orders(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.utils.previous_purchase_orders',\n            args: {\n                'item_details': item_details_list\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"previous_purchase_orrders\").$wrapper.html(\"\");\n                    frm.get_field(\"previous_purchase_orrders\").$wrapper.html(d.message);\n                }\n\n            }\n        })\n\n    },\n    //     onload(frm){\n    //         if(frm.doc.items){\n    //           $.each(frm.doc.items,function(i,d){\n    //               d.sales_order_qty = d.qty\n    //               d.qty = d.sales_order_qty + d.stock_quantity\n    //               console.log(d.qty)\n    //           })\n    //         }\n\n    //   },\n    refresh(frm) {\n\n        // \t  frm.set_value('customer_name',customer)\n\n\n        $(\"[data-fieldname='item_name']\").on('click', (e) => {\n            const item_name = $(e.currentTarget).text();\n            frappe.call({\n                method: 'norden.custom.mat_req',\n                args: {\n                    'item_table': frm.doc.items\n                },\n                callback(d) {\n                    if (d.message) {\n                        $(\"[data-fieldname='item_name']\").popover({\n                            html: true,\n                            sanitize: false,\n                            container: 'body',\n                            content: d.message,\n\n                        });\n                    }\n                }\n            })\n\n        });\n        \n        if (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\n    },\n    company(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n     set_series(frm) {\n        if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t},\n    \n    after_cancel(frm) {\n        let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                console.log(values.reason);\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n\n\n        frappe.msgprint(\"please fill the cancellation remarks\")\n\n\n    },\n    \n   \n\t\n    fetch(frm) {\n        frappe.call({\n            method: 'norden.custom.get_stock_balance',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('stock_availability')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('stock_availability', {\n                            'item_code': v[0],\n                            'item_name': v[1],\n                            'warehouse': v[2],\n                            'qty': v[3],\n                            'uom': v[4],\n                            'value': v[5]\n                        })\n                        frm.refresh_field('stock_availability')\n                    })\n                }\n            }\n        })\n        frappe.call({\n            method: 'norden.custom.get_previous_po',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('previous_purchase_order')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('previous_purchase_order', {\n                            'item_code': v[0],\n                            'item_name': v[1],\n                            'supplier': v[2],\n                            'qty': v[3],\n                            'po_date': v[4],\n                            'amount': v[5],\n                            'purchase_order': v[6]\n                        })\n                        frm.refresh_field('previous_purchase_order')\n                    })\n                }\n            }\n        })\n        frappe.call({\n            method: 'norden.custom.get_out_qty',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('stock_out_qty')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('stock_out_qty', {\n                            'item_code': v[0],\n                            'warehouse': v[1],\n                            'qty': v[2],\n                            'date': v[3],\n                            'out_type': v[4]\n                        })\n                        frm.refresh_field('stock_out_qty')\n                    })\n                }\n            }\n        })\n        // frappe.call({\n        //     method:'norden.custom.get_item_quantity',\n        //     args:{\n        //         'item_table':frm.doc.items\n        //     },\n        //     callback(r){\n        //         console.log(r.message)\n        //     }\n        // })\n    },\n    view_item_details(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            item_details['item_name'] = d.item_name\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.custom.mat_req',\n            args: {\n                'item_details': item_details_list,\n                \"company\":frm.doc.company\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"approval_stage\").$wrapper.html(\"\");\n                    frm.get_field(\"approval_stage\").$wrapper.html(d.message);\n\n                }\n            }\n        })\n\n    },  \n    // frappe.ui.form.on('Material Request Item', {\n\n    // \titem_code(frm,cdt,cdn) {\n    // \t     var child = locals[cdt][cdn]\n    // \t    if(child.item_code){\n    // \t        console.log(child.item_code)\n\n    // // \t  frm.trigger('fetch')\n    // \t  frappe.call({\n    // \t        method: 'norden.custom.mat_req',\n    // \t        args:{\n    // \t            'item_code':child.item_code,\n    // \t            'qty':child.qty,\n    // \t            'type':child.type,\n    // \t        },\n    // \t        callback(d){\n    // \t           if (d.message){\n    // \t                frm.get_field(\"approval_stage\").$wrapper.html(d.message);\n\n    // \t           }\n    // \t       }\n    // \t    })\n\n    // \t    }\n    // \t    }\n\n    // })\n}),\n    frappe.ui.form.on('Material Request Item', {\n        item_code(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            if (child.item_code) {\n                //  child.delivery_terms = frm.doc.delivery_terms\n                frm.trigger('fetch')\n                frappe.call({\n                    method: 'norden.custom.stock_popup',\n                    args: {\n                        'item_code': child.item_code,\n                        \"company\":frm.doc.company\n                    },\n                    callback(d) {\n                        if (d.message) {\n                            frm.get_field(\"items_html\").$wrapper.html(d.message);\n                        }\n                    }\n                })\n\n            }\n\n        },\n        items_remove(frm) {\n            frm.trigger('fetch')\n        },\n    }),\n        frappe.ui.form.on('Material Request Item', {\n            item_code(frm, cdt, cdn) {\n                var child = locals[cdt][cdn]\n                if (child.item_code) {\n                    frm.trigger('fetch')\n                    frappe.call({\n                        method: 'norden.custom.po_popup',\n                        args: {\n                            'item_code': child.item_code\n                        },\n                        callback(d) {\n                            if (d.message) {\n                                console.log(d.message)\n                                frm.get_field(\"po_html\").$wrapper.html(d.message);\n                            }\n                        }\n                    })\n\n                }\n\n            },\n            items_remove(frm) {\n                frm.trigger('fetch')\n            }\n        })\n                     \n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2022-09-07 11:13:00.519122",
  "name": "Purchase Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Order', {\n    \n//     alternate_supplier(frm){\n//         if (frm.doc.alternate_supplier){\n// \t       frm.set_query(\"alternate_supplier_address\", function() {\n// \t\t\treturn {\n// \t\t\t\tquery: \"norden.custom.get_address\",\n// \t\t\t\tfilters :{\n// \t\t\t\t    'supplier':frm.doc.alternate_supplier\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t};\n// \t\t});\n\t          \n// \t        }\n        \n//     },\n    \n    schedule_date(frm){\n    if(frm.doc.schedule_date){\n        var date = moment(frm.doc.schedule_date).format('YYYY-MM-DD');\n        console.log(date)\n        $.each(frm.doc.items,function(i,v){\n         v.schedule_date = date ;\n        });\n\n        \n    }\n    frm.refresh_fields(\"items\")\n    },\n    \n     after_cancel(frm){\n         let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                console.log(values.reason);\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n    \n        });\n        \n            d.show();\n              // frappe.msgprint(\"please fill the cancellation remarks\")\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\n\ton_submit(frm){\n\t   // if(frm.doc.supplier == \"Altair\"){\n\t   //     cur_frm.cscript.update_status('Close', 'Closed')\n\t   // }\n\t   if(frm.doc.supplier == \"Altair\"){\n\t        frappe.call({\n\t\t\tmethod: \"norden.custom.check_po\",\n\t\t\targs: {\n\t\t\t    \"original\":frm.doc.original_purchase_order,\n\t\t\t    \"name\":frm.doc.name\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message == \"yes\") {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t       \n\t   }\n\t  \n\t    \n\t},\n\t\n    onload(frm){\n        if(frm.doc.__islocal){\n            frm.set_value(\"prepared_by\",frappe.session.user)\n\t    }\n\t    \n        if(frm.doc.workflow_state == \"Pending for purchase manager\" && frappe.user.has_role('Purchase Manager')){\n            frappe.call({\n                method: 'norden.custom.get_approver',\n                args: {\n                    'user':frappe.session.user,\n                },\n                callback(r) {\n                    if (r.message) {\n                        frm.set_value(\"approver\",r.message)\n                    }\n                }\n            })\n        }\n//         frappe.call({\n// \t\t\tmethod: \"norden.custom.check_altair\",\n// \t\t\targs: {\n// \t\t\t    \"name\":frm.doc.name\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message == \"No\") {\n// \t\t\t\t\tfrm.add_custom_button(__(\"Process through Altair\"), function () {\n//             // cur_frm.copy_doc();\n//             frappe.call({\n// \t\t\tmethod: \"norden.custom.create_altair\",\n// \t\t\targs: {\n// \t\t\t    \"name\":frm.doc.name,\n// \t\t\t    \"supplier\":frm.doc.supplier,\n// \t\t\t    \"requester\":frm.doc.requester_name,\n// \t\t\t    \"series\":frm.doc.naming_series,\n// \t\t\t    \"company\":frm.doc.company,\n// \t\t\t    \"date\":frm.doc.transaction_date,\n// \t\t\t    \"required\":frm.doc.schedule_date,\n// \t\t\t    \"consignment_type\":frm.doc.consignment_type,\n// \t\t\t    \"country\":frm.doc.country,\n// \t\t\t    \"trn\":frm.doc.our_trn,\n// \t\t\t    \"cargo_type\":frm.doc.mode_of_dispatch,\n// \t\t\t    \"items\":frm.doc.items,\n// \t\t\t    \"batch\":frm.doc.batch,\n// \t\t\t    \"supplier_address\":frm.doc.supplier_address,\n// \t\t\t    \"billing_address\":frm.doc.billing_address,\n// \t\t\t    \"set_warehouse\":frm.doc.set_warehouse,\n// \t\t\t    \"biliing_address_display\":frm.doc.billing_address_display,\n// \t\t\t    \"tax_category\":frm.doc.tax_category,\n// \t\t\t    \"taxes_and_charges\":frm.doc.taxes_and_charges,\n// \t\t\t    \"payments_terms\":frm.doc.payment_terms_template\n\t\t\t    \n\t\t\t    \n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message) {\n// \t\t\t\t\tfrappe.msgprint(r.message)\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}\n\t\t\t\n// \t\t})\n\n//             });\n           \n\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t\tfrm.doc.reload\n    },\n    \n    swap_supplier(frm){\n        if(frm.doc.swap_supplier == 0){\n            frm.set_value(\"alternate_supplier\",'')\n        }\n    },\n\t\n\trefresh(frm) {\n\t    if(!frm.doc.__islocal){\n\t        frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Purchase Order\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n            \n        }\n             \n         \n\t   \n\t    \n\t    if(frm.doc.swap_supplier){\n\t        frm.add_custom_button(__(\"Ref. Suppl\"), function () {\n                var f_name = frm.doc.name;\n                var print_format =\"Altair\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t        \n\t    }\n\t    \n\t   \n\t        \n\t    \n\n        \t    \n\t    if(frm.doc.docstatus == 1){\n\t\tfrm.add_custom_button(__('Logistics Request'), function(){\n\t\n\t    var lg = frappe.model.make_new_doc_and_get_name('Logistics Request');\n        lg = locals['Logistics Request'][lg];\n        lg.order_no = frm.doc.name\n        lg.logistic_type = \"Import\"\n        lg.po_so = \"Purchase Order\"\n        frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n\t\t    \n\t    })\n\t    \n\t}\n\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tvalidate(frm){\n\t    if(frm.doc.name){ \n\t    var val = 0\n\t    val = frm.doc.name.slice(16);\n        if(val.length == \"5\"){\n        var res = 0\n\t    res = frm.doc.name.slice(-10);\n\t    var ab = frm.doc.abbr +\"-\"+ res\n\t    frm.set_value(\"batch\",ab)\n\t    } \n\t    \n\t    \n\t    if(val.length > \"5\"){\n\t    var res = 0\n\t    res = frm.doc.name.slice(-12);\n\t    var ab = frm.doc.abbr +\"-\"+ res\n\t    frm.set_value(\"batch\",ab)\n\t    }\n\t   // frm.reload_doc();\n\t    }\n\t   \n\t  \n\t    \n\t    \n\t   //  \n    // \t    console.log(frm.doc.name.length)\n\t   //  frappe.call({\n    //             method: 'norden.custom.create_batch',\n    //             args: {\n    //                 'name':frm.doc.name\n    //             },\n    //             callback(r) {\n    //                 if (r.message) {\n                \n    //                 }\n    //             }\n    //         })\n\t    \n\t     $.each(frm.doc.items,function(i,v){\n\t       //  console.log(v.qty)\n              v.ordered = v.qty\n              if(v.uom){\n                frappe.call({\n                method: 'norden.custom.check_uom',\n                args: {\n                    'item_code':v.item_code,\n                },\n                callback(r) {\n                    if (r.message){\n                        console.log(r.message)\n                        if(v.uom != r.message){\n                            frappe.msgprint(\"Unit of measurement of an item cannot be changed\")\n                            frappe.validated = false;\n                            \n                        }\n                \n                    }\n                }\n            })\n                  \n              }\n            })\n            frm.refresh_field('items')\n            \n\t},\n\n\t   // frm.set_value('our_trn','frm.doc.items[0].material_request')\n\t   \n// \t   //  if(!frm.doc.file_number && frm.doc.amended_from){\n\n// \t   // var file=0\n// \t   // var res = 0\n// \t   // res = frm.doc.name.slice(-12);\n// \t   // console.log(res)\n// \t   // file = \"NORDEN-PO-\"+res\n// \t   // console.log(file)\n// \t   // frm.set_value(\"file_number\", file)\n// \t   //  }\n\t\n\t     \n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n\n// \tcompany(frm){\n\t   \n\t   \n// \t    if(frm.doc.company == 'Norden Communication India'){\n// \t        frm.set_value('naming_series','PUR-ORD-NC-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Singapore PTE LTD'){\n// \t        frm.set_value('naming_series','PUR-ORD-NSPL-.YYYY.-')\n// \t         frm.set_value('currency','USD')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication UK Limited'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCUL-.YYYY.-')\n// \t         frm.set_value('currency','GBP')\n// \t    }\n// \t    else if(frm.doc.company == 'Sparcom Ningbo Telecom Ltd'){\n// \t        frm.set_value('naming_series','PUR-ORD-SNTL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Middle East FZE'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCMEF-.YYYY.-')\n// \t         frm.set_value('currency','AED')\n// \t    }\n// \t     else if(frm.doc.company == 'Norden Communication Middle East FZE Dubai'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCMEFD-.YYYY.-')\n// \t         frm.set_value('currency','AED')\n// \t    }\n// \t    else if(frm.doc.company == 'NCPL -Bangalore'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCPLB-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Pvt Ltd'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCPLP-.YYYY.-')\n// \t    }\n// \t},\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n});\n\nfrappe.ui.form.on('Purchase Order Item', {\n item_code(frm, cdt, cdn) {\n        var child = locals[cdt][cdn]\n        if (child.item_code) {\n            frm,refresh_field(\"po_html\")\n            frm.trigger('fetch')\n            frappe.call({\n                method: 'norden.custom.stock_popup',\n                args: {\n                    'item_code': child.item_code,\n                    'company':frm.doc.company\n                },\n                callback(d) {\n                    if (d.message) {\n                        frm.get_field(\"items_html\").$wrapper.html(d.message);\n                    }\n                }\n            })\n            \n            frappe.call({\n                method: 'norden.custom.po_popup',\n                args: {\n                    'item_code': child.item_code,\n                    'company':frm.doc.company\n                },\n                callback(d) {\n                    if (d.message) {\n                        frm.get_field(\"po_html\").$wrapper.html(d.message);\n                    }\n                    frm.refresh_field(\"po_html\")\n                }\n            })\n            \n            //  frappe.call({\n            //     method: 'norden.custom.get_supplier_part',\n            //     args: {\n            //         'item_code': child.item_code,\n            //     },\n            //     callback(r) {\n            //         if (r.message) {\n            //             console.log(r.message)\n            //         }\n            //     }\n            // })\n            \n            \n            // frappe.call({\n            //     method: 'norden.custom.po_popup',\n            //     args: {\n            //         'item_code': child.item_code\n            //     },\n            //     callback(d) {\n            //         if (d.message) {\n            //             frm.get_field(\"po_html\").$wrapper.html(d.message);\n            //         }\n            //     }\n            // })\n\n\n        }\n\n    },\n    items_remove(frm) {\n        frm.trigger('fetch')\n    }\n    \n})\n\n// frappe.ui.form.on('Purchase Order Item', {\n//     item_code(frm, cdt, cdn) {\n//         var child = locals[cdt][cdn]\n//         if (child.item_code) {\n//             frm.trigger('fetch')\n            \n//         }\n\n//     },\n//     items_remove(frm) {\n//         frm.trigger('fetch')\n//     }\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 3 Sticker",
  "enabled": 1,
  "modified": "2021-10-28 12:31:33.553587",
  "name": "Norden 3 Sticker-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Norden 3 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Norden 3 Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 3 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Norden 3 Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 3 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2022-06-21 16:43:59.378689",
  "name": "Employee-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Employee', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tbefore_save(frm){\n\t    if (frm.doc.__islocal){\n\t    frappe.call({\n    method:\"frappe.client.get_value\",\n    args: {\n        doctype:\"Country\",\n        filters: {\n           \n            name:frm.doc.employee_location\n        },\n        fieldname:[\"country_code\",\"continent_code\"]\n    }, \n    callback: function(r) {\n       \n        var emp_code = r.message.continent_code+\"-\"+r.message.country_code+\"-\"\n        if(frm.doc.employment_type == \"Consultant\"){\n            emp_code = '9'+'-'+ emp_code\n        }\n        frappe.call({\n            method : 'norden.custom.get_emp_code',\n            args:{\n                code : emp_code\n            },\n            callback(r){\n                 frm.set_value(\"employee_number\",r.message)\n            }\n        })\n    }\n})\n}\n\t},\n\tafter_save(frm){\n\t    frappe.call({\n\t        method : 'norden.custom.create_sales_person',\n\t        args :{\n\t            emp : frm.doc.name\n\t        }\n\t    })\n\t},\n\tvalidate:function(frm){\n\t    var ctc = frm.doc.basic+frm.doc.hra+frm.doc.conveyance+frm.doc.vehicle_and_fuel_allowance+frm.doc.other_allowance\n\t    frm.set_value('ctc',ctc)\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Follow UP",
  "enabled": 1,
  "modified": "2021-11-17 15:11:53.898970",
  "name": "Sales Followup-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Follow UP', {\n\trefresh(frm) {\n\t\thide_field(['status']);\n\t\tif(frm.doc.follow_up_for==\"Lead\"){\n\t\t    frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    if(r.message.status == 'Converted'){\n\t\t\t\t\t        $(frm.fields_dict.customer_info.wrapper).append(\"<div class='fa fa-info'> <b>Customer has been already created against this Lead, You can either follow against this document or create a new followup with customer under 'Follow up for' Menu.<b></div>\");\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t    unhide_field(['status']);\n\t\t}\n\t\tif(frm.doc.__islocal){\n\t\t    frm.set_value('next_contact_by',frappe.session.user)\n\t\t    frm.set_value('account_manager',frappe.session.user)\n\t\t}\n\t\t\n\t\t\n\t},\n\tonload(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t    frm.set_query('lead_customer', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"status\": [\"!=\",'Converted']\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t    }\n\t},\n\tlead_customer(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"status\",r.message.status)\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.company_name)\n\t\t\t\t\t    frm.set_value(\"person_name\",r.message.lead_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.lead_owner)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tunhide_field(['status']);\n\t    }\n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Customer',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.customer_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.account_manager)\n\t\t\t\t\t    frm.set_value(\"billing_currency\",r.message.default_currency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t    }\n\t},\n\t\n\tfollow_up_for(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t    \n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          hide_field(['status']);\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2022-09-13 12:08:11.435958",
  "name": "Sales Order-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Order', {\n    delivery_date(frm){\n    \n\t\t$.each(frm.doc.items,function(i,d){\n\t\t   \n\t\t\td.delivery_date = frm.doc.delivery_date\n\t\t\tconsole.log(d)\n\t\t\t\n\t\t})  \n    },\n    \n    validate(frm){\n         if(!frm.doc.sales_team){\n            if(frm.doc.sales_person_name){\n            frm.add_child('sales_team',{\n                'sales_person':frm.doc.sales_person_name,\n                'allocated_percentage':100\n        \n            })\n            frm.refresh_field('sales_team')\n}\n         }\n        \n\n    },\n    \n//     item_details(frm){\n//         var item_details_list = []\n//         var item_details = {}\n//         $.each(frm.doc.items, function (i, d) {\n//             item_details = {}\n//             item_details['item_code'] = d.item_code\n//             item_details['item_name'] = d.item_name\n//             item_details['description'] = d.description\n//             item_details['qty'] = d.qty\n//             item_details['rate'] = d.rate\n//             item_details['special_cost'] = d.special_cost\n//             item_details_list.push(item_details)\n//         })\n//         frappe.call({\n// \t        method : \"norden.custom.get_margin_details\",\n// \t        args:{\n//                 'item_details': item_details_list,\n//                 \"company\":frm.doc.company\n// \t        },\n// \t        callback(r){\n// \t            if (r.message ) {\n// \t\t\t\t    console.log(r.message)\n// \t\t\t\t\tfrm.fields_dict.margin.$wrapper.empty().append(r.message)\n// \t\t\t\t}\n\t        \n\t            \n// \t        }\n// \t    })\n        \n// \t},\n    onload(frm){\n        if(frm.doc.__islocal ){\n\t   frm.set_value(\"prepared_by\",frappe.session.user)\n\t    }\n    },\n\t\n     after_cancel(frm){\n         let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                console.log(values.reason);\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n                //console.log(d);\n                //frm.set_value('test',reason);\n                //frappe.msgprint(\"please fill the cancellation remarks\");\n\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\tsame_as(frm){\n\t    if(frm.doc.same_as == '1')\n\t    {\n\t        var add = 0\n\t        add = frm.doc.customer_address\n\t        frm.set_value('shipping_address_name',add)\n\t    }\n\t},\n\t\n\ton_submit(frm){\n\t    frappe.call({\n\t        method : \"norden.custom.create_material_request\",\n\t        args:{\n\t            'item_table':frm.doc.items,\n\t            'company' : frm.doc.company\n\t        },\n\t        callback(d){\n\t            console.log(d.message)\n\t        }\n\t    })\n\t},\n\trefresh(frm) {\n\t    if(frm.doc.docstatus == 1){\n\t        frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Sale Order\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t    \n            frm.add_custom_button(__(\"Print Proforma Invoice\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Proforma Invoice\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t    }\n            // if(frm.doc.workflow_state == 'Pending for COO' || frm.doc.workflow_state == 'Pending for CFO'){\n             frm.add_custom_button(__(\"Margin Details\"), function () {\n                    var item_details_list = []\n                    var item_details = {}\n                    $.each(frm.doc.items, function (i, d) {\n                        item_details = {}\n                        item_details['item_code'] = d.item_code\n                        item_details['item_name'] = d.item_name\n                        item_details['description'] = d.description\n                        item_details['qty'] = d.qty\n                        item_details['rate'] = d.rate\n                        item_details['special_cost'] = d.special_cost\n                        item_details_list.push(item_details)\n                    })\n                    \n                    frappe.call({\n            \t        method : \"norden.custom.get_margin_details\",\n            \t        args:{\n                            'item_details': item_details_list,\n                            \"company\":frm.doc.company,\n                            \"exchange_rate\":frm.doc.conversion_rate,\n                            \"currency\":frm.doc.currency,\n                            \"name\":frm.doc.name\n                            \n            \t        },\n            \t        callback(r){\n            \t            if (r.message ) {\n                                let d = new frappe.ui.Dialog({\n                                    size:\"extra-large\",\n                                    title: 'Margin',\n                                    fields: [\n                                        {\n                                            label: 'Margin',\n                                            fieldname: 'margin',\n                                            fieldtype: 'HTML'\n                                        },\n                                    ],\n                                    \n                                });\n                                d.fields_dict.margin.$wrapper.html(r.message);\n                                d.show();\n            \t\t\t\t\t\n            \t\t\t\t}\n            \t        }\n            \t    })\n               \n                \n\n            });\n            // }\n\t    \n\t    \n\t\tif(frm.doc.__islocal){\n\t\t    \n\t\t    if(frm.doc.converted_by){\n\t\t    frappe.call({\n\t        method: 'norden.custom.get_sales_person',\n\t        args:{\n\t            'converted_by':frm.doc.converted_by\n\t        },\n\t        callback(r){\n\t            if(r.message){\n\t                frm.add_child('sales_team',{\n\t                    sales_person : r.message[0],\n\t                    commission_rate : r.message[1],\n\t                    allocated_percentage : '100',\n\t                    allocated_amount : frm.doc.base_net_total,\n\t                    incentives : frm.doc.base_net_total/r.message[1]\n\t                })\n\t                frm.refresh_field('sales_team')\n\t            }\n\t        }\n\t\t    })\n\t\t}\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n    \n\t\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t}\n})\n\n\n\nfrappe.ui.form.on('Sales Order Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t}\n})\n\nfrappe.ui.form.on('Sales Order Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'norden.custom.stock_popup',\n\t        args:{\n\t            'item_code':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t     frappe.call({\n\t        method: 'norden.custom.po_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.out_qty_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2022-06-02 17:27:26.448933",
  "name": "Opportunity-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Opportunity', {\n    // party_name(frm){\n    //     if (frm.doc.party_name){\n    //         frappe.call({\n    //             method : \"frappe.client.get_value\",\n    //             args : {\n    //                 doctype : frm.doc.opportunity_from,\n    //                 filters : {\n    //                     name : frm.doc.party_name\n    //                 },\n    //                 fieldname : ['customer_group']\n    //             },\n    //             callback(r){\n    //                 console.log(r.message)\n    //                 frm.set_value('group',r.message.customer_group)\n    //             }\n    //         })\n    //     }\n    // },\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n    converted_by(frm){\n        if(frm.doc.converted_by){\n    frappe.call({\n    \t\tmethod: \"frappe.client.get_list\",\n    \t\targs: {\n    \t\t\tdoctype: \"Contact\",\n    \t\t\tfilters: {\n    \t\t\t\t\"user\": frm.doc.converted_by\n    \t\t\t},\n\t\t\t\tfields:['phone', 'designation']\n    \t\t},\n\t\t\tcallback(r){\n\t            if(r.message){\n\t                console.log(r.message)\n\t\t\t\t\t$.each(r.message,function(i,v){\n\t\t\t\t\t    console.log(v.phone)\n\t\t\t\t\t    console.log(v.designation)\n\t\t\t\t\t\tfrm.set_value('sales_person_contact',v.phone)\n\t\t\t\t\t\tfrm.set_value('sales_person_designation',v.designation)\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t})\n        }\n    },\n     prepared_by(frm){\n        if(frm.doc.prepared_by){\n    frappe.call({\n    \t\tmethod: \"frappe.client.get_list\",\n    \t\targs: {\n    \t\t\tdoctype: \"Contact\",\n    \t\t\tfilters: {\n    \t\t\t\t\"user\": frm.doc.prepared_by\n    \t\t\t},\n\t\t\t\tfields:['phone', 'designation']\n    \t\t},\n\t\t\tcallback(r){\n\t            if(r.message){\n\t                console.log(r.message)\n\t\t\t\t\t$.each(r.message,function(i,v){\n\t\t\t\t\t    console.log(v.phone)\n\t\t\t\t\t    console.log(v.designation)\n\t\t\t\t\t\tfrm.set_value('prepared_contact',v.phone)\n\t\t\t\t\t\tfrm.set_value('prepared_designation',v.designation)\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t})\n        }\n    },\n\trefresh(frm) {\n\t\t\tif(frm.doc.__islocal){\n\t\t    frm.set_value('prepared_by',frappe.session.user)\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('national_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('national_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\t\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('regional_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('regional_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('system_integrator', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('system_integrator', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('end_user', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('end_user', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('stockists', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('stockists', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Stockistss\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t    }\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\t\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t     frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t}\n})\n\nfrappe.ui.form.on('Opportunity Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t}\n})\n\nfrappe.ui.form.on('Opportunity Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'norden.custom.stock_popup',\n\t        args:{\n\t            'item_code':child.item_code,\n\t            'company':frm.doc.company\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t                frm.get_field(\"items_html\").$wrapper.html(d.message);\n\t           }\n\t       }\n\t    })\n\t   //  frappe.call({\n\t   //     method: 'norden.custom.po_popup',\n\t   //     args:{\n\t   //         'item':child.item_code\n\t   //     },\n\t   //     callback(d){\n\t   //        if (d.message){\n\t   //            frappe.msgprint(d.message)\n\t   //        }\n\t   //    }\n\t   // })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.out_qty_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Product Sticker",
  "enabled": 1,
  "modified": "2021-12-21 12:40:35.731529",
  "name": "Eyenor Product Sticker-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Eyenor Product Sticker', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__('Generate PDF'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Eyenor Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Product Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Price Sticker",
  "enabled": 1,
  "modified": "2021-12-21 18:00:02.409552",
  "name": "Eyenor Price Sticker-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Eyenor Price Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Generate PDF'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Price Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t});\n\t\t\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Adapter Sticker",
  "enabled": 1,
  "modified": "2021-12-21 19:13:55.827858",
  "name": "Eyenor Adapter Sticker-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Eyenor Adapter Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Generate PDF'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Adapter Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Adapter Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t});\n\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2022-07-28 14:28:19.258050",
  "name": "Delivery Note-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Delivery Note', {\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\trefresh(frm) {\n\t\tif (!frm.doc.__islocal){\n\t\t    frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Delivery\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Delivery Note\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t\t}\n\t},\n\tcompany(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t}\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2022-08-15 17:51:01.601810",
  "name": "Purchase Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Invoice', {\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\n\tonload_post_render(frm){\n\t    frappe.db.get_value('Purchase Receipt', frm.doc.purchase_receipt_no, 'taxes_and_charges')\n        .then(r => {\n            console.log(r.message.taxes_and_charges) // Open\n            frm.set_value('taxes_and_charges',r.message.taxes_and_charges)\n        })\n\t    \n\t},\n\t\n\trefresh(frm) {\n\t\tif(!frm.doc.__islocal){\n\t\t    frm.add_custom_button(__(\"Print Invoice Row\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Invoice row\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Invoice\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n             frm.add_custom_button(__(\"Print Invoice India\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Invoice India\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Invoice\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Request for Quotation",
  "enabled": 1,
  "modified": "2022-04-27 15:10:04.735908",
  "name": "Request for Quotation-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Request for Quotation', {\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\trefresh(frm) {\n\t    if(!frm.doc.__islocal){\n\t         frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Request for Quotation\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Request for Quotation\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2022-07-19 11:20:48.220109",
  "name": "Journal Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Journal Entry', {\n\trefresh(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n\t\n// \tcompany(frm){\n// \t    if(frm.doc.company == 'Norden Communication Private Limited Panangad'){\n// \t        frm.set_value('naming_series','ACC-JV-NCPLP-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Private Limited Bangalore'){\n// \t        frm.set_value('naming_series','ACC-JV-NCPLB-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication India'){\n// \t        frm.set_value('naming_series','ACC-JV-NC-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Singapore PTE LTD'){\n// \t        frm.set_value('naming_series','ACC-JV-NSPL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication UK Limited'){\n// \t        frm.set_value('naming_series','ACC-JV-NCUL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Sparcom Ningbo Telecom Ltd'){\n// \t        frm.set_value('naming_series','ACC-JV-SNTL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Middle East FZE'){\n// \t        frm.set_value('naming_series','ACC-JV-NCMEF-.YYYY.-')\n// \t    }\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2022-09-06 12:15:23.875298",
  "name": "Sales Invoice-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t        if (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\tif(!frm.doc.__islocal){\n\t\t\t    frm.add_custom_button(__(\"Sales Invoice India\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Sales Invoice India\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                    + \"&letterhead=\" + encodeURIComponent(\"Norden\")\n                   ));\n            \n\n            }, __(\"Print Invoice for\"));\n\t\t\t\n             frm.add_custom_button(__(\"Sales Invoice\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Sales Invoice1\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                    + \"&letterhead=\" + encodeURIComponent(\"Norden\")\n                   ));\n            \n\n            },__(\"Print Invoice for\"));\n\t\t\t}\n\t},\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\t\n\tonload(frm){\n        frappe.call({\n        method: 'norden.custom.check_tax',\n        args: {\n            'name':frm.doc.items[0].sales_order\n        },\n        callback(r) {\n            if (r.message){\n                console.log(r.message)\n                frm.set_value(\"taxes_and_charges\",r.message)\n        \n            }\n        }\n    })\n                    \n\t},\n\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n\t\n\t\n\tvalidate(frm) {\n\t   // frappe.call({\n\t   //     method:'norden.utils.get_hsn',\n\t   //     callback(r){\n\t   //         console.log(r.message)\n\t            \n\t   //     }\n\t   // })     \n//         var hsn = []\n//         if(frm.doc.items){\n//             $.each(frm.doc.items,function(i,d){\n// \t\t\thsn = hsn.concat([d.gst_hsn_code])\n// \t\t}) \n//         var obj = hsn.reduce((r, e) => (r[e] = (r[e] || 0) + 1, r), {});\n//         var uniq = Object.keys(obj).filter(e => obj[e] == 1).map(Number)\n//         console.log(uniq)\n//         const findDuplicates = hsn => hsn.filter((item, index) => hsn.indexOf(item) !== index)\n//         const duplicates = findDuplicates(hsn);\n//         console.log(duplicates)\n//         $.each(duplicates,function(i,v){\n//         var total = 0\n//          $.each(frm.doc.items,function(i,d){\n//              if(d.gst_hsn_code == v){\n//                  total = total + d.amount\n//              }\n// \t\t})\n// \t\tconsole.log(total)\n// \t\t  //  frm.clear_table(\"hsn\");\n// \t\t\t frm.add_child('hsn',{\n// \t\t\t    hsn : v,\n//                 total : total,\n//                 state_tax :(total*9)/100,\n//                 central_tax : (total*9)/100,\n//                 // amount : state_tax + central_tax\n//             })\n//             frm.refresh_field('hsn')\n// \t\t\ttotal = 0\n// \t\t})  \n        // }\n        \n        \n        \n//         if(frm.doc.items){\n//         var list = []\n//         var item_details_list = []\n//         var item_details = {}\n//         $.each(frm.doc.items, function (i, d) {\n//             item_details['item_code'] = d.item_code\n//             item_details['item_name'] = d.item_name\n//             item_details['gst_hsn_code'] = d.gst_hsn_code\n//             item_details_list.push(item_details)\n//         })\n//             frappe.call({\n// \t\t\tmethod: \"norden.custom.get_hsn\",\n// \t\t\targs: {\n// \t\t\t    'item_details': item_details_list,\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t    console.log(r.message)\n// \t\t\t\t    $.each(r.message,function(i,v){\n//                     var total = 0\n//                     $.each(frm.doc.items,function(i,d){\n//                     if(d.gst_hsn_code == v){\n//                     total = total + d.amount\n//                     }\n                    \n//             \t\t})\n//             \t\tconsole.log(total)\n//             \t\tconsole.log(v)\n//             // \t\tfrm.clear_table(\"hsn\");\n//         \t\t\tfrm.add_child('hsn',{\n//     \t\t\t    hsn : v,\n//                     total : total,\n//                     state_tax :(total*9)/100,\n//                     central_tax : (total*9)/100,\n//                     })\n//                     frm.refresh_field('hsn')\n//         \t\t\ttotal = 0\n//         \t\t}) \n\t\t\t\t\n                    \t\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n    \n//         }\n        \n            \n           \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2022-09-21 19:02:57.496248",
  "name": "Purchase Receipt-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Purchase Receipt', {\n\trefresh(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t\tif(frm.doc.docstatus == 1){\n\t\t    frm.add_custom_button(__('Logistics Request'), function () {\n\t\t        \tfrappe.set_route(\"Form\", \"Logistics Request\",frm.doc.logistics)\n\t\t        })\n\t\t}\n\t\n// \t\tif(frappe.user.has_role(\"Stock User\") && !frappe.user.has_role(\"Stock Manager\")){\n// \t\t    frm.set_df_property('section_break0', 'hidden', true);\n//             frm.set_df_property('totals', 'hidden', true);\n//             frm.set_df_property('sec_tax_breakup', 'hidden', true);\n//             frm.set_df_property('section_break_42', 'hidden', true);\n//             frm.set_df_property('section_break_46', 'hidden', true);\n// \t    }\n                frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Good Receipt Report\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));(\"Good Receipt Report\")\n            \n\n            });\n\n//             \tfrm.add_custom_button(__(\"Purchase Receipt\"), function () {\n//     \t\t    var f_name = frm.doc.name\n//     \t\t    var print_format = \"Purchase Receipt\";\n//     \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n//     \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n//     \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n//     \t\t\t\t+ \"&trigger_print=1\"\n//     \t\t\t\t+ \"&format=\" + print_format\n//     \t\t\t\t+ \"&no_letterhead=0\"\n//     \t\t\t\t// + \"&letterhead=\" + encodeURIComponent(letter_head)));\n//     \t\t));\t\n\n// \t});\n\t\n},\n\n    setup(frm){\n        if(frappe.user.has_role(\"Stock User\") || frappe.user.has_role(\"Stock Manager\")){\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"rate\",frm.doc.name);\n\t    df.hidden = 1\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"amount\",frm.doc.name);\n\t    df.hidden = 1\n\t   \n\t    }\n\t    \n\t    \n     \n    },\n    \n    \n\tafter_cancel(frm) {\n        let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                console.log(values.reason);\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n\n\n        frappe.msgprint(\"please fill the cancellation remarks\")\n\n\n    },\n    company(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n    \n    set_series(frm) {\n        if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t},\n\t\t\n// \t\tfrm.add_custom_button(__(\"Purchase Receipt\"), function () {\n// \t\t    var f_name = frm.doc.name\n// \t\t    var print_format = \"Purchase Receipt\";\n// \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n// \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n// \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n// \t\t\t\t+ \"&trigger_print=1\"\n// \t\t\t\t+ \"&format=\" + print_format\n// \t\t\t\t+ \"&no_letterhead=0\"\n// \t\t\t\t// + \"&letterhead=\" + encodeURIComponent(letter_head)));\n// \t\t});\t\n\n// \tonload(frm){\n// \t    frappe.call({\n//     \t    method:'norden.custom.ordered_qty',\n//     \t    args:{\n//     \t        'po_no':frm.doc.purchase_order_no\n//     \t    },\n//     \t    callback(r){\n//     \t        if (r.message){\n//     \t            console.log(r.message)\n    \t             \n//     \t        }\n    \t        \n//     \t    }\n//     \t})\n// \t}\n}),\n\n\nfrappe.ui.form.on('Purchase Receipt Item', {\n\tqty(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n\t    if (child.qty){\n\t        var quantity = child.received_qty - child.qty\n\t        child.rejected_qty = quantity\n\t    }\n},\n\n    generate_(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t    var s_no_list = []\n\t    var s_no = parseInt(child.starting_s_no);\n\t    for(var i = 0; i < parseInt(child.received_qty); i++){\n\t        s_no_list.push(s_no)\n\t        \n\t        s_no = s_no + 1\n\t    }\n\t    s_no_list = s_no_list.join('\\n')\n\t    child.serial_no = s_no_list\n\t    refresh_field(\"items\");\n}\n\n\t        \n\t    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "File Number Global Search",
  "enabled": 1,
  "modified": "2022-05-20 15:11:41.807714",
  "name": "File Number Global Search-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('File Number Global Search', {\n\trefresh(frm) {\n\t\tfrm.disable_save()\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2022-05-31 10:57:31.293327",
  "name": "Stock Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2022-05-31 10:54:50.476991",
  "name": "Payment Entry-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Payment Entry', {\n\trefresh(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Request for Sample Item",
  "enabled": 1,
  "modified": "2022-08-23 14:40:58.271666",
  "name": "Request for Sample Item-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Request for Sample Item', {\n// \trefresh(frm) {\n\t    \n\t\n// \t},\n\t\n\tcompany(frm){\n    \tif (frm.doc.company) {\n    \t    frappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t}\n\t}\n\t\n\n\t\n\t \n\t     \n\t \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal",
  "enabled": 1,
  "modified": "2022-07-06 12:42:07.678055",
  "name": "Appraisal-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Appraisal', {\n\trefresh(frm) {\n\t\t// your code here\n\t}\n})\n\nfrappe.ui.form.on('Appraisal Goal', {\n\treq_output: function (frm, cdt, cdn){\n    \t var row = locals[cdt][cdn];\n    \t var score_output = (row.actual_output / row.req_output ) * 5 \n    \t if(score_output > 5){\n    \t     row.score = 5\n    \t }\n    \t else{\n    \t     row.score = score_output\n    \t }\n\t frm.refresh_field('goals')\n\t    \n\tfrm.trigger(\"score_calculation\")\n\t},\n\tscore_calculation: function (frm, cdt, cdn) {\n\tvar row = locals[cdt][cdn];\n\trow.score = (row.req_output / row.actual_output) * 5\n// \t\t if (row.score > 5){\n// \t     row.score=5\n\t // }\n// \t\t console.log(\"row.score\")\n\t frm.refresh_field('goals')\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Logistics Request",
  "enabled": 1,
  "modified": "2022-10-13 16:13:27.848896",
  "name": "Logistics Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Logistics Request', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tonload(frm) {\n\t    if (frm.doc.company) {\n\t\tfrm.trigger(\"set_series\")\n\t}\n\t},\n\t\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\t\targs: {\n\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n// \tonload(frm){\n// \t    frappe.call({\n// \t\t\tmethod: \"norden.custom.fetch_file_number\",\n// \t\t\targs: {\n// \t\t\t\torder_no: frm.doc.order_no,\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message) {\n// \t\t\t\t\tfrm.set_value('file_number', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\t    \n// \t},\n\t\n\t\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expense Claim",
  "enabled": 1,
  "modified": "2022-10-18 12:17:05.541095",
  "name": "Expense Claim-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Expense Claim', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Print Preview\"), function () {\n    \t\t\tvar f_name = frm.doc.name\n    \t\t\tvar print_format = \"Travel Claim\";\n    \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n    \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Expense Claim\")\n    \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n    \t\t\t\t+ \"&trigger_print=1\"\n    \t\t\t\t+ \"&format=\" + print_format\n    \t\t\t\t+ \"&no_letterhead=0\"\n    \t\t\t));\n\t    }); \n\t},\n\t\n\tvalidate(frm){\n\t    var amt = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Travel'){\n\t            amt = amt +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"travel_amount\",amt)\n\t\tvar toll = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Toll / Parking'){\n\t            toll = toll +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"toll\",toll)\n\t\tvar dear = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Dearness'){\n\t            dear = dear +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"dearness\",dear)\n\t\tvar acc = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Accommodation'){\n\t            acc = acc +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"accommodation\",acc)\n\t\tvar rt = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'RTPCR'){\n\t            rt = rt +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"rtpcr\",rt)\n\t},\n\temployee(frm){\n\t    frm.set_value('admin_email_id','aiswarya@nordencommunication.com')\n\t    frm.set_value('hrm_email_id','kareem@nordencommunication.com')\n\t    frm.set_value('accounts_email_id','topson@nordencommunication.com')\n\t    frm.set_value('cfo_email_id','vijay@nordencommunication.com')\n\t    frm.set_value('finance_email_id','sabidha@nordencommunication.com')\n\t    \n\t    if(frm.doc.company == 'Norden Communication Pvt Ltd'){\n\t    frm.set_value('finance_verifier_email_id_1','salini@nordencommunication.com')\n\t    }\n\t    else{\n\t        frm.doc.company == 'Norden Research and Innovation Centre (OPC) Pvt. Ltd'\n\t        frm.set_value('finance_verifier_email_id_2','lakshmi.devi@norden.co.uk')\n\t    }\n\t    \n\t},\n\tcompany(frm){\n\t   if(frm.doc.company){\n\t       var emp_basic = frappe.db.get_value('Company', frm.doc.company, 'default_payable_account')\n\t       .then(r => {\n\t           console.log(r.message.default_payable_account)\n\t           frm.set_value('payable_account',r.message.default_payable_account)\n})\n\t   }\n        \n}\n\n})\n\n\nfrappe.ui.form.on('Expense Claim Detail', {\n    to_om(frm,cdt,cdn){\n        var row = locals[cdt][cdn]\n        row.expense_type = row.type\n        if(row.expense_type == 'Travel'){\n          if(row.mot == 'Own Car'){\n              if(row.fr_om && row.to_om){\n                  var km = row.to_om - row.fr_om\n                  row.km = km\n                  var amt = row.km * 14\n                  row.amount = amt\n                  row.amounts = row.amount\n                  \n                  \n                  \n              }\n            }\n             else{\n                var kr = row.to_om - row.fr_om\n                row.km = kr\n                var amnt = row.km * 8\n                row.amount = amnt\n                row.amounts = row.amount\n        }\n        frm.refresh_field(\"expenses\")\n        } \n       \n    },    \n    type(frm,cdt,cdn) {\n\t\tvar row = locals[cdt][cdn]\n\t\t row.expense_type = row.type\n\t\t frm.refresh_field(\"expenses\")\n\t},\n    \n   custom_sanctioned_amount(frm,cdt,cdn){\n\t    var row = locals[cdt][cdn]\n\t    row.sanctioned_amount = row.custom_sanctioned_amount\n\t    frm.refresh_field(\"expenses\")\n\t},\n\tamounts(frm,cdt,cdn){\n\t    var row = locals[cdt][cdn]\n\t    row.amount = row.amounts\n\t    frm.refresh_field(\"expenses\")\n\t}\n\n})\n    \n  \n\n\n    \n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2022-08-10 16:12:04.146032",
  "name": "Quotation-List",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.listview_settings['quotation'] = {\n    onload(frm){\n        if(frappe.session.user == \"Administrator\"){\n    \tfilters: [[\"status\",\"=\", \"Ordered\"]]\n}\n    }\n\n\n\t\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Pick List",
  "enabled": 1,
  "modified": "2022-08-16 20:17:54.186049",
  "name": "Pick List-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Pick List', {\n\tonload(frm){\n\t    var amt = 0\n\t    $.each(frm.doc.locations, function (i, d) {\n\t        amt = amt + d.amount\n    })\n        frm.set_value('rounded_total',amt)\n        \n        console.log(numberToWords.toWords(amt))\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Travel Request",
  "enabled": 1,
  "modified": "2022-10-11 16:12:26.513735",
  "name": "Travel Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Travel Request', {\n    refresh(frm){\n        frm.add_custom_button(__(\"Print Preview\"), function () {\n    \t\t\tvar f_name = frm.doc.name\n    \t\t\tvar print_format = \"Travel Request\";\n    \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n    \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Travel Request\")\n    \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n    \t\t\t\t+ \"&trigger_print=1\"\n    \t\t\t\t+ \"&format=\" + print_format\n    \t\t\t\t+ \"&no_letterhead=0\"\n    \t\t\t));\n\t    }); \n    },\n    reports_to(frm){\n        frappe.call({\n            'method':'norden.utils.get_user_id_travel_request',\n            'args':{\n                'reports_to':frm.doc.reports_to\n            },\n            callback(r){\n                frm.set_value('reporting_employee_name',r.message[0])\n\t\t\t\tfrm.set_value('reporting_user_id',r.message[1])\n\t\t\t\t\n            }\n        })\n    },\n    onload(frm){\n        frm.set_value('reporting_person_1','1-01-140')\n    },\n  \temployee(frm) {\n  \t    if (frm.doc.employee){\n\t\t    frm.set_value('coo','shabil@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msg('Please Enter the Employee ID')\n\t\t}\n\t}\n   })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 1,
  "modified": "2022-09-21 13:53:24.288433",
  "name": "Salary Slip-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Slip', {\n\trefresh(frm) {\n\t    if(!frm.doc.__islocal){\n\t    frm.add_custom_button(__('Print Slip'), function (){\n\t\t\twindow.open(\n\t\t\t\tfrappe.urllib.get_full_url(`/api/method/frappe.utils.print_format.download_pdf?\n\t\t\t\t\tdoctype=${encodeURIComponent(\"Salary Slip\")}\n\t\t\t\t\t&name=${encodeURIComponent(frm.doc.name)}\n\t\t\t\t\t&format=${encodeURIComponent('Pay Slip')}`)\n\t\t\t);\n\t\t});\n\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2022-09-24 14:50:56.710222",
  "name": "Leave Application-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Leave Application', {\n\temployee(frm) {\n\t\tif (frm.doc.employee){\n\t\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msg('Please Enter the Employee ID')\n\t\t}\n\t},\n\trefresh(frm){\n\t    if(frm.doc.workflow_state == 'Pending for HOD'){\n\t        console.log('hi')\n\t    }\n\t}    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance Request",
  "enabled": 1,
  "modified": "2022-10-13 11:02:30.158928",
  "name": "Attendance Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Attendance Request', {\n\temployee(frm) {\n\t\tif (frm.doc.employee){\n\t\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msg('Please Enter the Employee ID')\n\t\t}\n\t},\n// \trefresh(frm){\n// \t    if(frm.doc.workflow_state == 'Pending for HOD'){\n// \t        console.log('hi')\n// \t    }\n// \t}    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Approvals",
  "enabled": 1,
  "modified": "2022-10-15 13:13:47.108878",
  "name": "Approvals-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Approvals', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"project\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t['Project', 'customer', '=',frm.doc.customer],\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t},\n\t\n\tattach(frm){\n\t\tif(frm.doc.attach){\n\t\t\tfrm.call('get_data').then(r=>{\n\t\t\t\tif (r.message ) {\n\t\t\t\t\tfrm.fields_dict.html.$wrapper.empty().append(r.message)\n\t\t\t\t}\n\n\t\t\t})\t\n\n\t\t}\n\t\telse{\n\t\t    frm.fields_dict.html.$wrapper.empty().append('')\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work From Home Request",
  "enabled": 1,
  "modified": "2022-10-21 15:32:14.481586",
  "name": "Work From Home Request-Form",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Work From Home Request', {\n\temployee(frm){\n\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t   // var user_id = frappe.db.get_value('Employee',{'name':frm.doc.employee},['user_id'])\n\t   // frm.set_value('employee_user_id',user_id)\n\t}\n})",
  "view": "Form"
 }
]