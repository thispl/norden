[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2022-08-10 16:12:04.146032",
  "module": null,
  "name": "Quotation-List",
  "script": "frappe.listview_settings['quotation'] = {\n    onload(frm){\n        if(frappe.session.user == \"Administrator\"){\n    \tfilters: [[\"status\",\"=\", \"Ordered\"]]\n}\n    }\n\n\n\t\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening",
  "enabled": 1,
  "modified": "2023-07-20 20:08:01.950406",
  "module": null,
  "name": "Job Opening-Form",
  "script": "frappe.ui.form.on('Job Opening', {\n    onload(frm){\n        frappe.call({\n\t\t\t'method':'norden.utils.get_user_id',\n\t\t\t'args':{\n\t\t\t},\n\t\t\tcallback(r){\n\t\t\t\t frm.set_value('email_id_hod',r.message)\n\t\t\t}\n\t\t})\n\t\t frm.set_value(\"designation\",frm.doc.job_title)\n\n    },\n\tvalidate(frm) {\n\t    frm.set_value('email_id_coo','shabil@nordencommunication.com')\n\t    frm.set_value('email_id_md','mnharis77@hotmail.com')\n\t    frm.set_value('email_id_hrm','kareem@nordencommunication.com')\n\t    frm.set_value('email_id_hrd','hrd@nordencommunication.com')\n\t    frm.set_value('email_id_cfo','vijay@nordencommunication.com')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Landed Cost Voucher",
  "enabled": 1,
  "modified": "2023-02-13 15:49:14.758013",
  "module": null,
  "name": "Landed Cost Voucher-Form",
  "script": "frappe.ui.form.on('Landed Cost Voucher', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tonload(frm){\n\t     if(frm.doc.__islocal){\n\t\tvar data =[\n\t\t        {'title':'Air Freight Payable -NCPL'},\n\t\t\t\t{'title':'Clearing Charges Payable - NCPL'},\n\t\t\t\t{'title':'Customs Duty Payable - NCPL'},\n\t\t\t\t{'title':'Demurrage Payable - NCPL'},\n\t\t\t\t{'title':'Interest on Duty Payable - NCPL'},\n\t\t\t\t{'title':'Sea Frieght Payable - NCPL'},\n\t\t]\n\t\t         frm.clear_table(\"taxes\")\n\t\t\t\t$.each(data,function(i,v){\n\t\t\t\t\tfrm.add_child('taxes',{\n\t\t\t\t\t\texpense_account:v.title,\n\t\t\t\t\t})\n\t\t\t\tfrm.refresh_field('taxes')\n\t\t\t\t})\n\t\t\t\n\t\t\n\t}\n\t}\n\t\n})\n\nfrappe.ui.form.on('Landed Cost Taxes and Charges', {\n\tcompany_amount(frm,cdt,cdn) {\n\t    var row = locals[cdt][cdn]\n\t\tfrappe.call('norden.utils.update_company_currency', {\n    account_currency: row.account_currency,\n    company_currency: row.company_currency,\n}).then(r => {\n    var exc_rate = r.message\n    row.company_currency_exchange_rate = parseFloat(exc_rate)\n    row.amount = row.company_amount * exc_rate\n    frm.refresh_field(\"taxes\")\n})\n\n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Inspection Template",
  "enabled": 1,
  "modified": "2022-12-21 19:32:29.352454",
  "module": null,
  "name": "Inspection Template-Form",
  "script": "frappe.ui.form.on('Inspection Template', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\t\n\tmaterial_aspects(frm){\n\t    if(frm.doc.material_aspects){\n\t       frappe.call({\n\t\t\t\tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\"doctype\" : \"Inspection Aspects\",\n\t\t\t\t\"fieldname\": \"inspection_specification_child\",\n\t\t\t\t\"filters\" : {'name':\"Material Aspects\"},\n\t\t\t\t},\n\t\t\t\tcallback(r){\n\t\t\t\t$.each(r.message['inspection_specification_child'],function(i,v){\n\t\t\t\tfrm.add_child('material_aspects_table',{\n\t\t\t\t\tspecification:v.specification,\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('material_aspects_table')\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t},\n\t\n\tdimensional_aspects(frm){\n\t    if(frm.doc.dimensional_aspects){\n\t       frappe.call({\n\t           \tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\"doctype\" : \"Inspection Aspects\",\n\t\t\t\t\"fieldname\": \"inspection_specification_child\",\n\t\t\t\t\"filters\" : {'name':\"Dimensional Aspects\"},\n\t\t\t\t},\n\t\t\t\tcallback(r){\n\t\t\t\t$.each(r.message['inspection_specification_child'],function(i,v){\n\t\t\t\tfrm.add_child('dimensional_aspects_table',{\n\t\t\t\t\tspecification:v.specification,\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('dimensional_aspects_table')\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t},\n\t\n\tfunctional_aspects(frm){\n\t    if(frm.doc.functional_aspects){\n\t       frappe.call({\n\t\t\t\tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\"doctype\" : \"Inspection Aspects\",\n\t\t\t\t\"fieldname\": \"inspection_specification_child\",\n\t\t\t\t\"filters\" : {'name':\"Functional Aspects\"},\n\t\t\t\t},\n\t\t\t\tcallback(r){\n\t\t\t\t$.each(r.message['inspection_specification_child'],function(i,v){\n\t\t\t\tfrm.add_child('functional_aspects_table',{\n\t\t\t\t\tspecification:v.specification,\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('functional_aspects_table')\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t},\n\t\n\t\tvisual_aspects(frm){\n\t    if(frm.doc.visual_aspects){\n\t       frappe.call({\n\t\t\t\tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\"doctype\" : \"Inspection Aspects\",\n\t\t\t\t\"fieldname\": \"inspection_specification_child\",\n\t\t\t\t\"filters\" : {'name':\"Visual Aspects\"},\n\t\t\t\t},\n\t\t\t\tcallback(r){\n\t\t\t\t$.each(r.message[\"inspection_specification_child\"],function(i,v){\n\t\t\t\tfrm.add_child('visual_aspects_table',{\n\t\t\t\t\tspecification:v.specification,\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('visual_aspects_table')\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t},\n\t\n\tdocuments_for_factory_inspection(frm){\n\t    if(frm.doc.documents_for_factory_inspection){\n\t       frappe.call({\n\t\t\t\tmethod: \"frappe.client.get\",\n\t\t\t\targs: {\n\t\t\t\t\"doctype\" : \"Inspection Aspects\",\n\t\t\t\t\"fieldname\": \"inspection_specification_child\",\n\t\t\t\t\"filters\" : {'name':\"Documents for Factory Inspection\"},\n\t\t\t\t},\n\t\t\t\tcallback(r){\n\t\t\t\t$.each(r.message['inspection_specification_child'],function(i,v){\n\t\t\t\tfrm.add_child('documents_for_factory_inspection_table',{\n\t\t\t\t\tspecification:v.specification,\n\t\t\t\t})\n\t\t\t\tfrm.refresh_field('documents_for_factory_inspection_table')\n\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\t    }\n\t},\n\n\n\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Inspection",
  "enabled": 1,
  "modified": "2023-12-19 19:54:34.817348",
  "module": null,
  "name": "Item Inspection-Form",
  "script": "// frappe.ui.form.on('Item Inspection', {\n//     // setup(frm){\n//     //     if (frm.doc.bill_of_entry) {\n//     //         frappe.call({\n//     //             method : \"norden.utils.get_pr_po_no\",\n//     //             args : {\n//     //                 'bill':frm.doc.bill_of_entry,\n//     //             },\n//     //             callback(r){\n//     //                 if(r.message){\n//     //                     frm.set_value(\"pr_number\",r.message[0])\n//     //                     frm.set_value(\"po_number\",r.message[1])\n//     //                 }\n//     //             }\n//     //         })\n//     //     }\n//     // },\n//     company_name(frm) {\n// \t\tfrm.set_query(\"accepted_warehouse\", function () {\n// \t\t\treturn {\n// \t\t\t\tfilters: {\n// \t\t\t\t\t\"company\": frm.doc.company_name\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t\tif(frm.doc.company_name){\n//             frappe.call({\n//                 method:\"norden.custom.get_store_warehouse\",\n//                 args:{\n//                     company:frm.doc.company_name,\n//                 },\n//                 callback(r){\n//                     if(r.message){\n//                         frm.set_value('accepted_warehouse',r.message);\n//                     }\n//                 }\n//             })\n// \t\t  //  frappe.db.get_value('Warehouse',{'company': frm.doc.company_name, 'name': ('like', '% Stores %')},'name')\n//     //         .then(r => {\n//     //             if(r.message.name){\n//     //                 var value = r.message.name\n//     //                \n//     //                 frm.set_value('accepted_warehouse',value);\n//     //             }\n//     //         })\n// \t\t}\n//     },\n\n// \tvalidate(frm) {\n\t    \n\t   \n// \t    if (frm.doc.company_name) {\n// \t\tif (frm.doc.__islocal) {\n// \t\t\tfrappe.call({\n// \t\t\t\tmethod: \"norden.utils.get_series\",\n// \t\t\t\targs: {\n// \t\t\t\t\tcompany: frm.doc.company_name,\n// \t\t\t\t\tdoctype: frm.doc.doctype\n// \t\t\t\t},\n// \t\t\t\tcallback(r) {\n// \t\t\t\t\tif (r) {\n// \t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t})\n// \t\t}\n// \t    }\n\t    \n//     if(frm.doc.sample <= 0){\n//         frappe.throw('Enter the Sample Count')\n//     }\n//     {\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_current_date\",\n\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('status_updated_on', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}\n\t\n\t\n\t\t\n\t\t\n\t\n//     if( frm.doc.po_number){\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_batch_no\",\n// \t\t\targs: {\n// \t\t\t\t'purchase_order': frm.doc.po_number,\n\t\t\t\t\n// \t\t\t},\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('batch_number', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}\n\t\n\n\t\n\t\n// \t    if(frm.doc.pr_number){\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_territory_name\",\n// \t\t\targs: {\n// \t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n// \t\t\t},\n// \t\tcallback(r) {\n\t\t\t    \n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('territory', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\t\t\n// \t\t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_file_no\",\n// \t\t\targs: {\n// \t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n// \t\t\t},\n// \t\t    callback(r) {\n\t\t\t  \n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('file_number', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\t\t\n// \t\t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_supplier_in_no\",\n// \t\t\targs: {\n// \t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n// \t\t\t},\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('invoice_no', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}\n\t\n\t\n// \t},\n\t\n// \tsample(frm){\n//         if(frm.doc.sample > frm.doc.received_qty){\n//             frappe.throw('Number of Samples must be less than Received Qty ')\n//         }\n        \n// \t},\n// \tsample_reference(frm){\n// \t    if(frm.doc.sample_reference > frm.doc.sample){\n//             frappe.throw('Sample Reference must be less than Sample')\n// \t    }\n// \t    if(frm.doc.accepted_qty){\n// \t        frm.trigger('calculate')\n// \t    }\n// \t},\n// \tcalculate:function(frm){\n// \t    if(frm.doc.sample_reference && frm.doc.accepted_qty){\n//             var value1 = frm.doc.received_qty\n//             var value2 = frm.doc.sample_reference\n//             var value4 = frm.doc.accepted_qty\n//             var reject = value1 - (value2 + value4)\n//             frm.set_value(\"rejected_qty\",reject)\n//         }\n// \t},\n\t    \n// \taccepted_qty(frm){\n// \t    if(frm.doc.received_qty < frm.doc.accepted_qty){\n//             frappe.throw('Accepted Qty must be less than Received Qty')\n// \t    }\n// \t    if(frm.doc.sample_reference){\n// \t        frm.trigger('calculate')\n// \t    }\n// \t},\n// \trejected_qty(frm){\n// \t    if(frm.doc.sample_reference && frm.doc.rejected_qty && frm.doc.received_qty){\n// \t        var value1 = frm.doc.received_qty\n//             var value2 = frm.doc.sample_reference\n//             var value4 = frm.doc.rejected_qty\n//             var reject = value1 - (value2 + value4)\n//             frm.set_value(\"accepted_qty\",reject)\n// \t    }\n// \t},\n\n// serial_and_batch_bundle(frm){\n//     if(frm.doc.serial_and_batch_bundle){\n//         frappe.call({\n//             method:\"norden.custom.item_ins_serial\",\n//             args:{\n//                 bundle:frm.doc.serial_and_batch_bundle,\n//             },\n//             callback(r){\n//                 if(r.message){\n//                     frm.set_value(\"serial_number\", r.message[0].join('\\n'));\n//                     frm.set_value(\"batch\",r.message[1])\n//                 }\n//             }\n//         })\n//     }\n// },\n\t\n\t\n\t\n// \tonload(frm){\n\t    \n// \t   // if(frm.doc.is__local){\n// \t   //     if(frm.doc.item_code && frm.doc.pr_number && frm.doc.po_number){\n// \t   //         frappe.db.get_value(\"Purchase Receipt Item\",frm.doc.po_number,frm.doc.id,\"serial_no\")\n// \t   //         .then(r=> {\n// \t   //             if(r.message.serial_no){\n// \t   //                 var value = r.message.serial_no\n// \t   //                 frm.set_value('serial_no',value);\n// \t   //             }\n// \t   //         })\n// \t   //     }\n// \t   // }\n\t    \n// \t    if(frm.doc.item_code){\n// \t        frappe.db.get_value('Item',frm.doc.item_code,'item_template')\n//         .then(r => {\n//             if(r.message.item_template){\n//                  var value = r.message.item_template\n//                 frm.set_value('download_report',value);\n//             }\n//             else{\n//                 frm.set_df_property('download_report', 'hidden', 1);\n//             }\n//         })\n        \n// \t    }\n\t    \n\t    \n// \t    frappe.db.get_value('Item',frm.doc.item_code,'has_serial_no')\n//         .then(r => {\n//             var value = r.message.has_serial_no\n//             if(value == 0){\n//                 frm.set_df_property('serial_no', 'hidden', 1);\n//                 frm.set_df_property('rejected_serial_no', 'hidden', 1);\n//             }\n//         })\n        \n//         if(frm.doc.po_number){\n//             frappe.db.get_value('Purchase Receipt',frm.doc.pr_number,'company')\n//         .then(r => {\n//             var value = r.message.company\n//             if(value){\n//                 frm.set_value('company_name',value);\n//             }\n//         })\n//         }\n        \n        \n\t   \n\t   \n// // \t\tfrappe.call({\n// // \t\t\tmethod: \"norden.custom.get_current_date\",\n\n// // \t\tcallback(r) {\n// // \t\t\t\tif (r) {\n// // \t\t\t\t\tfrm.set_value('inspection_date', r.message)\n// // \t\t\t\t}\n// // \t\t\t}\n// // \t\t})\n// \tif(frm.doc.is)\n\t\n// \tif(frm.doc.pr_number){\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_company_name\",\n// \t\t\targs: {\n// \t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n// \t\t\t},\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('company_name', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}\n\t\n// \tif(frm.doc.dn_number){\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_company_name_dn\",\n// \t\t\targs: {\n// \t\t\t\t'dn': frm.doc.dn_number,\n\t\t\t\t\n// \t\t\t},\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('company_name', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t}\n// },\n\t\n// \trefresh(frm){\n\t    \n// \t    if (frm.doc.__islocal) {\n//           frm.set_value(\"inspected_by\",frappe.session.user)\n//             frm.set_value(\"inspection_date\",frappe.datetime.get_today())\n           \n//         } \n        \n// \t    if (!frm.doc.__islocal) {\n// \t\t\tfrm.add_custom_button(__(\"Print Inspection Report\"), function () {\n// \t\t\t\tvar f_name = frm.doc.name\n// \t\t\t\tvar print_format = \"Inspection Report\";\n\t\t\t\t\n\t\t\t\t\n// \t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n// \t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Item Inspection\")\n// \t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n// \t\t\t\t\t+ \"&trigger_print=1\"\n// \t\t\t\t\t+ \"&format=\" + print_format\n// \t\t\t\t\t+ \"&no_letterhead=0\"\n// \t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n// \t\t\t\t));\n// \t\t\t});\n// \t\t}\n// \t},\n\t\n// // \ton_submit(frm){\n// // \t if(frm.doc.sample && frm.doc.pr_number){\n// // \t  frappe.call({\n// // \t\tmethod: \"norden.utils.create_sample_inspection\",\n// // \t\targs: {\n// // \t\t\"sample\":frm.doc.sample,\n// // \t\t\"item\":frm.doc.item_code,\n// // \t\t\"po\":frm.doc.po_number,\n// // \t\t\"pr\":frm.doc.pr_number,\n// // \t\t\"name\":frm.doc.name,\n// // \t\t},\n// // \t\tcallback(r) {\n\t\t\n// // \t}\n// // \t\t})      \n\t    \n// // \t}\n\t\n// // \tif(frm.doc.sample && frm.doc.logistics_request_number){\n// // \t  frappe.call({\n// // \t\tmethod: \"norden.utils.create_sample_inspection_from_lr\",\n// // \t\targs: {\n// // \t\t\"sample\":frm.doc.sample,\n// // \t\t\"item\":frm.doc.item_code,\n// // \t\t\"po\":frm.doc.po_number,\n// // \t\t\"lr\":frm.doc.logistics_request_number,\n// // \t\t\"name\":frm.doc.name,\n// // \t\t},\n// // \t\tcallback(r) {\n\t\t\n// // \t}\n// // \t\t})      \n\t    \n// // \t}\n\t\n// // \tif(frm.doc.sample && frm.doc.dn_number){\n// // \t  frappe.call({\n// // \t\tmethod: \"norden.utils.create_sample_inspection_from_dn\",\n// // \t\targs: {\n// // \t\t\"sample\":frm.doc.sample,\n// // \t\t\"item\":frm.doc.item_code,\n// // \t\t\"so\":frm.doc.so_number,\n// // \t\t\"dn\":frm.doc.dn_number,\n// // \t\t\"name\":frm.doc.name,\n// // \t\t},\n// // \t\tcallback(r) {\n\t\t\n// // \t}\n// // \t\t})      \n\t    \n// // \t}\n// // \t}\n\t\n\t\n\t \n// })\nfrappe.ui.form.on('Item Inspection', {\n    // setup(frm){\n    //     if (frm.doc.bill_of_entry) {\n    //         frappe.call({\n    //             method : \"norden.utils.get_pr_po_no\",\n    //             args : {\n    //                 'bill':frm.doc.bill_of_entry,\n    //             },\n    //             callback(r){\n    //                 if(r.message){\n    //                     frm.set_value(\"pr_number\",r.message[0])\n    //                     frm.set_value(\"po_number\",r.message[1])\n    //                 }\n    //             }\n    //         })\n    //     }\n    // },\n    company_name(frm) {\n\t\tfrm.set_query(\"accepted_warehouse\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"company\": frm.doc.company_name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif(frm.doc.company_name){\n            frappe.call({\n                method:\"norden.custom.get_store_warehouse\",\n                args:{\n                    company:frm.doc.company_name,\n                },\n                callback(r){\n                    if(r.message){\n                        frm.set_value('accepted_warehouse',r.message);\n                    }\n                }\n            })\n\t\t  //  frappe.db.get_value('Warehouse',{'company': frm.doc.company_name, 'name': ('like', '% Stores %')},'name')\n    //         .then(r => {\n    //             if(r.message.name){\n    //                 var value = r.message.name\n    //                \n    //                 frm.set_value('accepted_warehouse',value);\n    //             }\n    //         })\n\t\t}\n    },\n\n\tvalidate(frm) {\n\t    \n\t   \n\t    if (frm.doc.company_name) {\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\t\targs: {\n\t\t\t\t\tcompany: frm.doc.company_name,\n\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t    }\n\t    \n    if(frm.doc.sample_quantity <= 0){\n        frappe.throw('Enter the Sample Count')\n    }\n    {\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_current_date\",\n\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('status_updated_on', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\t\n\t\t\n\t\t\n\t\n    if( frm.doc.po_number){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_batch_no\",\n\t\t\targs: {\n\t\t\t\t'purchase_order': frm.doc.po_number,\n\t\t\t\t\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('batch_number', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\n\t\n\t\n\t    if(frm.doc.pr_number){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_territory_name\",\n\t\t\targs: {\n\t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t    \n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('territory', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_file_no\",\n\t\t\targs: {\n\t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n\t\t\t},\n\t\t    callback(r) {\n\t\t\t  \n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('file_number', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_supplier_in_no\",\n\t\t\targs: {\n\t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('invoice_no', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\t\n\t},\n\t\n\tsample_quantity(frm){\n        if(frm.doc.sample_quantity > frm.doc.received_quantity){\n            frappe.throw('Number of Samples must be less than Received Qty ')\n        }\n        \n\t},\n\tsample_qty(frm){\n\t    if(frm.doc.sample_qty > frm.doc.sample){\n            frappe.throw('Sample Reference must be less than Sample')\n\t    }\n\t    if(frm.doc.accepted_quantity){\n\t        frm.trigger('calculate')\n\t    }\n\t},\n\tcalculate:function(frm){\n\t    if(frm.doc.sample_qty && frm.doc.accepted_quantity){\n            var value1 = frm.doc.received_quantity\n            var value2 = frm.doc.sample_qty\n            var value4 = frm.doc.accepted_quantity\n            var reject = value1 - (value2 + value4)\n            frm.set_value(\"rejected_quantity\",reject)\n        }\n\t},\n\t    \n\taccepted_quantity(frm){\n\t    if(frm.doc.received_quantity < frm.doc.accepted_quantity){\n            frappe.throw('Accepted Qty must be less than Received Qty')\n\t    }\n\t    if(frm.doc.sample_qty){\n\t        frm.trigger('calculate')\n\t    }\n\t},\n\trejected_quantity(frm){\n\t    if(frm.doc.sample_qty && frm.doc.rejected_quantity && frm.doc.received_quantity){\n\t        var value1 = frm.doc.received_quantity\n            var value2 = frm.doc.sample_qty\n            var value4 = frm.doc.rejected_quantity\n            var reject = value1 - (value2 + value4)\n            frm.set_value(\"accepted_quantity\",reject)\n\t    }\n\t},\n\nserial_and_batch_bundle(frm){\n    if(frm.doc.serial_and_batch_bundle){\n        frappe.call({\n            method:\"norden.custom.item_ins_serial\",\n            args:{\n                bundle:frm.doc.serial_and_batch_bundle,\n            },\n            callback(r){\n                if(r.message){\n                    frm.set_value(\"serial_number\", r.message[0].join('\\n'));\n                    frm.set_value(\"batch\",r.message[1])\n                }\n            }\n        })\n    }\n},\n\t\n\t\n\t\n\tonload(frm){\n\t    \n\t   // if(frm.doc.is__local){\n\t   //     if(frm.doc.item_code && frm.doc.pr_number && frm.doc.po_number){\n\t   //         frappe.db.get_value(\"Purchase Receipt Item\",frm.doc.po_number,frm.doc.id,\"serial_no\")\n\t   //         .then(r=> {\n\t   //             if(r.message.serial_no){\n\t   //                 var value = r.message.serial_no\n\t   //                 frm.set_value('serial_no',value);\n\t   //             }\n\t   //         })\n\t   //     }\n\t   // }\n\t    \n\t    if(frm.doc.item_code){\n\t        frappe.db.get_value('Item',frm.doc.item_code,'item_template')\n        .then(r => {\n            if(r.message.item_template){\n                 var value = r.message.item_template\n                frm.set_value('download_report',value);\n            }\n            else{\n                frm.set_df_property('download_report', 'hidden', 1);\n            }\n        })\n        \n\t    }\n\t    \n\t    \n\t    frappe.db.get_value('Item',frm.doc.item_code,'has_serial_no')\n        .then(r => {\n            var value = r.message.has_serial_no\n            if(value == 0){\n                frm.set_df_property('serial_no', 'hidden', 1);\n                frm.set_df_property('rejected_serial_no', 'hidden', 1);\n            }\n        })\n        \n        if(frm.doc.po_number){\n            frappe.db.get_value('Purchase Receipt',frm.doc.pr_number,'company')\n        .then(r => {\n            var value = r.message.company\n            if(value){\n                frm.set_value('company_name',value);\n            }\n        })\n        }\n        \n        \n\t   \n\t   \n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_current_date\",\n\n// \t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('inspection_date', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\tif(frm.doc.is)\n\t\n\tif(frm.doc.pr_number){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_company_name\",\n\t\t\targs: {\n\t\t\t\t'purchase_receipt': frm.doc.pr_number,\n\t\t\t\t\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('company_name', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\t\n\tif(frm.doc.dn_number){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_company_name_dn\",\n\t\t\targs: {\n\t\t\t\t'dn': frm.doc.dn_number,\n\t\t\t\t\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('company_name', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n},\n\t\n\trefresh(frm){\n\t    \n\t    if (frm.doc.__islocal) {\n           frm.set_value(\"inspected_by\",frappe.session.user)\n            frm.set_value(\"inspection_date\",frappe.datetime.get_today())\n           \n        } \n        \n\t    if (!frm.doc.__islocal) {\n\t\t\tfrm.add_custom_button(__(\"Print Inspection Report\"), function () {\n\t\t\t\tvar f_name = frm.doc.name\n\t\t\t\tvar print_format = \"Inspection Report\";\n\t\t\t\t\n\t\t\t\t\n\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Item Inspection\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n\t\t\t});\n\t\t}\n\t},\n\t\n// \ton_submit(frm){\n// \t if(frm.doc.sample && frm.doc.pr_number){\n// \t  frappe.call({\n// \t\tmethod: \"norden.utils.create_sample_inspection\",\n// \t\targs: {\n// \t\t\"sample\":frm.doc.sample,\n// \t\t\"item\":frm.doc.item_code,\n// \t\t\"po\":frm.doc.po_number,\n// \t\t\"pr\":frm.doc.pr_number,\n// \t\t\"name\":frm.doc.name,\n// \t\t},\n// \t\tcallback(r) {\n\t\t\n// \t}\n// \t\t})      \n\t    \n// \t}\n\t\n// \tif(frm.doc.sample && frm.doc.logistics_request_number){\n// \t  frappe.call({\n// \t\tmethod: \"norden.utils.create_sample_inspection_from_lr\",\n// \t\targs: {\n// \t\t\"sample\":frm.doc.sample,\n// \t\t\"item\":frm.doc.item_code,\n// \t\t\"po\":frm.doc.po_number,\n// \t\t\"lr\":frm.doc.logistics_request_number,\n// \t\t\"name\":frm.doc.name,\n// \t\t},\n// \t\tcallback(r) {\n\t\t\n// \t}\n// \t\t})      \n\t    \n// \t}\n\t\n// \tif(frm.doc.sample && frm.doc.dn_number){\n// \t  frappe.call({\n// \t\tmethod: \"norden.utils.create_sample_inspection_from_dn\",\n// \t\targs: {\n// \t\t\"sample\":frm.doc.sample,\n// \t\t\"item\":frm.doc.item_code,\n// \t\t\"so\":frm.doc.so_number,\n// \t\t\"dn\":frm.doc.dn_number,\n// \t\t\"name\":frm.doc.name,\n// \t\t},\n// \t\tcallback(r) {\n\t\t\n// \t}\n// \t\t})      \n\t    \n// \t}\n// \t}\n\t\n\t\n\t \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Inspection Sample",
  "enabled": 1,
  "modified": "2022-12-22 16:56:55.844279",
  "module": null,
  "name": "Inspection Sample-Form",
  "script": "frappe.ui.form.on('Inspection Sample', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\tonload(frm){\n\t    if(frm.doc.inspection_template){\n\t     frappe.call({\n\t\tmethod: \"norden.utils.add_specification\",\n\t\targs: {\n\t\t\"template\":frm.doc.inspection_template,\n\t\t},\n\t\tcallback(r) {\n\t\tif(r.message){\n\t\t    $.each(r.message[0],function(i,v){\n\t\t\tconsole.log(v[\"instrument_ref_no\"])\n\t\t\tfrm.add_child('functional_aspects',{\n\t\t\t\tspecification:v[\"specification\"],\n\t\t\t\tacceptance_criteria:v[\"acceptance_criteria\"],\n\t\t\t\tinstrument_ref_no:v[\"instrument_ref_no\"],\n\t\t\t\tremarks:v[\"remarks\"]\n\t\t\t\t\n\t\t\t})\n\t\t\tfrm.refresh_field('functional_aspects')\n\t\t\t})\n\t\t\t\n\t\t\t$.each(r.message[1],function(i,v){\n// \t\t\tconsole.log(v[\"specification\"])\n\t\t\tfrm.add_child('visual_aspects',{\n\t\t\t\tspecification:v[\"specification\"],\n\t\t\t\tacceptance_criteria:v[\"acceptance_criteria\"],\n\t\t\t\tinstrument_ref_no:v[\"instrument_ref_no\"],\n\t\t\t\tremarks:v[\"remarks\"]\n\t\t\t})\n\t\t\tfrm.refresh_field('visual_aspects')\n\t\t\t})\n\t\t\t\n\t\t\t$.each(r.message[2],function(i,v){\n// \t\t\tconsole.log(v[\"specification\"])\n\t\t\tfrm.add_child('material_aspects',{\n\t\t\t\tspecification:v[\"specification\"],\n\t\t\t\tacceptance_criteria:v[\"acceptance_criteria\"],\n\t\t\t\tinstrument_ref_no:v[\"instrument_ref_no\"],\n\t\t\t\tremarks:v[\"remarks\"]\n\t\t\t\t\n\t\t\t})\n\t\t\tfrm.refresh_field('material_aspects')\n\t\t\t})\n\t\t\t\n\t\t\t$.each(r.message[3],function(i,v){\n// \t\t\tconsole.log(v[\"specification\"])\n\t\t\tfrm.add_child('dimensional_aspects',{\n\t\t\t\tspecification:v[\"specification\"],\n\t\t\t\tacceptance_criteria:v[\"acceptance_criteria\"],\n\t\t\t\tinstrument_ref_no:v[\"instrument_ref_no\"],\n\t\t\t\tremarks:v[\"remarks\"]\n\t\t\t})\n\t\t\tfrm.refresh_field('dimensional_aspects')\n\t\t\t})\n\t\t}\n\t}\n\t\t})          \n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-06-02 12:45:10.432954",
  "module": null,
  "name": "Item-Form",
  "script": "frappe.ui.form.on('Item', {\n\tld(frm){\n\t    var l = (frm.doc.ld /100)\n\t    console.log(l)\n\t    frm.set_value(\"l\",l)\n\t},\n\tw(frm){\n\t  var w_ = (frm.doc.w/100)\n\t  console.log(w_)\n\t  frm.set_value(\"w_\",w_)\n\t},\n\th(frm){\n\t  var h_ = (frm.doc.h/100).toFixed(2)\n\t  frm.set_value(\"h_\",h_)\n\t},\n    validate(frm){\n        if (frm.doc.pc_ctn == 0){\n            frm.set_value(\"pc_ctn\",'1')\n        }\n        var cbm = (frm.doc.l * frm.doc.w_ * frm.doc.h_)\n        console.log(cbm)\n        frm.set_value(\"cbm_unit\",cbm)\n        var nwp = (frm.doc.nw / frm.doc.pc_ctn).toFixed(2)\n        frm.set_value(\"net_weight_piece\",nwp)\n        var gwp = (frm.doc.gw / frm.doc.pc_ctn).toFixed(2)\n        frm.set_value(\"gross_weight_piece\",gwp)\n        var measure = frm.doc.ld * frm.doc.w * frm.doc.h\n        frm.set_value(\"measurement\",measure)\n        var volumetric_weight_courier = (measure/5000).toFixed(2)\n        frm.set_value(\"volumetric_weight_courier\",volumetric_weight_courier)\n        var volumetric_weight_air_freight = (measure/6000).toFixed(2)\n        frm.set_value(\"volumetric_weight_air_freight\",volumetric_weight_air_freight)\n    }\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Internal Payment Request",
  "enabled": 1,
  "modified": "2022-12-07 12:44:13.124845",
  "module": null,
  "name": "Request Payment-Form",
  "script": "frappe.ui.form.on('Internal Payment Request', {\n\tsupplier_name(frm) {\n\t    frm.set_query(\"purchase_receipt_name\", function () {\n\t        console.log('hi')\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"supplier_name\": frm.doc.supplier_name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t        frm.set_query(\"purchase_invoice_name\", function () {\n\t        console.log('hi')\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"supplier_name\": frm.doc.supplier_name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    \n\t\t\n\t},\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-02-06 17:29:56.763604",
  "module": null,
  "name": "Lead-Form",
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n\t\tvalidate(frm){\n\t    $.each(frm.doc.lead_table,function(i,d){\n\t        var company= d.company\n\t        var c = 0\n\t        $.each(frm.doc.lead_table,function(i,v){\n\t            \n\t            if(company == v.company){\n\t                if (c != 1){\n\t                c = 1\n\t                \n\t            }\n\t            else{\n\t                frappe.throw('Company '+ company + ' entered multipe times')\n\t            }\n\t            }\n\t         \n\t        })\n\t    })\n\t},\n\torganization_name(frm){\n\t\tif(frm.doc.organization_name){\n\t\t\tfrm.set_value('company_name',frm.doc.organization_name)\n\t\t}\n\t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-10-05 19:02:32.228689",
  "module": null,
  "name": "Customer-Form",
  "script": "frappe.ui.form.on('Customer', {\n    onload(frm){\n        frappe.db.get_value('Employee',{'user_id':frappe.session.user},'company')\n        .then(r => {\n            var value = r.message.company\n            frappe.db.get_value('Company',value,'country')\n            .then(r => {\n                var val = r.message.country\n                if(val != \"India\"){\n                    frm.set_value(\"gst_category\",\"Overseas\")\n                    frm.set_df_property(\"tax_details_section\",\"hidden\",1)\n                }\n            })\n        })\n    },\n// \trefresh(frm) {\n// \t\tfrm.set_value('customer',frm.doc.lead_name)\n// \t},\n\t\n// \t\tvalidate(frm){\n// \t    $.each(frm.doc.customer_table,function(i,d){\n// \t        var company= d.company\n// \t        var c = 0\n// \t        $.each(frm.doc.customer_table,function(i,v){\n\t            \n// \t            if(company == v.company){\n// \t                if (c != 1){\n// \t                c = 1\n\t                \n// \t            }\n// \t            else{\n// \t                frappe.throw('Company '+ company + ' entered multipe times')\n// \t            }\n// \t            }\n\t         \n// \t        })\n// \t    })\n// \t},\n// \tcustomer(frm){\n// \t\tif(frm.doc.customer){\n\t\t   \n// \t\t\tfrm.set_value('customer_name',frm.doc.customer)\n// \t\t}\n// \t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Datasheet",
  "enabled": 1,
  "modified": "2023-08-22 19:24:36.753352",
  "module": null,
  "name": "Datasheet-Form",
  "script": "frappe.ui.form.on('Eyenor Datasheet', {\n    refresh(frm){\n    // if(frm.doc.docstatus == 1){\n    frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.eyenor_datasheet.eyenor_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t        }\n\t         })\n\t        \n\t    })\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Datasheet 2\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Eyenor Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n    },\n    validate(frm){\n    var dimension ,weight = 0\n    $.each(frm.doc.ds_general,function(i,d){\n        if(d.title == \"Dimensions-Packed\"){\n          dimension = d.specification;\n        }\n        if(d.title == \"Gross Weight\"){\n          weight = d.specification;\n        }\n    });\n      \n    // frm.add_child('table_15', {\n    //     \"part_number\": frm.doc.ds_item_no,\n    //     \"packing_number\":\"Carton Box\",\n    //     \"dimension\":dimension,\n    //     \"gross_weight\":weight,\n    // });\n    //      frm.refresh_field('table_15');\n    \n\n        \n    // frm.add_child('ds_order', {\n    //     \"part_number\": frm.doc.ds_item_no,\n    //     \"description\":frm.doc.ds_item_name,\n    //     \"standard_quantity\": \"1\"\n    // });\n    // frm.refresh_field('ds_order');\n     \n}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS Datasheet",
  "enabled": 1,
  "modified": "2021-10-28 15:35:53.586492",
  "module": null,
  "name": "NVS Datasheet-Form",
  "script": "frappe.ui.form.on('NVS Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nvs_datasheet.nvs_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    if(frm.doc.docstatus == 1){\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NAC Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NVS 2\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n    }\n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NAC Datasheet",
  "enabled": 1,
  "modified": "2021-10-28 18:53:16.707733",
  "module": null,
  "name": "NAC Datasheet-Form",
  "script": "frappe.ui.form.on('NAC Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nac_datasheet.nac_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    if(!frm.doc.__islocal){\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NAC Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NAC Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n    }\n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS",
  "enabled": 1,
  "modified": "2021-10-28 15:37:07.409251",
  "module": null,
  "name": "NVS-Form",
  "script": "frappe.ui.form.on('NVS', {\n\trefresh(frm) {\n\t frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"NVS Datasheet\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"NVS\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            })\n            frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.nvs_datasheet.nvs_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n    \n    \n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Cable Datasheet",
  "enabled": 1,
  "modified": "2021-10-30 16:57:19.236522",
  "module": null,
  "name": "Cable-Form",
  "script": "frappe.ui.form.on('Cable Datasheet', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__('Push to Website'), function() {\n\t        frappe.call({\n\t        method :\"norden.norden.doctype.cable_datasheet.cable_datasheet.datasheet_api\",\n\t        args:{\n\t            \"doc\":frm.doc\n\t        },\n\t        callback(r){\n\t            console.log(r.message)\n\t        }\n\t         })\n\t        \n\t    })\n\t\tfrm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Cable\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Cable Datasheet\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 1 Sticker",
  "enabled": 1,
  "modified": "2021-09-12 02:10:46.341932",
  "module": null,
  "name": "Keyston Stickers-Form",
  "script": "frappe.ui.form.on('Norden 1 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__(\"Generate Print\"), function () {\n\t    var doctype = frm.doc.doctype\n\t    var docname = frm.doc.name\n        var print_format =\"Norden 1 Sticker\";\n\t\tlet w = window.open(\n\t\t\tfrappe.urllib.get_full_url(\n\t\t\t\t'/printview?doctype=' +\n\t\t\t\tencodeURIComponent(doctype) +\n\t\t\t\t'&name=' +\n\t\t\t\tencodeURIComponent(docname) +\n\t\t\t\t'&trigger_print=1' +\n\t\t\t\t'&format=' +\n\t\t\t\tencodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=0'\n\t\t\t)\n\t\t);\n\t    });\n\t    \n\t    frm.add_custom_button(__(\"Generate PDF\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Norden 1 Sticker\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(frm.doc.doctype)\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 2 Sticker",
  "enabled": 1,
  "modified": "2021-09-18 15:08:11.290732",
  "module": null,
  "name": "Norden 2 Sticker-Form",
  "script": "frappe.ui.form.on('Norden 2 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Norden 2 Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 2 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Norden 2 Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 2 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Stickers",
  "enabled": 1,
  "modified": "2021-12-21 12:13:01.006345",
  "module": null,
  "name": "Eyenor Stickers-Form",
  "script": "frappe.ui.form.on('Eyenor Stickers', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Eyenor Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Adapter Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Adapter Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "NVS Stickers",
  "enabled": 1,
  "modified": "2021-09-19 10:55:05.738842",
  "module": null,
  "name": "NVS Stickers-Form",
  "script": "frappe.ui.form.on('NVS Stickers', {\n\trefresh(frm) {\n\t\t frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"NVS Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('NVS Pack Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"NVS Pack Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('NVS Box Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"NVS Box Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"NVS Stickers\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-12-30 14:26:42.620374",
  "module": null,
  "name": "Quotation-Form",
  "script": "frappe.ui.form.on('Quotation', {\n    view(frm){\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n    \t    item_details = {}\n    \t\titem_details['item_code'] = d.item_code\n\t\t\titem_details['item_name'] = d.item_name\n\t\t\titem_details['qty'] = d.qty\n\t\t\titem_details['uom'] = d.uom\n\t\t\titem_details['discount'] = d.discount\n\t\t\titem_details['discount_rate'] = d.discount_rate\n            item_details['margin_percentage'] = d.margin_percentage\n\t\t\titem_details['margin_rate'] = d.margin_rate\n\t\t\titem_details['unit_price_document_currency'] = d.unit_price_document_currency\n\t\t\titem_details['amount'] = d.amount\n\t\t\titem_details_list.push(item_details)\n    \t})\n                 \n        frappe.call({\n\t\tmethod: \"norden.margin_details.margin_tool\",\n\t\targs: {\n\t\t\t'item_details': item_details_list,\n\t\t},\n\t\tcallback(r) {\n\t\t\tif (r.message) {\n\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\tsize: \"extra-large\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldname: 'item_details',\n\t\t\t\t\t\t\tfieldtype: 'HTML'\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\n\t\t\t\t});\n\t\t\t\td.fields_dict.item_details.$wrapper.html(r.message);\n\t\t\t\td.show();\n\t\t\t}\n\t\t}\n\t});\n                \n},\n    download(frm){\n\t\tvar path = \"norden.utils.make_item_sheet\"\n\t\tvar args = 'name=%(name)s'\n\t\tif (path) {\n\t\t\twindow.location.href = repl(frappe.request.url +\n\t\t\t\t'?cmd=%(cmd)s&%(args)s', {\n\t\t\t\tcmd: path,\n\t\t\t\targs: args,\n\t\t\t\tname: frm.doc.name\n\t\t\t});\n\t\t}\n    },\n   \n\ton_submit(frm) {\n\t\tif (frm.doc.docstatus == 1) {\n\t\t\tfrm.set_value(\"work_flow\", \"Approved\")\n\t\t}\n\t},\n\n\tis_free(frm) {\n\t\tif (frm.doc.is_free) {\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\td.is_free = 1\n\t\t\t})\n\t\t}\n\n\t\tif (!frm.doc.is_free) {\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\td.is_free = 0\n\t\t\t})\n\t\t}\n\t},\n\t\n\tallocate(frm) {\n\tif (frm.doc.allocate) {\n\t\t\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\td.is_allocate = 1\n\t\t})\n\t\t\n\t\tvar item_details_list = []\n\t\tvar item_details = {}\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\titem_details = {}\n\t\t\titem_details['item_code'] = d.item_code\n\t\t\titem_details['item_name'] = d.item_name\n\t\t\titem_details['description'] = d.description\n\t\t\titem_details['qty'] = d.qty\n\t\t\titem_details['rate'] = d.rate\n\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\titem_details['amount'] = d.amount\n\t\t\titem_details_list.push(item_details)\n\t\t})\n\t\t\n\t    let d = new frappe.ui.Dialog({\n\t\t\ttitle: 'Transfered to Allocated Warehouse',\n// \t\t\tfields: [\n// \t\t\t\t{\n// \t\t\t\t\tlabel: 'Reason',\n// \t\t\t\t\tfieldname: 'reason',\n// \t\t\t\t\tfieldtype: 'Read Only'\n// \t\t\t\t},\n// \t\t\t],\n\t\t\tprimary_action_label: 'Submit',\n\t\t\tprimary_action(values) {\n\t\t\t\td.hide();\n\t\t\t\t\n\t\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.item_allocation\",\n\t\t\targs: {\n\t\t\t\t'name': frm.doc.name,\n\t\t\t\t'item_details':item_details_list,\n\t\t\t\t\"company\":frm.doc.company,\n\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t\t\n\t\t\n\t\t\t}\n\n\t\t});\n\n\t\td.show()\n\t}\n\n\tif (!frm.doc.allocate) {\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\td.is_allocate = 0\n\t\t})\n\t}\n\t},\n\n\tget_details(frm) {\n\t\tfrm.set_value('price_list', '')\n\t\tfrm.get_field(\"margin_details\").$wrapper.html('');\n\t\tfrm.get_field(\"margin_details_sm\").$wrapper.html('');\n\t},\n\n\tclear(frm){\n\t\tfrm.set_value('price_list_sm', \"\")\n\t},\n// \tsales_person_user(frm){\n//         frappe.db.get_value('Sales Person',{'name':frm.doc.sales_person_user},['employee'])\n//         .then(r => {\n//             if(r.message.employee){\n//                 frappe.db.get_value('Employee',{'name':r.message.employee},['user_id'])\n//                 .then(d => {\n//                     if(d.message.user_id){\n//                         frm.set_value('sale_person',d.message.user_id)\n//                     }\n//                 })\n//             }\n//         })\n//     },\n\tsale_person(frm) {\n\t    if(frm.doc.sale_person){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.set_cluster\",\n\t\t\targs: {\n\t\t\t\t'sales_person': frm.doc.sale_person,\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.set_value(\"cluster\", r.message);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t    }\n\n\t},\n\tshow_cost(frm){\n\t    var item_details_list = []\n\t\tvar item_details = {}\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\titem_details = {}\n\t\t\titem_details['item_code'] = d.item_code\n\t\t\titem_details['item_name'] = d.item_name\n\t\t\titem_details['description'] = d.description\n\t\t\titem_details['qty'] = d.qty\n\t\t\titem_details['rate'] = d.rate\n\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\titem_details['amount'] = d.amount\n\t\t\titem_details_list.push(item_details)\n\t\t})\n\t\t\n\t    frappe.call({\n\t\t\tmethod: \"norden.margin_details.margin_cost\",\n\t\t\targs: {\n\t\t\t\t'name': frm.doc.name,\n\t\t\t\t'item_details': item_details_list,\n\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n\t\t\t\t'user': frappe.session.user,\n\t\t\t\t'price_list': frm.doc.price_list,\n\t\t\t\t'territory': frm.doc.price_list_region,\n\t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n\t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n\t\t\t\t'footer_discount': frm.doc.discount_amount,\n\t\t\t\n\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.get_field(\"margin_details\").$wrapper.html(r.message);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t},\n\n\tprice_list(frm) {\n\t\tvar item_details_list = []\n\t\tvar item_details = {}\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\titem_details = {}\n\t\t\titem_details['item_code'] = d.item_code\n\t\t\titem_details['item_name'] = d.item_name\n\t\t\titem_details['description'] = d.description\n\t\t\titem_details['qty'] = d.qty\n\t\t\titem_details['rate'] = d.rate\n\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\titem_details['amount'] = d.amount\n\t\t\titem_details_list.push(item_details)\n\t\t})\n\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.margin_details.margin\",\n\t\t\targs: {\n\t\t\t\t'name': frm.doc.name,\n\t\t\t\t'item_details': item_details_list,\n\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n\t\t\t\t'user': frappe.session.user,\n\t\t\t\t'price_list': frm.doc.price_list,\n\t\t\t\t'territory': frm.doc.price_list_region,\n\t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n\t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n\t\t\t\t'footer_discount': frm.doc.discount_amount,\n\t\t\t\t'net_total': frm.doc.net_total\n\t\t\t\n\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.get_field(\"margin_details\").$wrapper.html(r.message);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\n\t},\n\n// \tprice_list_sm(frm) {\n// \t\tvar item_details_list = []\n// \t\tvar item_details = {}\n// \t\t$.each(frm.doc.items, function (i, d) {\n// \t\t\titem_details = {}\n// \t\t\titem_details['item_code'] = d.item_code\n// \t\t\titem_details['item_name'] = d.item_name\n// \t\t\titem_details['description'] = d.description\n// \t\t\titem_details['qty'] = d.qty\n// \t\t\titem_details['rate'] = d.rate\n// \t\t\titem_details['special_cost'] = d.special_cost\n// \t\t\titem_details['internal_cost'] = d.internal_cost\n// \t\t\titem_details['amount'] = d.amount\n// \t\t\titem_details_list.push(item_details)\n// \t\t})\n\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.margin_details.margin\",\n// \t\t\targs: {\n// \t\t\t\t'name': frm.doc.name,\n// \t\t\t\t'item_details': item_details_list,\n// \t\t\t\t\"company\": frm.doc.company,\n// \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n// \t\t\t\t\"currency\": frm.doc.currency,\n// \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n// \t\t\t\t'user': frappe.session.user,\n// \t\t\t\t'price_list': frm.doc.price_list_sm,\n// \t\t\t\t'territory': frm.doc.price_list_region,\n// \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n// \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n// \t\t\t\t'footer_discount': frm.doc.discount_amount\n\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message) {\n// \t\t\t\t\tfrm.get_field(\"margin_details_sm\").$wrapper.html(r.message);\n// \t\t\t\t}\n\n// \t\t\t}\n// \t\t})\n\n// \t},\n\n\tcurrency(frm) {\n\t\tfrm.set_value(\"margin_currency\", frm.doc.currency)\n\t},\n\n\tprice_list_region(frm) {\n\t\tfrm.set_query(\"region_price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (frm.doc.price_list_region) {\n\t\t\tfrm.set_value(\"margin_region\", frm.doc.price_list_region)\n// \t\t\n\t\t\tfrm.set_value(\"margin_region_sm\", frm.doc.price_list_region)\n\t\t}\n\t},\n\tregion_price_list(frm) {\n\t\tvar price_ls = frm.doc.region_price_list\n\t\tfrm.set_value(\"selling_price_list\", price_ls)\n\t},\n\n\tparty_name(frm) {\n\t\tfrm.set_query(\"contact\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer\": frm.doc.party_name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tfrm.set_query(\"region_price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t},\n\tfetch_discount(frm){\n\t    var total_discount = 0\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\ttotal_discount = total_discount + d.disc_amt\n\t\t\tfrm.set_value(\"line_item_discount\", total_discount)\n\t\t})\n\t},\n\tsetup(frm){\n\t    frm.get_field(\"margin_details\").$wrapper.html('');\n\t   // frm.get_field(\"margin_details_sm\").$wrapper.html('');\n\t   // if(frm.doc.price_list_region){\n\t   //     if(frm.doc.docstatus != 2){\n    // \t        frappe.dom.freeze(__('Processing Margin! Please Wait...'));\n    //             frappe.db.get_value('Price List based on Territory', {territory:frm.doc.margin_region,default:1}, 'name')\n    //             .then(r => {\n    //                 frappe.db.set_value('Quotation',frm.doc.name, 'price_list', r.message.name)\n    //                 .then(r => {\n    //                     frappe.dom.unfreeze();\n    //                 })\n                    \n    //             })\n\t   //     }\n    //     }\n        if(frm.doc.price_list_sm && !frm.doc.is_free){\n\t    frm.trigger(\"price_list_sm\")\n\t       \n\t   }\n\t    if(frm.doc.price_list && !frm.doc.is_free){\n\t    frm.trigger(\"price_list\")\n\t    }\n\t},\n\tcompany(frm){\n\t    if(frm.doc.company ==\"Norden Communication Pvt Ltd\"){\n\t        frm.set_value(\"price_list_region\",\"India\")\n\t    }\n\t    if(frm.doc.company ==\"Norden Africa\"){\n\t        frm.set_value(\"price_list_region\",\"Africa\")\n\t    }\n\t    if(frm.doc.company ==\"Norden Communication Middle East FZE\"){\n\t        frm.set_value(\"price_list_region\",\"Dubai\")\n\t    }\n\t    frm.set_query(\"party_name\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"disabled\": 0\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t   \n\t\n\t},\n\t\n\tonload(frm) {\n    \t\n\t    \n\t    if(frm.doc.__islocal){\n\t        frm.set_value(\"file_number\",\"\")\n\t    }\n\t   \n\t    \n\t    \n\t    \n\t    \n\t\tfrm.set_query(\"contact\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer\": frm.doc.party_name\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfrm.set_query(\"region_price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region \n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n        if(frm.doc.price_list_region == \"Dubai\"){\n            frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region,\"default\":1\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n        \n        else{\n              frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t\t\n\t\t\n\t\t\n// \t\tfrm.set_query(\"price_list\", function () {\n// \t\t\treturn {\n// \t\t\t\tfilters: {\n// \t\t\t\t\t\"territory\": frm.doc.price_list_region\n\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\n\t\t\n\n\t\tfrm.set_query(\"price_list_sm\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfrm.set_query(\"selling_price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (frm.doc.docstatus != 1) {\n\t\t\tfrm.get_field(\"margin_details\").$wrapper.html('');\n\t\t\tfrm.set_value(\"margin_currency\", frm.doc.currency)\n\t\t}\n\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrm.set_value(\"prepared_by\", frappe.session.user)\n\t\t}\n\t},\n\tafter_cancel(frm) {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: 'feedback form',\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Reason',\n\t\t\t\t\tfieldname: 'reason',\n\t\t\t\t\tfieldtype: 'Small Text'\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: 'Submit',\n\t\t\tprimary_action(values) {\n\t\t\t\td.hide();\n\t\t\t\tfrm.set_value('test', values.reason);\n\t\t\t}\n\n\t\t});\n\n\t\td.show();\n\t\tfrappe.msgprint(\"please fill the cancellation remarks\");\n\n\t},\n\tsame_as(frm) {\n\t\tif (frm.doc.same_as == '1') {\n\t\t\tvar add = 0\n\t\t\tadd = frm.doc.customer_address\n\t\t\tfrm.set_value('shipping_address_name', add)\n\t\t}\n\t},\n\tvalid_till(frm){\n\t    frm.set_query(\"party_name\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"disabled\": 0\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    console.log(frm.doc.valid_till)\n\t},\n\tvalidate(frm) {\n\t    \n\t    if(frm.doc.__islocal){\n\t        $.each(frm.doc.items,function(i,j){\n    \t        frappe.call({\n    \t\t\t\tmethod: 'norden.custom.get_item_rate',\n    \t\t\t\targs: {\n    \t\t\t\t\t'item_code': j.item_code,\n    \t\t\t\t\t'company': frm.doc.company,\n    \t\t\t\t\t'price_list': frm.doc.selling_price_list,\n    \t\t\t\t\t'doc_currency': frm.doc.currency\n    \t\t\t\t},\n                    freeze:true,\n                    freeze_message:__(\"Fetching Price..\"),\n    \t\t\t\tcallback(r) {\n    \t\t\t\t\tif (r.message) {\n    \t\t\t\t\t\tj.unit_price = r.message[0] * j.conversion_factor\n    \t\t\t\t\t\tj.unit_price_document_currency = r.message[1] * j.conversion_factor\n    \t\t\t\t\t\tj.target_rate = r.message[1] * j.conversion_factor\n    \t\t\t\t\t}\n    \t\t\t\t\tfrm.refresh_field(\"items\")\n    \t\t\t\t}\n    \t\t\t})\n    \t    })\n\t    }\n\t    \n\t    //$.each(frm.doc.items,function(i,j){\n    \t//\tj.discount_value = j.margin_value - j.discount_rate\n    \t//\tj.rate = j.discount_value\n        //\tj.amount = j.rate * j.qty\n\t    // })\n\t    frm.refresh_field(\"items\")\n\t    var total_discount = 0\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\ttotal_discount = total_discount + d.disc_amt\n\t\t\tfrm.set_value(\"line_item_discount\", total_discount)\n\t\t})\n\t    if(frm.doc.__islocal){\n\t        frm.set_value(\"work_flow\",\"Draft\")\n\t    }\n\t\tif (frm.doc.items) {\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\tif (d.amount == 0 && d.is_free != 1) {\n\t\t\t\t\tfrappe.throw(__(\"Please fill amount for the item - {}\", [d.item_code]));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (d.amount == 0 && d.is_free != 1) {\n\t\t\t\tfrappe.throw(__(\"Please fill amount for the item - {}\", [d.item_code]));\n\t\t\t}\n\n\t\t\t})\n\t\t}\n\n\t\tif (frm.doc.territory == 'All Territories') {\n\t\t\tfrappe.validated = false\n\t\t\tfrappe.throw(\"Choose other territory because All Territories in not valid.\")\n\t\t}\n\t\tif (frm.doc.party_name) {\n\t\t\tfrm.set_value(\"title\", frm.doc.party_name)\n\t\t}\n\t\tif (frm.doc.items) {\n\t\t\tvar total_addition = 0\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\tif (d.margin_rate > 0) {\n\t\t\t\t\ttotal_addition = total_addition + d.margin_rate\n\t\t\t\t}\n\t\t\t\tfrm.set_value(\"line_item_addition\", total_addition)\n\t\t\t})\n\t\t}\n\t\tif (!frm.doc.opportunity) {\n\t\t\tif (frm.doc.items) {\n\t\t\t\tvar list = []\n\t\t\t\tvar item_details_list = []\n\t\t\t\tvar item_details = {}\n\t\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\t\titem_details = {}\n\t\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\t\titem_details['item_sub_heading'] = d.item_sub_heading\n\t\t\t\t    item_details['item_heading'] = d.item_heading\n\t\t\t\t\titem_details['item_title_3'] = d.item_title_3\n\t\t\t\t\titem_details_list.push(item_details)\n\t\t\t\t})\n\t\t\t\tvar item_heading = []\n\t\t\t\tvar item_head = {}\n\t\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\t\titem_head = {}\n\t\t\t\t\titem_head['item_sub_heading'] = d.item_sub_heading\n\t\t\t\t\titem_head['item_heading'] = d.item_heading\n\t\t\t\t\titem_heading.push(item_head)\n\t\t\t\t})\n\n\t\t\t\tvar item_titles = []\n\t\t\t\tvar item_title = {}\n\t\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\t\titem_title = {}\n\t\t\t\t\titem_title['item_sub_heading'] = d.item_sub_heading\n\t\t\t\t\titem_title['item_heading'] = d.item_heading\n\t\t\t\t\titem_title['item_title'] = d.item_title_3\n\t\t\t\t\titem_titles.push(item_title)\n\t\t\t\t})\n\t\t\t\tif (frm.doc.company == 'Norden Communication India' || frm.doc.company == 'Norden Communication Pvt Ltd') {\n    \t\t\t\t$.each(frm.doc.items, function (i, d) {\n    \t\t\t\t\tif(d.item_heading){\n        \t\t\t\t\tfrappe.call({\n        \t\t\t\t\t\tmethod: \"norden.custom.get_item_heading\",\n        \t\t\t\t\t\targs: {\n        \t\t\t\t\t\t\t'item_details': item_details_list,\n        \t\t\t\t\t\t},\n        \t\t\t\t\t\tcallback(s) {\n        \t\t\t\t\t\t\tif (s.message) {\n        \t\t\t\t\t\t\t\tfrm.clear_table('heading')\n        \t\t\t\t\t\t\t\t$.each(s.message, function (i, e) {\n        \t\t\t\t\t\t\t\t\tfrm.add_child('heading', {\n        \t\t\t\t\t\t\t\t\t\tmain_title: e,\n        \t\t\t\t\t\t\t\t\t})\n        \t\t\t\t\t\t\t\t\tfrm.refresh_field('heading')\n        \t\t\t\t\t\t\t\t})\n        \t\t\t\t\t\t\t}\n        \t\t\t\t\t\t}\n        \t\t\t\t\t})\n    \t\t\t\t\t}\n    \t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"norden.custom.get_sub_heading\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t'item_head': item_heading,\n\t\t\t\t\t},\n\t\t\t\t\tcallback(s) {\n\t\t\t\t\t\tif (s.message) {\n\t\t\t\t\t\t\tfrm.clear_table('sub_heading')\n\t\t\t\t\t\t\t$.each(s.message, function (i, e) {\n\t\t\t\t\t\t\t\tfrm.add_child('sub_heading', {\n\t\t\t\t\t\t\t\t\t'heading': e.item_heading,\n\t\t\t\t\t\t\t\t\t'title': e.item_sub_heading,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tfrm.refresh_field('sub_heading')\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t})\n\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"norden.custom.get_item_titles\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t'item_title': item_titles,\n\t\t\t\t\t},\n\t\t\t\t\tcallback(s) {\n\t\t\t\t\t\tif (s.message) {\n\t\t\t\t\t\t\tfrm.clear_table('title_3')\n\t\t\t\t\t\t\t$.each(s.message, function (i, e) {\n\t\t\t\t\t\t\t\tfrm.add_child('title_3', {\n\t\t\t\t\t\t\t\t\t'heading': e.item_heading,\n\t\t\t\t\t\t\t\t\t'sub_heading': e.item_sub_heading,\n\t\t\t\t\t\t\t\t\t'title_3': e.item_title,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tfrm.refresh_field('title_3')\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t})\n\n\t\t\t}\n\t\t}\n\t\tvar netprofit = 0\n\t\tvar total_ic = 0\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_internal_cost',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': d.item_code,\n\t\t\t\t\t'company': frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\td.internal_cost = r.message\n\t\t\t\t\t\tvar total_uc = total_ic + d.internal_cost\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_cost',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': d.item_code,\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\td.base_cost = r.message * d.qty\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (d.item_code) {\n\t\t\t\tvar net = (d.rate * d.qty) - d.internal_cost\n\t\t\t\td.net_profit = net\n\t\t\t}\n\t\t\tnetprofit += d.net_profit\n\t\t\tfrm.set_value('total_net_profit', netprofit)\n\t\t})\n\t\tif (frm.doc.items) {\n\t\t\tvar cost = 0\n\t\t\tvar total_selling_price = 0\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\tif (d.item_code) {\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"norden.custom.create_item_price\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\"item_code\": d.item_code,\n\t\t\t\t\t\t\t\"rate\": d.rate\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\td.price_list_rate = r.message\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t}\n\t\t\t\tcost = cost + d.internal_cost * d.qty\n\t\t\t\ttotal_selling_price = total_selling_price + (d.rate * d.qty)\n\t\t\t})\n\t\t\tfrm.set_value(\"internal_cost\", cost)\n\t\t\tfrm.set_value(\"total_selling_price\", total_selling_price)\n\t\t}\n\n\t\tif (frm.doc.total_selling_price) {\n\t\t\tif (frm.doc.company != \"Norden Communication Middle East FZE\" || frm.doc.price_list_currency != \"AED\" && frm.doc.company == \"Norden Communication Middle East FZE\") {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"norden.custom.currency_conversion\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\t\t\"price\": frm.doc.total_selling_price\n\t\t\t\t\t},\n\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\tfrm.set_value(\"total_selling_price_in_usd\", r.message)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfrm.set_value(\"total_selling_price_in_usd\", frm.doc.total_selling_price)\n\t\t\t}\n\t\t}\n\n\t},\n\tcreate(frm) {\n\t\tfrappe.call({\n\t\t\tmethod: 'norden.custom.contact_details',\n\t\t\targs: {\n\t\t\t\t'name': frm.doc.first_name,\n\t\t\t\t'email': frm.doc.custom_mail_id,\n\t\t\t\t'mobile': frm.doc.mobile_number,\n\t\t\t\t'customer': frm.doc.party_name\n\n\t\t\t},\n\t\t\tcallback(d) {\n\n\t\t\t}\n\t\t})\n\t},\n\trefresh(frm) {\n\t    \n\t    if(frappe.user.has_role(\"CFO\") || frappe.user.has_role(\"COO\") || frappe.user.has_role(\"Accounts User\")|| frappe.user.has_role(\"Operation Director\")){\n\t    var me = this;\n\t    frm.add_custom_button(__(\"Margin Details HOD\"), function () {\n\t        let d = new frappe.ui.Dialog({\n                size:\"extra-large\",\n                title: 'Margin Details',\n                fields: [\n                    {\n                        label: 'Price List',\n                        fieldname: 'price_list',\n                        fieldtype: 'Link',\n                        options:'Price List based on Territory',\n                        get_query: function () {\n            \t\t\t\treturn {\n            \t\t\t\t\tfilters: {\n            \t\t\t\t\t\t\"territory\": frm.doc.price_list_region\n            \t\t\t\t\t}\n            \t\t\t\t};\n            \t\t\t},\n                        onchange: function () {\n\t\t\t\t\t\t\tlet val = d.get_field(\"price_list\");\n\t\t\t\t\t\t\tvar item_details_list = []\n                    \t\tvar item_details = {}\n                    \t\t$.each(frm.doc.items, function (i, d) {\n                    \t\t\titem_details = {}\n                    \t\t\titem_details['item_code'] = d.item_code\n                    \t\t\titem_details['item_name'] = d.item_name\n                    \t\t\titem_details['description'] = d.description\n                    \t\t\titem_details['qty'] = d.qty\n                    \t\t\titem_details['rate'] = d.rate\n                    \t\t\titem_details['special_cost'] = d.special_cost\n                    \t\t\titem_details['internal_cost'] = d.internal_cost\n                    \t\t\titem_details['amount'] = d.amount\n                    \t\t\titem_details_list.push(item_details)\n                    \t\t})\n                            frappe.db.get_value('Price List based on Territory', { 'is_internal': 1, 'territory': frm.doc.price_list_region}, 'name')\n                    \t\t.then(k => {\n                        \t\tfrappe.call({\n                        \t\t\tmethod: \"norden.margin_details.margin\",\n                        \t\t\targs: {\n                        \t\t\t\t'name': frm.doc.name,\n                        \t\t\t\t'item_details': item_details_list,\n                        \t\t\t\t\"company\": frm.doc.company,\n                        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n                        \t\t\t\t\"currency\": frm.doc.currency,\n                        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n                        \t\t\t\t'user': frappe.session.user,\n                        \t\t\t\t'price_list': this.value,\n                        \t\t\t\t'territory': frm.doc.price_list_region,\n                        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n                        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n                        \t\t\t\t'footer_discount': frm.doc.discount_amount\n                        \n                        \t\t\t},\n                        \t\t\tcallback(r) {\n                        \t\t\t\tif (r.message) {\n\t\t\t\t                            d.fields_dict.margin_details.$wrapper.html(r.message);\n                    \t\t    \t\t}\n                        \t\t\t}\n                        \t\t})\n                    \t\t})\n\t\t\t\t\t\t}\n                    },\n                    {\n                        fieldname: 'column_break',\n                        fieldtype: 'Column Break',\n                    },\n                    \n                    {\n                        label: 'Show Cost',\n                        fieldname: 'show_cost',\n                        fieldtype: 'Button',\n                    },\n                    \n                    {\n                        fieldname: 'section_break',\n                        fieldtype: 'Section Break',\n                    },\n                    {\n                        label: 'Margin Details',\n                        fieldname: 'margin_details',\n                        fieldtype: 'HTML'\n                    },\n                    \n                ],\n            });\n            d.get_input(\"show_cost\").on(\"click\", function() {\n\t\t\t\tlet val = d.get_field(\"price_list\");\n\t\t\t\tvar item_details_list = []\n        \t\tvar item_details = {}\n        \t\t$.each(frm.doc.items, function (i, d) {\n        \t\t\titem_details = {}\n        \t\t\titem_details['item_code'] = d.item_code\n        \t\t\titem_details['item_name'] = d.item_name\n        \t\t\titem_details['description'] = d.description\n        \t\t\titem_details['qty'] = d.qty\n        \t\t\titem_details['rate'] = d.rate\n        \t\t\titem_details['special_cost'] = d.special_cost\n        \t\t\titem_details['internal_cost'] = d.internal_cost\n        \t\t\titem_details['amount'] = d.amount\n        \t\t\titem_details_list.push(item_details)\n        \t\t})\n        \t\tif(frm.doc.company == \"Norden Communication Middle East FZE\"){\n        \t\t    var price_list = \"STANDARD BUYING-USD\"\n        \t\t}\n        \t\telse{\n        \t\t    var price_list = \"Cost Rate - NCMEF\"\n        \t\t}\n                frappe.call({\n        \t\t\tmethod: \"norden.margin_details.margin_cost\",\n        \t\t\targs: {\n        \t\t\t\t'name': frm.doc.name,\n        \t\t\t\t'item_details': item_details_list,\n        \t\t\t\t\"company\": frm.doc.company,\n        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n        \t\t\t\t\"currency\": frm.doc.currency,\n        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n        \t\t\t\t'user': frappe.session.user,\n        \t\t\t\t'price_list': price_list,\n        \t\t\t\t'territory': frm.doc.price_list_region,\n        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n        \t\t\t\t'footer_discount': frm.doc.discount_amount\n        \n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r.message) {\n                            d.fields_dict.margin_details.$wrapper.html(r.message);\n                            console.log(d.fields_dict.price_list)\n    \t\t    \t\t}\n        \t\t\t}\n        \t\t})\n            });\n            d.show();\t\t\n\t    },__(\"More Details\"))\n\t    }\n\t    if(frappe.user.has_role(\"Sales Manager\")){\n\t    frm.add_custom_button(__(\"Margin Details\"), function () {\n\t        var item_details_list = []\n    \t\tvar item_details = {}\n    \t\t$.each(frm.doc.items, function (i, d) {\n    \t\t\titem_details = {}\n    \t\t\titem_details['item_code'] = d.item_code\n    \t\t\titem_details['item_name'] = d.item_name\n    \t\t\titem_details['description'] = d.description\n    \t\t\titem_details['qty'] = d.qty\n    \t\t\titem_details['rate'] = d.rate\n    \t\t\titem_details['special_cost'] = d.special_cost\n    \t\t\titem_details['internal_cost'] = d.internal_cost\n    \t\t\titem_details['amount'] = d.amount\n    \t\t\titem_details_list.push(item_details)\n    \t\t})\n            frappe.db.get_value('Price List based on Territory', { 'is_internal': 1, 'territory': frm.doc.price_list_region}, 'name')\n    \t\t.then(k => {\n        \t\tfrappe.call({\n        \t\t\tmethod: \"norden.margin_details.margin\",\n        \t\t\targs: {\n        \t\t\t\t'name': frm.doc.name,\n        \t\t\t\t'item_details': item_details_list,\n        \t\t\t\t\"company\": frm.doc.company,\n        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n        \t\t\t\t\"currency\": frm.doc.currency,\n        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n        \t\t\t\t'user': frappe.session.user,\n        \t\t\t\t'price_list': k.message.name,\n        \t\t\t\t'territory': frm.doc.price_list_region,\n        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n        \t\t\t\t'footer_discount': frm.doc.discount_amount\n        \n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r.message) {\n    \t\t\t            let d = new frappe.ui.Dialog({\n                                size:\"extra-large\",\n                                title: 'Margin Details',\n                                fields: [\n                                    {\n                                        label: 'Margin Details',\n                                        fieldname: 'margin_details',\n                                        fieldtype: 'HTML'\n                                    },\n                                ],\n                                        \n                            });\n                            d.fields_dict.margin_details.$wrapper.html(r.message);\n                            d.show();\t\n    \t\t    \t\t}\n        \t\t\t}\n        \t\t})\n    \t\t})\n\t    },__(\"More Details\"))\n\t    }\n\t    frm.set_query(\"party_name\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"disabled\": 0\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    if(frm.doc.docstatus == 0){\n\t        frm.add_custom_button(__(\"Send a Reminder\"), function () {\n    \t\t    var cont = \"Dear Sir/Mam,</b><br><br><p>\" + frm.doc.doctype+\" No : \"+\"<b>\"+ frm.doc.name+\"</b>\"+\", Waiting for Your Approval<p><p> Please Kind Action <p>\"\n    \t\t\tlet dialog = new frappe.ui.Dialog({\n    \t\t\ttitle: __('Send Reminder Email'),\n    \t\t\tfields: [\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Message',\n    \t\t\t\t\tfieldtype: 'Small Text',\n    \t\t\t\t\tdefault:cont,\n    \t\t\t\t\tfieldname: 'message',\n    \t\t\t\t\tread_only : 1\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Email',\n    \t\t\t\t\tfieldtype: 'Link',\n    \t\t\t\t\toptions: 'User',\n    \t\t\t\t\treqd:1,\n    \t\t\t\t\tfieldname: 'email',  \n    \t\t\t\t},\n    \t\t\t],\n    \t\t\tprimary_action_label: __('Send'),\n    \t\t\tprimary_action: () => {\n    \t\t\t\tlet values = dialog.get_values();\n    \t\t\t\tif (values) {\n    \t\t\t\t\tconsole.log(values)\n    \t\t\t\t\tfrappe.call({\n    \t\t\t\t\t    method:\"norden.custom.reminder_mail\",\n    \t\t\t\t\t    args:{\n    \t\t\t\t\t        \"message\":values['message'],\n    \t\t\t\t\t        \"email\":values['email']\n    \t\t\t\t\t    },\n    \t\t\t\t\t    callback(r){\n    \t\t\t\t\t        if(r){\n    \t\t\t\t\t            frappe.msgprint(\"A reminder mail has been sent to - \"+values['email'])\n    \t\t\t\t\t        }\n    \t\t\t\t\t    }\n    \t\t\t\t\t})\n    \t\t\t\t}\n    \t\t        dialog.hide();\n    \t\t\t},\n    \t\t});\n    \t\tdialog.show();\n    \t\t},__(\"More Details\"))\n\t    }\n\t    \n\t\t\n\t    \n\t   // stock entry allocation\n    \tif (frappe.user.has_role(\"Stock User\")) {\n\t    if (frm.doc.docstatus == 1) {\n            frm.add_custom_button(__(\"Allocate\"), function () {\n    \t\t\tfrappe.route_options = {\n    \t\t\t\t'customer': frm.doc.party_name,\n    \t\t\t\t'company': frm.doc.company,\n    \t\t\t\t'stock_entry_type': \"Material Transfer\",\n    \t\t\t\t'linked_quotation': frm.doc.name,\n    \t\t\t}\n    \t\t\tfrappe.new_doc('Stock Entry')\n            });\n            \n        }\n\n}\n\n        \n\t    $.each(frm.doc.items,function(i,d){\n\t    \td.disc_amt = d.discount_rate * d.qty\n\t    })\n\t    frm.refresh_field(\"items\")\n\t    \n\t   \n\n\t     $.each(frm.doc.items,function(i,d){\n\t        frappe.db.get_value('Item',{'name':d.item_code},['item_sub_group'])\n            .then(r => {\n                if(r.message.item_sub_group == \"Eyenor\"){\n                    frm.set_value('eyenor',1)\n                }\n            })\n\t    })\n\t    $('.timeline-actions').find('.action-btn').hide();\n//     \tif (frm.doc.work_flow == \"Draft\" && frm.doc.internal_cost_margin > 40 && frappe.user.has_role(\"Sales User\")) {\n//         frm.page.hide_inner_button('Send to Sales Manager');\n// \t\t}\n\t\t\n// \t\tif (frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.internal_cost_margin > 10 && frappe.user.has_role(\"Sales Manager\")) {\n//         frm.page.hide_inner_button('Send to Operation Director');\n// \t\t}\n\t\t\n\n\t\tfrm.set_query(\"price_list_sm\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"is_internal\": \"1\", \"territory\": frm.doc.price_list_region\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfrm.add_custom_button(__(\"Stock Details\"), function () {\n\t\t\tvar item_details_list = []\n\t\t\tvar item_details = {}\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\titem_details = {}\n\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\titem_details['qty'] = d.qty\n\t\t\t\titem_details['rate'] = d.rate\n\t\t\t\titem_details_list.push(item_details)\n\t\t\t})\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.getstock_detail\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"item_details\": item_details_list\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\t\tsize: \"extra-large\",\n\t\t\t\t\t\t\ttitle: 'Stock Details',\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Stock Details',\n\t\t\t\t\t\t\t\t\tfieldname: 'stock_details',\n\t\t\t\t\t\t\t\t\tfieldtype: 'HTML'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\td.fields_dict.stock_details.$wrapper.html(r.message);\n\t\t\t\t\t\td.show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.getstock_detail\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"item_details\": item_details_list\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t},__(\"More Details\"));\n\t\t\n\t\tif(frm.doc.company == \"Norden Communication Middle East FZE\"){\n    \t\tfrm.add_custom_button(__(\"Stock Details UAE\"), function () {\n    \t\t\tvar item_details_list = []\n    \t\t\tvar item_details = {}\n    \t\t\t$.each(frm.doc.items, function (i, d) {\n    \t\t\t\titem_details = {}\n    \t\t\t\titem_details['item_code'] = d.item_code\n    \t\t\t\titem_details['item_name'] = d.item_name\n    \t\t\t\titem_details['qty'] = d.qty\n    \t\t\t\titem_details['description'] = d.description\n    \n    \t\t\t\titem_details['uom'] = d.uom\n    \t\t\t\titem_details_list.push(item_details)\n    \t\t\t})\n    \t\t\tfrappe.call({\n    \t\t\t\tmethod: \"norden.utils.stock_uae\",\n    \t\t\t\targs: {\n    \t\t\t\t\t\"company\": frm.doc.company,\n    \t\t\t\t\t\"item_details\": item_details_list\n    \t\t\t\t},\n    \t\t\t\tcallback(r) {\n    \t\t\t\t\tif (r.message) {\n    \t\t\t\t\t\tlet d = new frappe.ui.Dialog({\n    \t\t\t\t\t\t\tsize: \"extra-large\",\n    \t\t\t\t\t\t\tfields: [\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\tlabel: 'Stock Details',\n    \t\t\t\t\t\t\t\t\tfieldname: 'stock_uae',\n    \t\t\t\t\t\t\t\t\tfieldtype: 'HTML'\n    \t\t\t\t\t\t\t\t},\n    \t\t\t\t\t\t\t],\n    \n    \t\t\t\t\t\t});\n    \t\t\t\t\t\td.fields_dict.stock_uae.$wrapper.html(r.message);\n    \t\t\t\t\t\td.show();\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t});\n    \t\t},__(\"More Details\"));\n\t\t}\n\n\n\t\tif (frm.doc.work_flow) {\n\t\t\tfrm.set_df_property(\"work_flow\", 'hidden', 0)\n\n\t\t}\n\t\telse {\n\t\t\tfrm.set_df_property(\"work_flow\", 'hidden', 1)\n\n\t\t}\n\t\tif(frm.doc.docstatus == 0 && frm.doc.company ==\"Norden Singapore PTE LTD\"){\n\t\t    if (frm.doc.work_flow == \"Draft\" && frm.doc.internal_cost_margin < 30 && frappe.user.has_role(\"Sales User\")){\n    \t\t\tfrm.add_custom_button(__(\"Send to HOD\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for HOD\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to HOD\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n    \t\t}\n        \tif (frm.doc.work_flow == \"Pending for HOD\" && frm.doc.internal_cost_margin < 20 && frappe.user.has_role(\"HOD\")){\n    \t\t\tfrm.add_custom_button(__(\"Send to COO\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for COO\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to COO\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n    \t\t}\n    \t\tif (frm.doc.work_flow == \"Pending for HOD\"  && frappe.user.has_role(\"HOD\") || frm.doc.work_flow == \"Pending for COO\"  && frappe.user.has_role(\"COO\")) {\n    \t\t\tfrm.add_custom_button(__(\"Reject\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Draft\")\n    \t\t\t\tfrm.save()\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#FF0000\" });\n    \t\t}\n\t\t}\n\t\t\n\t\t\n        if(frm.doc.docstatus == 0 && frm.doc.company !=\"Norden Singapore PTE LTD\"){\n            if (frm.doc.work_flow == \"Pending for HOD\") {\n    \t\t    if(frm.doc.internal_cost_margin < 25 && frappe.user.has_role(\"HOD\")){\n        \t\t\tfrm.add_custom_button(__(\"Send to COO\"), function () {\n        \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for COO\")\n        \t\t\t\tfrm.save()\n        \t\t\t\tfrappe.show_alert({ message: __(\"Sent to COO\"), indicator: 'green' });\n        \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n        \t\t}\n            }\n\t\t\n\n    \t\tif (frm.doc.work_flow == \"Pending for COO\" && frm.doc.work_flow != \"Pending for CFO\" && frappe.user.has_role(\"COO\") || frm.doc.grand_total >= 10000000 && frm.doc.currency == \"INR\" || frm.doc.grand_total >= 250000 && frm.doc.currency != \"INR\" && frm.doc.company != \"Norden Communication Middle East FZE\") {\n    // \t\t\tif(frm.doc.internal_cost_margin < 10 && frappe.user.has_role(\"COO\")){\n        \t\t\tfrm.add_custom_button(__(\"Send to CFO\"), function () {\n        \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for CFO\")\n        \t\t\t\tfrm.save()\n        \t\t\t\tfrappe.show_alert({ message: __(\"Sent to CFO\"), indicator: 'green' });\n        \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n    // \t\t\t}\n    \t\t}\n    \n    \t\tif (frm.doc.work_flow == \"Pending for CFO\") {\n    \t\t\tfrm.remove_custom_button('Send to CFO');\n    \t\t}\n        }\n\t\t\n// \t\tif (frm.doc.work_flow == \"Draft\" && frm.doc.internal_cost_margin > 40 && frappe.user.has_role(\"Sales User\")) {\n// \t\t\tfrm.remove_custom_button('Send to Sales Manager');\n// \t\t}\n        if(frm.doc.company !=\"Norden Singapore PTE LTD\"){\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 10000000 && frm.doc.currency == \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow == \"Pending for Sales Manager\") {\n\t\t\tif(frm.doc.internal_cost_margin < 30 && frappe.user.has_role(\"Sales Manager\")){\n    \t\t\tfrm.add_custom_button(__(\"Send to HOD\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for HOD\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Sales HOD\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t\t}\n\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 250000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.company != \"Norden Communication Middle East FZE\") {\n\t\t\tif(frappe.user.has_role(\"Sales Manager\")){\n    \t\t\tfrm.add_custom_button(__(\"Send to HOD\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for HOD\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to HOD\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n            }\n\t\t}\n\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 250000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for Operation Director\" && frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.company == \"Norden Communication Middle East FZE\" && frappe.user.has_role(\"Sales Manager\")) {\n\t\t\tif(frm.doc.internal_cost_margin < 10){\n    \t\t\tfrm.add_custom_button(__(\"Send to Operation Director\"), function () {\n    \t\t\t    frappe.call({\n    \t\t\t        method:\"norden.custom.update_workflow_status\",\n    \t\t\t        args:{\n    \t\t\t            'name':frm.doc.name,\n    \t\t\t            'state':\"Pending for Operation Director\"\n    \t\t\t        }\n    \t\t\t    })\n    \t\t\t\twindow.location.reload();\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Operation Director\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t\t}\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 10000000 && frm.doc.currency == \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow != \"Pending for Sales Manager\") {\n\t\t    if(frm.doc.internal_cost_margin < 40){\n    \t\t\tfrm.add_custom_button(__(\"Send to Sales Manager\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for Sales Manager\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Sales Manager\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t    }\n\t\t}\n\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total < 250000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for HOD\" && frm.doc.work_flow != \"Pending for CFO\" && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow != \"Pending for Sales Manager\" && frm.doc.work_flow != \"Pending for Operation Director\") {\n\t\t\tif(frm.doc.internal_cost_margin < 40){\n    \t\t\tfrm.add_custom_button(__(\"Send to Sales Manager\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for Sales Manager\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Sales Manager\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t\t}\n\t\t}\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total > 250000 && frm.doc.currency != \"INR\" && frm.doc.work_flow != \"Pending for HOD\"  && frm.doc.work_flow != \"Pending for COO\" && frm.doc.work_flow != \"Pending for Sales Manager\" && frm.doc.work_flow != \"Pending for Operation Director\"  && frm.doc.company == \"Norden Communication Middle East FZE\") {\n\t\t\tif(frm.doc.internal_cost_margin < 40){\n\t\t\t    frm.add_custom_button(__(\"Send to Sales Manager\"), function () {\n    \t\t\t\tfrm.set_value(\"work_flow\", \"Pending for Sales Manager\")\n    \t\t\t\tfrm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Sales Manager\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t\t}\n\t\t}\n\t\tif (frm.doc.docstatus == 0 && frm.doc.grand_total > 250000 && frm.doc.currency != \"INR\" && frm.doc.work_flow == \"Pending for Sales Manager\" && frm.doc.work_flow != \"Pending for Operation Director\" && frappe.user.has_role(\"Sales Manager\") && frm.doc.company == \"Norden Communication Middle East FZE\") {\n\t\t\tif(frm.doc.internal_cost_margin < 10){\n    \t\t\tfrm.add_custom_button(__(\"Send to Operation Director\"), function () {\n    \t\t\t    frappe.call({\n    \t\t\t        method:\"norden.custom.update_workflow_status\",\n    \t\t\t        args:{\n    \t\t\t            'name':frm.doc.name,\n    \t\t\t            'state':\"Pending for Operation Director\"\n    \t\t\t        }\n    \t\t\t    })\n    \t\t\t\twindow.location.reload();\n    \t\t\t //   frm.set_value(\"work_flow\",\"Pending for Operation Director\")\n    \t\t\t\t// frm.save()\n    \t\t\t\tfrappe.show_alert({ message: __(\"Sent to Operation Director\"), indicator: 'green' });\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#008000\" });\n\t\t\t}\n\t\t}\n        if(frm.doc.docstatus == 0){\n    \t\tif (frm.doc.work_flow == \"Pending for Sales Manager\" && frappe.user.has_role(\"Sales Manager\") || frm.doc.work_flow == \"Pending for HOD\" || frm.doc.work_flow == \"Pending for COO\" || frm.doc.work_flow == \"Pending for CFO\" || frm.doc.work_flow == \"Pending for Operation Director\" && frappe.user.has_role(\"Operation Director\")) {\n    \t\t\tfrm.add_custom_button(__(\"Reject\"), function () {\n    \t\t\t    frappe.call({\n    \t\t\t        method:\"norden.custom.update_workflow_status\",\n    \t\t\t        args:{\n    \t\t\t            'name':frm.doc.name,\n    \t\t\t            'state':\"Draft\"\n    \t\t\t        }\n    \t\t\t    })\n\t\t\t\twindow.location.reload();\n    \t\t\t\t// frm.set_value(\"work_flow\", \"Draft\")\n    \t\t\t\t// frm.save()\n    \t\t\t\t// \t\t\tfrappe.show_alert({message:__(\"Sent to Sales Manager\"), indicator:'green'});\n    \t\t\t}).css({ 'color': 'white', 'background-color': \"#FF0000\" });\n    \t\t}\n        }\n\t}\n\n\t\tif (!frm.doc.__islocal) {\n\t        frm.add_custom_button(__(\"Print Quotation\"), function () {\n\t\t\t\tvar f_name = frm.doc.name\n\t\t\t\tif (frm.doc.docstatus == 0) {\n\t\t\t\t\tif (frm.doc.company == \"Sparcom Ningbo Telecom Ltd\") {\n\t\t\t\t\t\tvar print_format = \"SPARCOM Quotation\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (frm.doc.company == 'Norden Communication Middle East FZE') {\n\t\t\t\t    \tvar print_format = \"Dubai New Quote\"\n\t\t\t\t    \tvar draft = 1\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar print_format = \"print Quotation\"\n\t\t\t\t\t\tvar draft = 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (frm.doc.docstatus == 1) {\n\t\t\t\t\tif (frm.doc.company == \"Sparcom Ningbo Telecom Ltd\") {\n\t\t\t\t\t    var print_format = \"SPARCOM Quotation\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (frm.doc.company == 'Norden Communication Middle East FZE') {\n\t\t\t\t\t\tvar print_format = \"Dubai New Quote\"\n\t\t\t\t\t\tvar draft = 0\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar print_format = \"print Quotation\";\n\t\t\t\t\t\tvar draft = 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Quotation\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n\t\t\t});\n\t\t    \n\t\t    \n\t\t\t\n\t\t}\n\n\t\tif (!frm.doc.__islocal) {\n\t\t\tif (frm.doc.company == \"NCPL -Bangalore\" || frm.doc.company == \"Norden Communication India\" || frm.doc.company == \"Norden Communication Pvt Ltd\") {\n\t\t\t\tfrm.add_custom_button(__(\"India Quotation\"), function () {\n\n\t\t\t\t\tvar f_name = frm.doc.name\n\n\t\t\t\t\tvar print_format = \"Quotation-1\"\n\n\t\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Quotation\")\n\t\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (!frm.doc.__islocal) {\n\t\t\tif (frm.doc.company == \"Norden Singapore PTE LTD\") {\n\t\t\t\tfrm.add_custom_button(__(\"Test Quote\"), function () {\n\t\t\t\t\tvar f_name = frm.doc.name\n\t\t\t\t\tvar print_format = \"Singapore Quote\"\n\t\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Quotation\")\n\t\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t\t));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n        \n\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('national_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('national_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('regional_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('regional_distributor', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('system_integrator', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('system_integrator', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('end_user', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('enduser', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer') {\n\t\t\tfrm.set_query('stockist', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfrm.set_query('stockist', function (doc) {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\tcompany(frm) {\n\t    if(frm.doc.__islocal){\n    \t    if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n    \t        frm.set_value(\"tc_name\", \"UAE Terms and Conditions\")\n    \t        frm.set_value(\"wr_terms\", \"UAE Warranty Terms\")\n    \t    }\n    \t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t{\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.custom.get_default_currency\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tfrm.set_value(\"currency\", r.message)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\tinvoice_type(frm) {\n\t\tif (frm.doc.invoice_type) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t        if (frm.doc.invoice_type == 'Taxable') {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"norden.utils.get_series_with_tax\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t\t},\n\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\t\t\targs: {\n\t\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t\t},\n\t\t\t\t\tcallback(r) {\n\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t    }\n\t}\n})\n\nfrappe.ui.form.on('Quotation Item', {\n    basic_details(frm,cdt,cdn){\n        var child = locals[cdt][cdn]\n        if(child.item_code){\n            frappe.call({\n\t\t\t\tmethod: \"norden.utils.get_basic_details\",\n\t\t\t\targs: {\n\t\t\t\t\t\"item_code\": child.item_code,\n\t\t\t\t\t\"company\":frm.doc.company\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\t\tsize: \"medium\",\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfieldname: 'basic_details',\n\t\t\t\t\t\t\t\t\tfieldtype: 'HTML'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\td.fields_dict.basic_details.$wrapper.html(r.message);\n\t\t\t\t\t\td.show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n        }\n        \n    },\n\n\titem_code(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tfrappe.db.get_value('Item',{'name':child.item_code},['item_sub_group'])\n        .then(r => {\n            if(r.message.item_sub_group == \"Eyenor\"){\n                frm.set_value('eyenor',1)\n            }\n        })\n\t\tvar rate = 0\n\t\tif (child.price_list_rate) {\n\t\t\tchild.margin_type = \"Percentage\"\n\t\t}\n\t\tfrm.refresh_field(\"items\")\n\n\n\t\tif (child.item_code) {\n\n\t\t\tfrm.trigger('fetch')\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.stock_popup',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code,\n\t\t\t\t\t'company': frm.doc.company\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\tfrm.get_field(\"items_html\").$wrapper.html(d.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tfrappe.db.get_value('Bin',{'item_code':child.item_code,'warehouse':\"Main Stores - NCME\"},['actual_qty','reserved_stock'])\n            .then(d => {\n                if(d.message){\n                    const actual = d.message.actual_qty;\n                    const reserved = d.message.reserved_stock;\n                    const exstock = actual - reserved;\n                    child.ex_stock_qty = exstock\n                }\n            })\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.custom.get_country_name\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\tchild.country_name = d.message\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.custom.get_item_rate',\n\t\t\t\targs: {\n\t\t\t\t\t'item_code': child.item_code,\n\t\t\t\t\t'company': frm.doc.company,\n\t\t\t\t\t'price_list': frm.doc.selling_price_list,\n\t\t\t\t\t'doc_currency': frm.doc.currency\n\t\t\t\t},\n                freeze:true,\n                freeze_message:__(\"Fetching Price..\"),\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tchild.unit_price = r.message[0] * child.conversion_factor\n\t\t\t\t\t\tchild.unit_price_document_currency = r.message[1] * child.conversion_factor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t}\n\t},\n\trate(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t\n\t    frappe.call({\n\t\t\tmethod: 'norden.custom.get_item_rate',\n\t\t\targs: {\n\t\t\t\t'item_code': child.item_code,\n\t\t\t\t'company': frm.doc.company,\n\t\t\t\t'price_list': frm.doc.selling_price_list,\n\t\t\t\t'doc_currency': frm.doc.currency\n\t\t\t},\n            freeze:true,\n            freeze_message:__(\"Fetching Price..\"),\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tchild.unit_price = r.message[0]* child.conversion_factor\n\t\t\t\t\tchild.unit_price_document_currency = r.message[1]* child.conversion_factor\n\t\t\t\t\tchild.uom = r.message[2]\n\t\t\t\t\tchild.margin_rate = child.unit_price * (child.margin_percentage / 100)\n            \t\tchild.margin_value = child.margin_rate + child.unit_price_document_currency\n            \t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n            \t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n            \t\tchild.discount_value = child.margin_value - child.discount_rate\n            \t\tchild.rate = child.discount_value\n            \t\tchild.amount = child.rate * child.qty\n            \t\tfrm.refresh_field(\"items\")\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t},\n\tunit_price(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tchild.margin_rate = child.unit_price * (child.margin_percentage / 100)\n\t\tchild.margin_value = child.margin_rate + child.unit_price_document_currency\n\t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n\t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tmargin_percentage(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tif(child.unit_price_document_currency){\n    \t\tchild.margin_rate = child.unit_price_document_currency * (child.margin_percentage / 100)\n    \t\tchild.margin_value = child.margin_rate + child.unit_price_document_currency\n\t\t}\n\t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tmargin_rate(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tif(child.unit_price_document_currency > 0){\n    \t\tchild.margin_percentage = (parseFloat(child.margin_rate) / parseFloat(child.unit_price_document_currency)) * 100\n    \t\tchild.margin_value = parseFloat(child.margin_rate) + parseFloat(child.unit_price_document_currency)\n\t\t}\n\t\telse{\n\t\t    child.unit_price_document_currency = 0\n    \t\tchild.margin_percentage = (parseFloat(child.margin_rate) / parseFloat(child.unit_price_document_currency)) * 100\n    \t\tchild.margin_value = parseFloat(child.margin_rate) + parseFloat(child.unit_price_document_currency)\n\t\t}\n\t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tdiscount(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tif(child.unit_price_document_currency){\n    \t\tchild.margin_rate = child.unit_price_document_currency * (child.margin_percentage / 100)\n    \t\tchild.margin_value = child.margin_rate + child.unit_price_document_currency\n\t\t}\n\t\tchild.discount_rate = ((child.discount / 100) * child.margin_value)\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tdiscount_rate(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tchild.discount = (child.discount_rate / child.unit_price_document_currency) * 100\n\t\tif(child.unit_price_document_currency){\n\t    \tchild.margin_rate = child.unit_price_document_currency * (child.margin_percentage / 100)\n    \t\tchild.margin_value = child.margin_rate + child.unit_price_document_currency\n\t\t}\n\t\tchild.discount_value = child.margin_value - child.discount_rate\n\t\tchild.rate = child.discount_value\n\t\tchild.amount = child.rate * child.qty\n\t\tfrm.refresh_field(\"items\")\n\t},\n\tuom(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\tif (child.uom) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'norden.utils.check_uom',\n\t\t\t\targs: {\n\t\t\t\t\t\"item\": child.item_code,\n\t\t\t\t\t\"uom\": child.uom\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tvar data = 0\n\t\t\t\t\t\t$.each(r.message, function (i, v) {\n\t\t\t\t\t\t\tif (child.uom == v.uom) {\n\t\t\t\t\t\t\t\tdata = data + 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (data == 0) {\n\t\t\t\t\t\t\tfrappe.msgprint(\"Please select relevant UOM\")\n\t\t\t\t\t\t\tchild.uom = ''\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t}\n\t},\n\titems_remove(frm) {\n\t\tfrm.trigger('fetch')\n\t},\n\toptional_item(frm, cdt, cdn) {\n\t\tvar row = locals[cdt][cdn]\n\t\tif (row.optional_item) {\n\t\t\trow.price_list_rate = 0\n\t\t\trow.base_price_list_rate = 0\n\t\t\trow.rate = 0\n\t\t\tfrm.refresh_field('items')\n\t\t}\n\n\t},\n\ttarget_rate(frm, cdt, cdn) {\n        var child = locals[cdt][cdn]\n        if(!child.unit_price_document_currency){\n            child.margin_rate = child.target_rate\n            child.unit_price_document_currency = 0\n            child.margin_percentage = (parseFloat(child.margin_rate) / parseFloat(child.unit_price_document_currency)) * 100\n            child.margin_value = parseFloat(child.margin_rate) + parseFloat(child.unit_price_document_currency)\n            child.discount_rate = ((child.discount / 100) * child.margin_value)\n            child.discount_value = child.margin_value - child.discount_rate\n            child.rate = child.discount_value\n            child.amount = child.rate * child.qtyv\n        }\n        if(child.unit_price_document_currency > 0){\n            if(child.unit_price_document_currency < child.target_rate){\n            child.margin_rate = child.target_rate - child.unit_price_document_currency\n            child.margin_percentage = (parseFloat(child.margin_rate) / parseFloat(child.unit_price_document_currency)) * 100\n            child.margin_value = child.margin_rate + child.unit_price_document_currency\n            child.discount = 0\n            child.discount_rate = 0\n            child.discount_value = child.margin_value - child.discount_rate\n            child.rate = child.discount_value\n            child.amount = child.rate * child.qty\n        }\n        if(child.unit_price_document_currency > child.target_rate){\n            child.discount_rate = child.unit_price_document_currency - child.target_rate\n            child.discount = (child.discount_rate / child.unit_price_document_currency) * 100\n            // child.margin_percentage = (parseFloat(child.margin_rate) / parseFloat(child.unit_price_document_currency)) * 100\n            child.margin_rate = 0\n            child.margin_percentage = 0\n            child.margin_value = child.margin_rate + child.unit_price_document_currency\n            // child.discount_rate = ((child.discount / 100) * child.margin_value)\n            // child.discount_rate = ((child.discount / 100) * child.margin_value)\n            child.discount_value = child.margin_value - child.discount_rate\n            child.rate = child.discount_value\n            child.amount = child.rate * child.qty\n        }\n    }\n    frm.refresh_field(\"items\")\n    },\n})\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 1,
  "modified": "2023-11-27 16:03:07.529843",
  "module": null,
  "name": "Material Request-Form",
  "script": "frappe.ui.form.on('Material Request', {\n    validate(frm){\n        if(frm.doc.__islocal){\n            frappe.call({\n                method : \"norden.custom.mr_duplicate\",\n                args:{\n                    'material_request' : frm.doc.name,\n                },\n                callback(r){\n                    if (r.message) {\n        //                 frm.clear_table('items')\n           //             $.each(r.message,function(i,d){\n        // \t\t\t\t\tfrm.add_child('items',{\n        // \t\t\t\t\t    'item_code':d.item_code,\n        // \t\t\t\t\t    'item_name':d.item_name,\n        // \t\t\t\t\t    'qty':d.qty,\n        // \t\t\t\t\t    'uom':d.uom,\n        // \t\t\t\t\t    'rate':d.rate,\n        // \t\t\t\t\t    'bom_no':d.bom_no,\n        // \t\t\t\t\t    'delivery_date':d.delivery_date,\n        // \t\t\t\t\t    'description':d.description,\n        // \t\t\t\t\t    'amount':d.amount,\n        // \t\t\t\t\t    'warehouse':d.warehouse,\n        // \t\t\t\t\t})\n           //             })\n        \t\t\t// \tfrm.refresh_field('items')\n        \t\t\t}\n                }\n            })\n        }\n    \t$.each(frm.doc.items,function(i,j){\n    \t    j.balance_to_be_ordered = j.sales_order_qty - j.allocated_quantity\n    \t    frm.refresh_field(\"items\")\n    \t})\n//         if(frm.doc.items){\n//             var list = []\n//             var item_details_list = []\n//             var item_details = {}\n//             $.each(frm.doc.items, function (i, d) {\n//             item_details = {}\n//             item_details['item_code'] = d.item_code\n//             item_details['description'] = d.description\n//             item_details_list.push(item_details)\n//         })\n        \n//         frappe.call({\n//             \tmethod: \"norden.custom.get_duplicate_item\",\n// \t\t\targs: {\n// \t\t\t    'item_details': item_details_list,\n// \t\t\t},\n//             callback(r){\n//                 if(r.message){\n//                     console.log(r.message)\n//                     $.each(r.message,function(i,v){\n//                         console.log(v)\n//                     var total = 0\n//                     var sales_price = 0\n//                     $.each(frm.doc.items,function(i,d){\n//                         if(d.item_code == v){\n//                         total = total + d.qty\n//                         sales_price = sales_price + d.sales_price\n//                         }\n//             \t\t})\n//             \t\tcur_frm.get_field(\"items\").grid.grid_rows[0].remove();\n//             \t\tconsole.log(sales_price)\n//             \t\t frm.add_child('items',{\n//     \t\t\t    item_code :v,\n//     \t\t\t    qty:total,\n//     \t\t\t    sales_price:sales_price,\n//     \t\t\t    description:v.description,\n//     \t\t\t    schedule_date:v.schedule_date,\n//     \t\t\t    uom:v.uom,\n//     \t\t\t    conversion_factor:v.conversion_factor,\n//     \t\t\t    stock_uom:v.stock_uom\n//     \t\t\t //   description:d.description,\n//                     })\n//                     frm.refresh_field('items')\n//         \t\t\ttotal = 0\n//         \t\t}) \n                    \n//                 }\n//             }\n//         })\n//         }\n        // if(frm.doc.workflow_state == \"Draft\"){\n            if (frm.doc.items) {\n                var total_amount = 0\n                $.each(frm.doc.items, function (i, d) {\n                    if(d.sales_order_qty == 0){\n                        total_amount = total_amount + (d.rate*d.stock_quantity)\n                    }\n                    else{\n                       total_amount = total_amount + (d.rate*d.qty) \n                    }\n                })\n                frm.set_value(\"total\",total_amount)\n                \n            $.each(frm.doc.items, function (i, d) {\n                if(d.stock_quantity){\n                    d.balance_to_be_ordered = d.sales_order_qty - d.allocated_quantity\n                    d.qty = d.balance_to_be_ordered + d.stock_quantity\n                }\n            })\n        }\n    },\n    \n    onload(frm){\n    \n    \n    if(frm.doc.items){\n      $.each(frm.doc.items, function (i,d) {\n            d.project = ''\n             if(frm.doc.project){\n                d.project_reference = frm.doc.project_name\n             }\n             \n        })\n    }\n    \n    if(frm.doc.__islocal){\n        \n        if(frm.doc.sales_order_number){\n            frappe.db.get_value('Warehouse',{'company':frm.doc.company,'default_for_stock_transfer':1},'name')\n            .then(r => {\n    \t        $.each(frm.doc.items,function(i,j){\n                    frappe.db.get_value('Bin',{'warehouse':r.message.name,'item_code':j.item_code},'actual_qty')\n                    .then(k => {\n                        j.stock_balance = k.message.actual_qty\n                    })\n                    frm.refresh_field(\"items\")\n                })\n                frm.refresh_field(\"items\")\n        \t})\n            frappe.call({\n        \t    method:'norden.custom.get_allocate_qty',\n        \t    args:{\n        \t        'so_no':frm.doc.sales_order_number\n        \t    },\n        \t    callback(r){\n        \t        if (r.message){\n        \t            console.log(r.message)\n        \t            $.each(frm.doc.items,function(i,k){\n            \t            $.each(r.message,function(i,j){\n        \t                    if(k.item_code == j.item_code){\n        \t                       // k.allocated_quantity = j.qty\n        \t                        k.balance_to_be_ordered = k.sales_order_qty - k.allocated_quantity\n        \t                    }\n            \t            })\n        \t            })\n        \t            frm.refresh_field(\"items\")\n        \t            \n        \t        }\n        \t        \n        \t    }\n        \t})\n        \tfrappe.call({\n    method: 'norden.custom.get_qty_from_stock',\n    args: {\n        'so_no': frm.doc.sales_order_number\n    },\n    callback: function (r) {\n        if (r.message) {\n            console.log(r.message);\n            var allocatedQuantities = {};\n            $.each(r.message, function (i, data) {\n                allocatedQuantities[data.item_code] = data.reserved_qty;\n            });\n            $.each(frm.doc.items, function (i, k) {\n                if (allocatedQuantities[k.item_code] !== undefined) {\n                    k.allocated_quantity = allocatedQuantities[k.item_code];\n                    console.log(k.allocated_quantity);\n                }\n            });\n\n            frm.refresh_field(\"items\");\n        }\n    }\n});\n\n            frappe.call({\n        \t    method:'norden.custom.get_salesorder_qty',\n        \t    args:{\n        \t        'so_no':frm.doc.sales_order_number\n        \t    },\n        \t    callback(r){\n        \t        if (r.message){\n        \t            $.each(frm.doc.items,function(i,k){\n        \t                $.each(r.message,function(i,j){\n        \t                    if(k.item_code == j.item_code){\n        \t                        k.sales_order_qty = j.qty\n        \t                        k.balance_to_be_ordered = k.sales_order_qty - k.allocated_quantity\n                                    k.qty = k.balance_to_be_ordered + k.stock_quantity\n        \t                    }\n        \t                })\n        \t            })\n        \t            frm.refresh_field(\"items\")\n        \t            \n        \t        }\n        \t        \n        \t    }\n        \t})\n        }\n\t    \n\t    $.each(frm.doc.items,function(i,d){\n    \t    if(d.item_code){\n        \t    frappe.call({\n            \t    method:'norden.custom.get_po_qty',\n            \t    args:{\n            \t        'item':d.item_code,\n            \t        'company':frm.doc.company\n            \t    },\n            \t    callback(r){\n            \t        if (r.message){\n            \t            d.po_qty = r.message\n            \t            frm.refresh_field(\"items\")\n            \t        }\n            \t    }\n            \t})\n    \t    }\n    \t})\n    \t\n    \t\n    \t\n      if(frm.doc.sales_order_number){\n        frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Sales Order\",\n\t\t\t\tfieldname:\"project_name\",\n\t\t\t\tfilters: {name:frm.doc.sales_order_number}\n\t\t\t}\n\t\t}).then((r) => {\n\t\t\tif(r.message) {\n\t\t\tfrm.set_value(\"consignment_type\",\"Project\")\n\t\t\tfrm.set_value(\"project_name\",r.message.project_name)\n\t\t\t}\n\t\t});\n\t} \n    }\n    \n    \n        if(!frm.doc.file_number){\n            frm.set_value('requester_name',frappe.session.user)\n        }\n        if(frm.doc.sales_order_number){\n            //  frappe.call({\n            //     method: 'norden.custom.check_so_items',\n            //     args: {\n            //         'so_no':frm.doc.sales_order_number,\n            //     },\n            //     callback(r) {\n            //         if (r.message){\n            //             console.log(r.message)\n            //         }\n            //     }\n            // })\n        var df = frappe.meta.get_docfield(\"Material Request Item\",\"sales_price\", frm.doc.name);\n\t\tdf.read_only = 1;\n        }\n       \n        if(frm.doc.docstatus != 1){\n             if(frm.doc.transaction_date){\n        let date = frappe.datetime.add_days(frappe.datetime.add_days(frm.doc.transaction_date, 40));\n        frm.set_value(\"schedule_date\",date)\n        }\n        \n        if(frm.doc.file_number){\n            frappe.call({\n            method: 'norden.custom.fetch_customer',\n            args: {\n                'file': frm.doc.file_number\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.set_value(\"customers\",d.message[0])\n                    frm.set_value(\"requester_name\",d.message[1])\n                }\n\n            }\n        })\n        }\n        }\n       \n            \n        //  if (frm.doc.items) {\n        //     $.each(frm.doc.items, function (i, d) {\n        //         d.sales_order_qty = d.qty\n        //         // d.qty = d.sales_order_qty + d.stock_quantity\n        //     })\n        // }\n        \n        \n        \n        \n        \n    },\n\n    \n\n    view_stock_available(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            // item_details['item_name'] = d.item_name\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.utils.stock_available',\n            args: {\n                'item_details': item_details_list\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"approval_stock_available\").$wrapper.html(\"\");\n                    frm.get_field(\"approval_stock_available\").$wrapper.html(d.message);\n                }\n\n            }\n        })\n\n    },\n    view_previous_purchase_orders(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.utils.previous_purchase_orders',\n            args: {\n                'item_details': item_details_list\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"previous_purchase_orrders\").$wrapper.html(\"\");\n                    frm.get_field(\"previous_purchase_orrders\").$wrapper.html(d.message);\n                }\n\n            }\n        })\n\n    },\n\n    refresh(frm) {\n        if(frm.doc.__islocal){\n            let date = new Date().toJSON().slice(0, 10)\n            frm.set_value(\"transaction_date\",date)\n        }\n        // console.log(date)\n        if(!frm.doc.__islocal){\n\t        frm.add_custom_button(__(\"Print Material Request\"), function () {\n                var f_name = frm.doc.name\n               \n                    var print_format =\"Material Request\";\n                \n                \n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Material Request\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n            \n        }\n\n        // \t  frm.set_value('customer_name',customer)\n\n\n        $(\"[data-fieldname='item_name']\").on('click', (e) => {\n            const item_name = $(e.currentTarget).text();\n            frappe.call({\n                method: 'norden.custom.mat_req',\n                args: {\n                    'item_table': frm.doc.items\n                },\n                callback(d) {\n                    if (d.message) {\n                        $(\"[data-fieldname='item_name']\").popover({\n                            html: true,\n                            sanitize: false,\n                            container: 'body',\n                            content: d.message,\n\n                        });\n                    }\n                }\n            })\n\n        });\n        \n        if (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\n    },\n    company(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n     set_series(frm) {\n        if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t},\n    \n    after_cancel(frm) {\n        let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n\n\n        frappe.msgprint(\"please fill the cancellation remarks\")\n\n\n    },\n    \n   \n\t\n    fetch(frm) {\n        frappe.call({\n            method: 'norden.custom.get_stock_balance',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('stock_availability')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('stock_availability', {\n                            'item_code': v[0],\n                            'item_name': v[1],\n                            'warehouse': v[2],\n                            'qty': v[3],\n                            'uom': v[4],\n                            'value': v[5]\n                        })\n                        frm.refresh_field('stock_availability')\n                    })\n                }\n            }\n        })\n        frappe.call({\n            method: 'norden.custom.get_previous_po',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('previous_purchase_order')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('previous_purchase_order', {\n                            'item_code': v[0],\n                            'item_name': v[1],\n                            'supplier': v[2],\n                            'qty': v[3],\n                            'po_date': v[4],\n                            'amount': v[5],\n                            'purchase_order': v[6]\n                        })\n                        frm.refresh_field('previous_purchase_order')\n                    })\n                }\n            }\n        })\n        frappe.call({\n            method: 'norden.custom.get_out_qty',\n            args: {\n                'item_table': frm.doc.items\n            },\n            callback(d) {\n                frm.clear_table('stock_out_qty')\n                if (d.message) {\n                    $.each(d.message, function (i, v) {\n                        frm.add_child('stock_out_qty', {\n                            'item_code': v[0],\n                            'warehouse': v[1],\n                            'qty': v[2],\n                            'date': v[3],\n                            'out_type': v[4]\n                        })\n                        frm.refresh_field('stock_out_qty')\n                    })\n                }\n            }\n        })\n       \n    },\n    view_item_details(frm) {\n        var item_details_list = []\n        var item_details = {}\n        $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            item_details['item_name'] = d.item_name\n            item_details['qty'] = d.qty\n            item_details['type'] = d.type\n            item_details_list.push(item_details)\n        })\n        frappe.call({\n            method: 'norden.custom.mat_req',\n            args: {\n                'item_details': item_details_list,\n                \"company\":frm.doc.company\n            },\n            callback(d) {\n                if (d.message) {\n                    frm.get_field(\"approval_stage\").$wrapper.html(\"\");\n                    frm.get_field(\"approval_stage\").$wrapper.html(d.message);\n\n                }\n            }\n        })\n\n    },  \n \n}),\n    frappe.ui.form.on('Material Request Item', {\n        item_code(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            if (child.item_code) {\n                //  child.delivery_terms = frm.doc.delivery_terms\n                frm.trigger('fetch')\n                frappe.call({\n                    method: 'norden.custom.stock_popup',\n                    args: {\n                        'item_code': child.item_code,\n                        \"company\":frm.doc.company\n                    },\n                    callback(d) {\n                        if (d.message) {\n                            // frm.get_field(\"items_html\").$wrapper.html(d.message);\n                        }\n                    }\n                })\n                \n                \n                frappe.call({\n                    method: 'norden.custom.get_last_po',\n                    args: {\n                        'item_code': child.item_code,\n                        \"company\":frm.doc.company\n                    },\n                    callback(r) {\n                        if (r.message){\n                            child.rate = r.message.rate\n                            child.amount = r.message.rate\n                            child.supplier = r.message.supplier\n                        }\n                    }\n                })\n\n            }\n\n        },\n        \n        stock_quantity(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            if(child.stock_quantity) {\n                child.amount = child.rate * child.stock_quantity\n                child.qty = child.balance_to_be_ordered + child.stock_quantity\n            }\n            frm.refresh_field(\"items\")\n        },\n        \n        items_remove(frm) {\n            frm.trigger('fetch')\n        },\n    }),\n    frappe.ui.form.on('Material Request Item', {\n        item_code(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            if (child.item_code) {\n                frm.trigger('fetch')\n               \n\n            }\n\n        },\n        sales_order_qty(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            child.balance_to_be_ordered = child.sales_order_qty - child.allocated_quantity\n            child.qty = child.balance_to_be_ordered + child.stock_quantity\n            frm.refresh_field(\"items\")\n        },\n        stock_quantity(frm, cdt, cdn) {\n            var child = locals[cdt][cdn]\n            child.balance_to_be_ordered = child.sales_order_qty - child.allocated_quantity\n            child.qty = child.balance_to_be_ordered + child.stock_quantity\n            frm.refresh_field(\"items\")\n        },\n        items_remove(frm) {\n            frm.trigger('fetch')\n        }\n    })\n                     \n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2024-01-03 10:07:38.747777",
  "module": null,
  "name": "Purchase Order-Form",
  "script": "frappe.ui.form.on('Purchase Order', {\n    supplier_part(frm){\n        $.each(frm.doc.items,function(i,d){\n\t        frappe.call({\n            method: 'norden.custom.get_supplier_part',\n            args: {\n                'item_code': d.item_code,\n            },\n            callback(r) {\n                if (r.message) {\n                    $.each(r.message,function(i,j){\n                        if(j.supplier == frm.doc.supplier){\n                            d.supplier_part_no = j.supplier_part_no\n                        }\n                    })\n                }\n            }\n        })\n\t    })\n    },\n    \n    \tsetup: function (frm) {\n    \t     frm.set_df_property('html_view', 'hidden', 1);\n\t},\n    \n//     alternate_supplier(frm){\n//         if (frm.doc.alternate_supplier){\n// \t       frm.set_query(\"alternate_supplier_address\", function() {\n// \t\t\treturn {\n// \t\t\t\tquery: \"norden.custom.get_address\",\n// \t\t\t\tfilters :{\n// \t\t\t\t    'supplier':frm.doc.alternate_supplier\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t};\n// \t\t});\n\t          \n// \t        }\n        \n//     },\n\n    view(frm){\n        if(frm.doc.sales_order_number && frm.doc.material_request_number){\n         var item_details_list = []\n            var item_details = {}\n            $.each(frm.doc.items, function (i, d) {\n                item_details = {}\n                item_details['item_code'] = d.item_code\n                item_details['rate'] = d.rate\n                item_details_list.push(item_details)\n            })\n            \n        frappe.call({\n                method: 'norden.utils.po_file_summary',\n                args: {\n                \"so\":frm.doc.sales_order_number,\n                \"mr\":frm.doc.material_request_number,\n                \"supplier\":frm.doc.supplier,\n                \"currency\":frm.doc.currency,\n                // \"po_template\":frm.doc.payment_terms_template,\n                'item_details': item_details_list,\n                },\n                callback(r) {\n                if (r.message) {\n                    frm.get_field(\"po_details\").$wrapper.html(r.message);\n                }\n                \n                else{\n                    frappe.msgprint(\"No Data Found\")\n                }\n                    \n                   \n                }\n            })\n        }\n    },\n    \n    \n        view_details(frm){\n            frm.set_df_property('html_view', 'hidden', 0);\n            var item_details_list = []\n            var item_details = {}\n            $.each(frm.doc.items, function (i, d) {\n                item_details = {}\n                item_details['item_code'] = d.item_code\n                item_details['item_name'] = d.item_name\n                item_details['description'] = d.description\n                item_details['qty'] = d.qty\n                item_details['rate'] = d.rate\n                item_details['special_cost'] = d.special_cost\n                item_details_list.push(item_details)\n            })\n            \n        if(frm.doc.sales_order_number){\n            frappe.call({\n                method: 'norden.custom.get_item_details',\n                args: {\n                \"mat_rq\":frm.doc.material_request_number,\n                \"company\":frm.doc.company,\n                \"name\":frm.doc.name,\n                \"currency\":frm.doc.currency,\n                \"so_no\":frm.doc.sales_order_number,\n                'item_details': item_details_list,\n                \"supplier\":frm.doc.supplier,\n                \n                },\n                callback(r) {\n                    if (r.message) {\n                        frm.get_field(\"html_view\").$wrapper.html(r.message);\n                    }\n                    \n                    else{\n                        frappe.msgprint(\"No Data Found\")\n                    }\n                    \n                   \n                }\n            })\n        }\n        \n        if(frm.doc.material_request_number && !frm.doc.sales_order_number){\n            frappe.call({\n                method: 'norden.custom.get_item_details_frm_mr',\n                args: {\n                \"mat_rq\":frm.doc.material_request_number,\n                \"company\":frm.doc.company,\n                \"name\":frm.doc.name,\n                \"currency\":frm.doc.currency,\n                \"so_no\":frm.doc.sales_order_number,\n                'item_details': item_details_list,\n                \"supplier\":frm.doc.supplier\n                \n                },\n                callback(r) {\n                    if (r.message) {\n                        frm.get_field(\"html_view\").$wrapper.html(r.message);\n                    }\n                   \n                }\n            })\n            \n        }\n        else{\n            if(!frm.doc.sales_order_number){\n                 frappe.msgprint(\"No Data Found\")\n            }\n            }\n                    \n            \n        },\n    \n    schedule_date(frm){\n    if(frm.doc.schedule_date){\n        var date = moment(frm.doc.schedule_date).format('YYYY-MM-DD');\n        $.each(frm.doc.items,function(i,v){\n         v.schedule_date = date ;\n        });\n\n        \n    }\n    frm.refresh_fields(\"items\")\n    },\n    \n     after_cancel(frm){\n         let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n    \n        });\n        \n            d.show();\n              // frappe.msgprint(\"please fill the cancellation remarks\")\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\n\ton_submit(frm){\n\t   // if(frm.doc.supplier == \"Altair\"){\n\t   //     cur_frm.cscript.update_status('Close', 'Closed')\n\t   // }\n\t   if(frm.doc.supplier == \"Altair\"){\n\t        frappe.call({\n\t\t\tmethod: \"norden.custom.check_po\",\n\t\t\targs: {\n\t\t\t    \"original\":frm.doc.original_purchase_order,\n\t\t\t    \"name\":frm.doc.name\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message == \"yes\") {\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t       \n\t   }\n\t  \n\t    \n\t},\n\t\n\t\n    onload(frm){\n        // if (!(frm.doc.__islocal) ){\n        //     frappe.db.get_value('Warehouse',{company:frm.doc.company,is_qc: 1 }, ['name'])\n        //     .then(r => {\n        //         if (r.message){\n        //             frm.set_value('set_warehouse', r.message.name);\n        //         }\n        //     });\n        // }\n        // frm.trigger(\"company\")\n        frm.get_field(\"po_details\").$wrapper.html('');\n        if(frm.doc.__islocal){\n            frm.set_value(\"prepared_by\",frappe.session.user)\n           \n            \n\t    }\n\t    \n        if(frm.doc.workflow_state == \"Pending for purchase manager\" && frappe.user.has_role('Purchase Manager')){\n            frappe.call({\n                method: 'norden.custom.get_approver',\n                args: {\n                    'user':frappe.session.user,\n                },\n                callback(r) {\n                    if (r.message) {\n                        frm.set_value(\"approver\",r.message)\n                    }\n                }\n            })\n        }\n//         frappe.call({\n// \t\t\tmethod: \"norden.custom.check_altair\",\n// \t\t\targs: {\n// \t\t\t    \"name\":frm.doc.name\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message == \"No\") {\n// \t\t\t\t\tfrm.add_custom_button(__(\"Process through Altair\"), function () {\n//             // cur_frm.copy_doc();\n//             frappe.call({\n// \t\t\tmethod: \"norden.custom.create_altair\",\n// \t\t\targs: {\n// \t\t\t    \"name\":frm.doc.name,\n// \t\t\t    \"supplier\":frm.doc.supplier,\n// \t\t\t    \"requester\":frm.doc.requester_name,\n// \t\t\t    \"series\":frm.doc.naming_series,\n// \t\t\t    \"company\":frm.doc.company,\n// \t\t\t    \"date\":frm.doc.transaction_date,\n// \t\t\t    \"required\":frm.doc.schedule_date,\n// \t\t\t    \"consignment_type\":frm.doc.consignment_type,\n// \t\t\t    \"country\":frm.doc.country,\n// \t\t\t    \"trn\":frm.doc.our_trn,\n// \t\t\t    \"cargo_type\":frm.doc.mode_of_dispatch,\n// \t\t\t    \"items\":frm.doc.items,\n// \t\t\t    \"batch\":frm.doc.batch,\n// \t\t\t    \"supplier_address\":frm.doc.supplier_address,\n// \t\t\t    \"billing_address\":frm.doc.billing_address,\n// \t\t\t    \"set_warehouse\":frm.doc.set_warehouse,\n// \t\t\t    \"biliing_address_display\":frm.doc.billing_address_display,\n// \t\t\t    \"tax_category\":frm.doc.tax_category,\n// \t\t\t    \"taxes_and_charges\":frm.doc.taxes_and_charges,\n// \t\t\t    \"payments_terms\":frm.doc.payment_terms_template\n\t\t\t    \n\t\t\t    \n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message) {\n// \t\t\t\t\tfrappe.msgprint(r.message)\n// \t\t\t\t}\n\t\t\t\t\n// \t\t\t}\n\t\t\t\n// \t\t})\n\n//             });\n           \n\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n// \t\tfrm.doc.reload\n    },\n    \n    swap_supplier(frm){\n        if(frm.doc.swap_supplier == 0){\n            frm.set_value(\"alternate_supplier\",'')\n        }\n    },\n\tcalc_disc(frm){\n        var cal = (frm.doc.discount_amount / (frm.doc.total + frm.doc.total_taxes_and_charges)) * 100\n        frm.set_value('additional_discount_percent',cal)\n\t},\n\trefresh(frm) {\n\t    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\" || frm.doc.company == \"NCPL -Bangalore\" || frm.doc.company == \"Norden research and Innovation Centre  Pvt. Ltd\" || frm.doc.company == \"Norden Africa\" || frm.doc.company == \"Norden Communication India\" || frm.doc.company == \"Norden Singapore PTE LTD\" || frm.doc.company == \"Norden Communication UK Limited\" || frm.doc.company == \"Norden Communication Middle East FZE\" || frm.doc.company == \"Test Norden Company\" || frm.doc.company == \"Norden Singapore PTE LTD-SAARC\" || frm.doc.company == \"Northen Communication TR LLC - Sole Proprietorship\") {\n\t\t    frm.set_df_property(\"set_warehouse\",\"read_only\", 0);\n        }\n        else{\n            frm.set_df_property(\"set_warehouse\",\"read_only\", 1);\n        }\n        \n\t    \n\t    if (frm.doc.__islocal) {\n            frappe.db.get_value('Warehouse',{company:frm.doc.company,is_qc: 1 }, ['name'])\n            .then(r => {\n                if (r.message){\n                    frm.set_value('set_warehouse', r.message.name);\n                }\n            });\n        }\n\t    if(frm.doc.docstatus == 0){\n\t        frm.add_custom_button(__(\"Send a Reminder\"), function () {\n    \t\t    var cont = \"Dear Sir/Mam,</b><br><br><p>\" + frm.doc.doctype+\" No : \"+\"<b>\"+ frm.doc.name+\"</b>\"+\", Waiting for Your Approval<p><p> Please Kind Action <p>\"\n    \t\t\tlet dialog = new frappe.ui.Dialog({\n    \t\t\ttitle: __('Send Reminder Email'),\n    \t\t\tfields: [\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Message',\n    \t\t\t\t\tfieldtype: 'Small Text',\n    \t\t\t\t\tdefault:cont,\n    \t\t\t\t\tfieldname: 'message',\n    \t\t\t\t\tread_only : 1\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Email',\n    \t\t\t\t\tfieldtype: 'Link',\n    \t\t\t\t\toptions: 'User',\n    \t\t\t\t\treqd:1,\n    \t\t\t\t\tfieldname: 'email',  \n    \t\t\t\t},\n    \t\t\t],\n    \t\t\tprimary_action_label: __('Send'),\n    \t\t\tprimary_action: () => {\n    \t\t\t\tlet values = dialog.get_values();\n    \t\t\t\tif (values) {\n    \t\t\t\t\tconsole.log(values)\n    \t\t\t\t\tfrappe.call({\n    \t\t\t\t\t    method:\"norden.custom.reminder_mail\",\n    \t\t\t\t\t    args:{\n    \t\t\t\t\t        \"message\":values['message'],\n    \t\t\t\t\t        \"email\":values['email']\n    \t\t\t\t\t    },\n    \t\t\t\t\t    callback(r){\n    \t\t\t\t\t        if(r){\n    \t\t\t\t\t            frappe.msgprint(\"A reminder mail has been sent to - \"+values['email'])\n    \t\t\t\t\t        }\n    \t\t\t\t\t    }\n    \t\t\t\t\t})\n    \t\t\t\t}\n    \t\t        dialog.hide();\n    \t\t\t},\n    \t\t});\n    \t\tdialog.show();\n    \t\t})\n\t    }\n\t    \n\t    var input = 'input[data-fieldname=\"item_code\"][data-doctype=\"Purchase Order Item\"]';\n\t\tvar isFocus = false;\n\t\tfrm.fields_dict.items.grid.wrapper.on('click', input, function (e) {\n\t\t\tif (!isFocus) {\n\t\t\t\tconst item_code = e.currentTarget.value;\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'norden.custom.po_popup',\n\t\t\t\t\targs: {\n\t\t\t\t\t\t'item_code': item_code,\n\t\t\t\t\t\t'company':frm.doc.company,\n\t\t\t\t\t\t'name':frm.doc.name\n\t\t\t\t\t},\n\t\t\t\t\tcallback(d) {\n\t\t\t\t\t\tif (d.message) {\n\t\t\t\t\t\t\tfrm.get_field(\"po_html\").$wrapper.html(d.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tisFocus = false;\n\t\t});\n\t\t\n\t\t\n\t    if(!frm.doc.__islocal){\n\t        \n\t        frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus ==0){\n                    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n                        var print_format =\"SPARCOM PO\";\n                        var draft = 1\n                    }\n                    else{\n                        var print_format =\"Purchase Order\";\n                        var draft = 1\n                    }\n                }\n                if(frm.doc.docstatus == 1){\n                    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n                        var print_format =\"SPARCOM PO\";\n                        var draft = 0\n                    }\n                    else{\n                        var print_format =\"Purchase Order\";\n                        var draft = 0\n                    }\n                }\n                \n                window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Order\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n            \n        }\n             \n         \n\t   \n\t    \n\t    if(frm.doc.swap_supplier){\n\t        frm.add_custom_button(__(\"Ref. Suppl\"), function () {\n                var f_name = frm.doc.name;\n                if(frm.doc.docstatus == 0){\n                    var print_format =\"Altair\";\n                    var draft = 1\n                }\n                if(frm.doc.docstatus == 1){\n                    var print_format =\"Altair\";\n                    var draft = 0\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Order\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n\t        \n\t    }\n\t    \n\t   \n\t        \n\t    \n\n        \t    \n\t    if(frm.doc.docstatus == 1){\n\t\tfrm.add_custom_button(__('Logistics Request'), function(){\n\t\n\t    var lg = frappe.model.make_new_doc_and_get_name('Logistics Request');\n        lg = locals['Logistics Request'][lg];\n        lg.order_no = frm.doc.name\n        lg.logistic_type = \"Import\"\n        lg.po_so = \"Purchase Order\"\n        lg.file_number = frm.doc.file_number\n        lg.product_description = frm.doc.items\n        // lg.cargo_type = frm.doc.mode_of_dispatch\n        frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n\t\t    \n\t    })\n\t    \n\t}\n\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tvalidate(frm){\n\t    \n\t    var cal = (frm.doc.discount_amount / (frm.doc.total + frm.doc.total_taxes_and_charges)) * 100\n        frm.set_value('additional_discount_percent',cal)\n\t   if(frm.doc.items){\n\t   $.each(frm.doc.items,function(i,d){\n\t       frm.set_value(\"material_request_number\",d.material_request)\n\t   })\n// \t   $.each(frm.doc.items,function(i,d){\n// \t\t frappe.call({\n// \t\t\tmethod: \"frappe.client.get\",\n// \t\t\targs: {\n// \t\t\t\"doctype\" : \"Item\",\n// \t\t\t\"fieldname\": \"uoms\",\n// \t\t\t\"filters\" : {'name':d.item_code},\n// \t\t\t},\n// \t\t\tcallback(r){\n// \t\t    if(r.message){\n// \t         $.each(r.message['uoms'],function(i,v){\n//              console.log(v.uom)\n//              if(v.uom != d.uom){\n//                  frappe.msgprint(\"Please select relevant uom for the item\")\n//                  frappe.validated = false\n//                 //  d.uom = v.uom\n//              }\n// \t\t\t// frm.add_child('material_aspects_table',{\n// \t\t\t// \tspecification:v.specification,\n// \t\t\t// })\n// \t\t\t// frm.refresh_field('material_aspects_table')\n// \t\t\t})\n// \t\t\t    }\n// \t\t\t//\n// \t\t\t}\n// \t\t\t});\n// \t\t})  \n\t    }\n\t    \n\t    frappe.call({\n                method: 'norden.custom.date_validation',\n                args: {\n                    'po_date':frm.doc.transaction_date,\n                },\n                callback(r) {\n                    if (r.message) {\n                        if(r.message < frm.doc.transaction_date ){\n                        frappe.validated = false\n                        frappe.throw('Purchase order date cannot be a future date')\n                        }\n                    }\n                }\n            })\n\t    frm.trigger('supplier_part')\n\t   //  \n    // \t    console.log(frm.doc.name.length)\n\t   //  frappe.call({\n    //             method: 'norden.custom.create_batch',\n    //             args: {\n    //                 'name':frm.doc.name\n    //             },\n    //             callback(r) {\n    //                 if (r.message) {\n                \n    //                 }\n    //             }\n    //         })\n\t    \n\t   //  $.each(frm.doc.items,function(i,v){\n\t   //    //  console.log(v.qty)\n    //           v.ordered = v.qty\n    //           if(v.uom){\n    //             frappe.call({\n    //             method: 'norden.custom.check_uom',\n    //             args: {\n    //                 'item_code':v.item_code,\n    //             },\n    //             callback(r) {\n    //                 if (r.message){\n    //                     console.log(r.message)\n    //                     if(v.uom != r.message){\n    //                         frappe.msgprint(\"Unit of measurement of an item cannot be changed\")\n    //                         frappe.validated = false;\n                            \n    //                     }\n                \n    //                 }\n    //             }\n    //         })\n                  \n    //           }\n    //         })\n    //         frm.refresh_field('items')\n            \n\t},\n\n\t   // frm.set_value('our_trn','frm.doc.items[0].material_request')\n\t   \n// \t   //  if(!frm.doc.file_number && frm.doc.amended_from){\n\n// \t   // var file=0\n// \t   // var res = 0\n// \t   // res = frm.doc.name.slice(-12);\n// \t   // console.log(res)\n// \t   // file = \"NORDEN-PO-\"+res\n// \t   // console.log(file)\n// \t   // frm.set_value(\"file_number\", file)\n// \t   //  }\n\t\n\t   \n\t\n\tcompany(frm) {\n\t    \n\t    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\" || frm.doc.company == \"NCPL -Bangalore\" || frm.doc.company == \"Norden research and Innovation Centre  Pvt. Ltd\" || frm.doc.company == \"Norden Africa\" || frm.doc.company == \"Norden Communication India\" || frm.doc.company == \"Norden Singapore PTE LTD\" || frm.doc.company == \"Norden Communication UK Limited\" || frm.doc.company == \"Norden Communication Middle East FZE\" || frm.doc.company == \"Test Norden Company\" || frm.doc.company == \"Norden Singapore PTE LTD-SAARC\" || frm.doc.company == \"Northen Communication TR LLC - Sole Proprietorship\") {\n\t\t    frm.set_df_property(\"set_warehouse\",\"read_only\", 0);\n        }\n        else{\n            frm.set_df_property(\"set_warehouse\",\"read_only\", 1);\n        }\n        \n\t    \n\t    if (frm.doc.__islocal) {\n            frappe.db.get_value('Warehouse',{company:frm.doc.company,is_qc: 1 }, ['name'])\n            .then(r => {\n                if (r.message){\n                    frm.set_value('set_warehouse', r.message.name);\n                }\n            });\n        }\n        \n        \n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t{\n\t\t    frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_default_currency\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t   frm.set_value(\"currency\",r.message)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\t\n\t},\n\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n\n// \tcompany(frm){\n\t   \n\t   \n// \t    if(frm.doc.company == 'Norden Communication India'){\n// \t        frm.set_value('naming_series','PUR-ORD-NC-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Singapore PTE LTD'){\n// \t        frm.set_value('naming_series','PUR-ORD-NSPL-.YYYY.-')\n// \t         frm.set_value('currency','USD')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication UK Limited'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCUL-.YYYY.-')\n// \t         frm.set_value('currency','GBP')\n// \t    }\n// \t    else if(frm.doc.company == 'Sparcom Ningbo Telecom Ltd'){\n// \t        frm.set_value('naming_series','PUR-ORD-SNTL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Middle East FZE'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCMEF-.YYYY.-')\n// \t         frm.set_value('currency','AED')\n// \t    }\n// \t     else if(frm.doc.company == 'Norden Communication Middle East FZE Dubai'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCMEFD-.YYYY.-')\n// \t         frm.set_value('currency','AED')\n// \t    }\n// \t    else if(frm.doc.company == 'NCPL -Bangalore'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCPLB-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Pvt Ltd'){\n// \t        frm.set_value('naming_series','PUR-ORD-NCPLP-.YYYY.-')\n// \t    }\n// \t},\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t},\n});\n\nfrappe.ui.form.on('Purchase Order Item', {\n    pdi(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n        var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n        ip = locals['Item Inspection'][ip];\n        ip.po_number = frm.doc.name\n        ip.item_code = child.item_code\n        ip.description = child.item_name\n        ip.pdi = 1\n    \n        // lg.logistic_type = \"Import\"\n        // lg.po_so = \"Purchase Order\"\n        // frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n        \tfrappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n        \t\n\t    \n\t     \n},\n    uom(frm, cdt, cdn) {\n        var child = locals[cdt][cdn]\n         if(child.uom){\n            frappe.call({\n                method: 'norden.utils.check_uom',\n                args: {\n                \"item\":child.item_code,\n                \"uom\":child.uom\n                \n                },\n                callback(r) {\n                if(r.message){\n                    var data = 0\n                     $.each(r.message,function(i,v){\n                         if(child.uom == v.uom){\n                             data = data + 1\n                         }\n                     })\n                     if(data == 0){\n                         frappe.msgprint(\"Please select relevant UOM\")\n                         child.uom = ''\n                     }\n\n                }\n                }\n            })\n        }\n    },\n item_code(frm, cdt, cdn) {\n        var child = locals[cdt][cdn]\n        if (child.item_code) {\n\t        frm.trigger('supplier_part')\n            frm.trigger('fetch')\n            // frappe.call({\n            //     method: 'norden.custom.stock_popup',\n            //     args: {\n            //         'item_code': child.item_code,\n            //         'company':frm.doc.company\n            //     },\n            //     callback(d) {\n            //         if (d.message) {\n            //             frm.get_field(\"items_html\").$wrapper.html(d.message);\n            //         }\n            //     }\n            // })\n            \n            frappe.call({\n                method: 'norden.custom.po_popup',\n                args: {\n                    'item_code': child.item_code,\n                    'company':frm.doc.company,\n                    'name':frm.doc.name\n                },\n                callback(d) {\n                    if (d.message) {\n                        frm.get_field(\"po_html\").$wrapper.html(d.message);\n                    }\n                    // frm.refresh_field(\"po_html\")\n                }\n            })\n            \n\t       \n    \t   \n            \n            // frappe.call({\n            //     method: 'norden.custom.po_popup',\n            //     args: {\n            //         'item_code': child.item_code\n            //     },\n            //     callback(d) {\n            //         if (d.message) {\n            //             frm.get_field(\"po_html\").$wrapper.html(d.message);\n            //         }\n            //     }\n            // })\n\n\n        }\n\n    },\n    items_remove(frm) {\n        frm.trigger('fetch')\n    }\n    \n})\n\n// frappe.ui.form.on('Purchase Order Item', {\n//     item_code(frm, cdt, cdn) {\n//         var child = locals[cdt][cdn]\n//         if (child.item_code) {\n//             frm.trigger('fetch')\n            \n//         }\n\n//     },\n//     items_remove(frm) {\n//         frm.trigger('fetch')\n//     }\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Norden 3 Sticker",
  "enabled": 1,
  "modified": "2021-10-28 12:31:33.553587",
  "module": null,
  "name": "Norden 3 Sticker-Form",
  "script": "frappe.ui.form.on('Norden 3 Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Product Sticker'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Norden 3 Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 3 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t\t\t\tfrm.add_custom_button(__('Price Sticker'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Norden 3 Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Norden 3 Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},\"Download\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-12-11 14:44:16.784417",
  "module": null,
  "name": "Employee-Form",
  "script": "frappe.ui.form.on('Employee', {\n    date_of_joining(frm) {\n        if (frm.doc.date_of_joining){\n            frappe.call({\n                method: 'norden.custom.calc_trainee_period',\n                args: {\n                    \"joining_date\": frm.doc.date_of_joining,\n                    // \"probation_start_date\": frm.doc.training_start_date,\n                },\n                callback: function (r) {\n                    console.log(r)\n                    // frm.set_value(\"training_start_date\", r.message[0])\n                    frm.set_value(\"internship_end_date\", r.message)\n        \n                }\n            })\n        }\n    },\n\trefresh(frm) {\n\t\n\t},\n\tcustom_update_employee_number(frm){\n    let d = new frappe.ui.Dialog({\n\t\ttitle: 'Employee Number',\n\t\tfields: [\n\t\t\t{\n\t\t\t\tlabel: 'Employee Number',\n\t\t\t\tfieldname: 'employee_number',\n\t\t\t\tfieldtype: 'Data',\n\t\t\t},\n\t\t],\n\t\tprimary_action_label: __('Save'),\n\t\tprimary_action: () => {\n\t\t\tlet values = d.get_values();\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\"norden.custom.update_employee_no\",\n\t\t\t\targs:{\n\t\t\t\t\t'name':frm.doc.name,\n\t\t\t\t\t'employee_number':values.employee_number,\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\tif(r.message) {\n\t\t\t\t\t\t\t\tfrappe.set_route(\"Form\", \"Employee\", r.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t})\n\t\t\td.hide();\n\t\t\t\n\t\t},\n\t});\n\td.show();\n\tresolve();\n    },\n\t\n\tbefore_save(frm){\n\t    if (frm.doc.__islocal){\n\t    frappe.call({\n    method:\"frappe.client.get_value\",\n    args: {\n        doctype:\"Country\",\n        filters: {\n           \n            name:frm.doc.employee_location\n        },\n        fieldname:[\"country_code\",\"continent_code\"]\n    }, \n    callback: function(r) {\n       \n        var emp_code = r.message.continent_code+\"-\"+r.message.country_code+\"-\"\n        if(frm.doc.employment_type == \"Consultant\"){\n            emp_code = '9'+'-'+ emp_code\n        }\n        frappe.call({\n            method : 'norden.custom.get_emp_code',\n            args:{\n                code : emp_code\n            },\n            callback(r){\n                 frm.set_value(\"employee_number\",r.message)\n            }\n        })\n    }\n})\n}\n\t},\n\tafter_save(frm){\n\t    frappe.call({\n\t        method : 'norden.custom.create_sales_person',\n\t        args :{\n\t            emp : frm.doc.name\n\t        }\n\t    })\n\t},\n\tvalidate:function(frm){\n\t    var ctc = frm.doc.basic+frm.doc.hra+frm.doc.conveyance+frm.doc.vehicle_and_fuel_allowance+frm.doc.other_allowance\n\t    frm.set_value('ctc',ctc)\n\t    var base=frm.doc.basic;\n        var hra=frm.doc.hra;\n        var ve=frm.doc.vehicle_and_fuel_allowance;\n        var sp=frm.doc.special_allowance;\n        var con=frm.doc.conveyance;\n        var tel=frm.doc.telephone_allowance;\n        var ta=frm.doc.ta_others;\n        var gross=base+hra+ve+sp+con+tel+ta;\n        frm.set_value(\"earnings_gross\",gross)\n\n\t},\n\tbank(frm){\n\t    if (frm.doc.bank =='ICICI Bank'){\n\t    frm.set_value('payment_mode','FT') \n\t    }\n\t    else{\n\t    frm.set_value('payment_mode','NEFT')\n\t\n\t    }\n\t},\n\tcompany (frm){\n    if(frm.doc.company == 'Norden Communication Pvt Ltd'){\n\t    frm.set_value('allowed_account_number','397251000001')\n\t    }\n\t    else{\n\t        frm.doc.company == 'Norden research and Innovation Centre  Pvt. Ltd'\n\t        frm.set_value('allowed_account_number','397205500066')\n\t    }\n\t},\n\t\n    update_holiday_list(frm){\t\n        frappe.call({\n        method: 'norden.custom.allow_holiday_list_to_user',\n        args: {\n            holiday_list: frm.doc.holiday_list,\n            user: frm.doc.user_id,\n  },\n       callback: function(response) {\n       // Handle the response from the server-side method\n       if (response.message) {\n      // Success\n      frappe.msgprint('User Permission created', response.message);\n    } \n    else {\n      // Error\n      frappe.msgprint('Error creating User Permission', response.exc);\n    }\n  }\n});\n\t    \n\t    \n\t}\n\n\t\n\t\n\t\n\n\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Follow UP",
  "enabled": 1,
  "modified": "2021-11-17 15:11:53.898970",
  "module": null,
  "name": "Sales Followup-Form",
  "script": "frappe.ui.form.on('Sales Follow UP', {\n\trefresh(frm) {\n\t\thide_field(['status']);\n\t\tif(frm.doc.follow_up_for==\"Lead\"){\n\t\t    frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    if(r.message.status == 'Converted'){\n\t\t\t\t\t        $(frm.fields_dict.customer_info.wrapper).append(\"<div class='fa fa-info'> <b>Customer has been already created against this Lead, You can either follow against this document or create a new followup with customer under 'Follow up for' Menu.<b></div>\");\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t    unhide_field(['status']);\n\t\t}\n\t\tif(frm.doc.__islocal){\n\t\t    frm.set_value('next_contact_by',frappe.session.user)\n\t\t    frm.set_value('account_manager',frappe.session.user)\n\t\t}\n\t\t\n\t\t\n\t},\n\tonload(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t    frm.set_query('lead_customer', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"status\": [\"!=\",'Converted']\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t    }\n\t},\n\tlead_customer(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Lead',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"status\",r.message.status)\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.company_name)\n\t\t\t\t\t    frm.set_value(\"person_name\",r.message.lead_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.lead_owner)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tunhide_field(['status']);\n\t    }\n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          frappe.call({\n\t\t\t\tmethod: 'frappe.client.get',\n\t\t\t\targs: {\n\t\t\t\t\t'doctype': 'Customer',\n\t\t\t\t\t'filters': { 'name': frm.doc.lead_customer },\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.set_value(\"organization_name\",r.message.customer_name)\n\t\t\t\t\t    frm.set_value(\"email_address\",r.message.email_id)\n\t\t\t\t\t    frm.set_value(\"industry\",r.message.industry)\n\t\t\t\t\t    frm.set_value(\"territory\",r.message.territory)\n\t\t\t\t\t    frm.set_value(\"market_segment\",r.message.market_segment)\n\t\t\t\t\t    frm.set_value(\"account_manager\",r.message.account_manager)\n\t\t\t\t\t    frm.set_value(\"billing_currency\",r.message.default_currency)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t    }\n\t},\n\t\n\tfollow_up_for(frm){\n\t    if(frm.doc.follow_up_for==\"Lead\"){\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t    \n\t    if(frm.doc.follow_up_for==\"Customer\"){\n\t          hide_field(['status']);\n\t          frm.set_df_property('lead_customer', \"label\", frm.doc.follow_up_for )\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-12-16 15:33:56.054878",
  "module": null,
  "name": "Sales Order-Form",
  "script": "frappe.ui.form.on('Sales Order', {\n    view(frm) {\n    if (!frm.doc.sales_order_details || frm.doc.sales_order_details.length === 0) {\n        frappe.new_doc('Partial Proforma Invoice', {\n            sales_order_number: frm.doc.name\n        }, function (doc) {\n            // Manually remove all rows from the \"sales_order_details\" table\n            while (doc.sales_order_details && doc.sales_order_details.length > 0) {\n                frappe.model.clear_table(doc, 'sales_order_details');\n            }\n\n            // Add rows from the current Sales Order's \"items\" table to \"sales_order_details\"\n            $.each(frm.doc.items, function (i, d) {\n                var row = frappe.model.add_child(doc, 'sales_order_details');\n                row.item_code = d.item_code;\n                row.item_name = d.item_name;\n                row.qty = d.qty;\n                row.uom = d.uom;\n                row.rate = d.rate;\n                row.description = d.description;\n                row.amount = d.amount;\n                row.tax_rate = d.tax_rate;\n                row.tax_amount = d.tax_amount;\n                row.total_amount = d.total_amount;\n                row.discount = d.discount;\n                row.discount_rate = d.discount_rate;\n                row.discount_value = d.discount_value;\n                row.base_price_list_rate = d.base_price_list_rate;\n                row.disc_amt = d.disc_amt;\n                row.margin_rate_or_amount = d.margin_rate_or_amount;\n                row.discount_percentage = d.discount_percentage;\n                row.margin_percentage = d.margin_percentage;\n                row.margin_rate = d.margin_rate;\n                row.margin_value = d.margin_value;\n                row.discount_amount = d.discount_amount;\n                row.net_rate = d.net_rate;\n                row.net_amount = d.net_amount;\n                row.billed_amt = d.billed_amt;\n                row.valuation_rate = d.valuation_rate;\n                \n            });\n\n            // Refresh the \"sales_order_details\" field in the new document\n            frm.refresh_field('sales_order_details');\n        });\n    }\n},\n\n    // view(frm) {\n    //     if (!frm.doc.sales_order_details || frm.doc.sales_order_details.length === 0) {\n    //         frappe.new_doc('Partial Proforma Invoice', {\n    //             sales_order_number: frm.doc.name\n    //         }, function (doc) {\n    //             frm.clear_table('sales_order_details')\n    //             $.each(frm.doc.items, function (i, d) {\n    //                 var row = frappe.model.add_child(doc, 'sales_order_details');\n    //                 row.item_code = d.item_code;\n    //                 row.item_name = d.item_name;\n    //                 row.qty = d.qty;\n    //                 row.uom = d.uom;\n    //                 row.rate = d.rate;\n    //                 row.description = d.description;\n    //                 row.amount = d.amount;\n    //             });\n    //             frm.refresh_field('sales_order_details');\n\n    //         });\n    //     }\n// },\n    \n    \n//     setup(frm){\n//         if(!frm.doc.__islocal){\n// \t    frm.get_field(\"margin_detail\").$wrapper.html('');\n// \t    frm.get_field(\"margin_details_sm\").$wrapper.html('');\n// \t    if(frm.doc.price_list_region){\n// \t        if(frm.doc.docstatus != 2){\n//     \t        frappe.dom.freeze(__('Processing Margin! Please Wait...'));\n//                     frappe.db.get_value('Price List based on Territory', {territory:frm.doc.margin_region,default:1}, 'name')\n//                     .then(r => {\n//                         frappe.db.set_value('Sales Order',frm.doc.name, 'price_list', r.message.name)\n//                         .then(res => {\n//                             frappe.db.get_value('Price List based on Territory', {territory:frm.doc.margin_region,is_internal:1}, 'name')\n//                     .then(r => {\n//                         frappe.db.set_value('Sales Order',frm.doc.name, 'sm_price_list', r.message.name)\n//                         .then(res => {\n//                             frappe.dom.unfreeze();\n//                         })\n                        \n//                     })\n//                 })\n            \n//             })\n// \t        }\n//         }\n//         }\n//          if(frm.doc.sm_price_list && !frm.doc.is_free){\n// \t    frm.trigger(\"sm_price_list\")\n\t       \n// \t   }\n// \t    if(frm.doc.price_list && !frm.doc.is_free){\n// \t    frm.trigger(\"price_list\")\n// \t    }\n// \t},\n    get_quo_details(frm){\n        $.each(frm.doc.items,function(i,j){\n            if(j.prevdoc_docname){\n            frappe.call({\n                method:\"norden.utils.get_detailed_quo\",\n                args:{\n                    'quotation':j.prevdoc_docname\n                },\n                callback(r){\n                    if(r){\n                        $.each(r.message,function(i,k){\n                            if(k.item_code == j.item_code){\n                                // frappe.db.set_value('Sales Order Item',{'' 'TASK00002', 'subject', 'New Subject', update_modified=False)\n                                j.price_list_rate = k.price_list_rate\n                                j.margin_percentage = k.margin_percentage\n                                j.margin_value = k.margin_value\n                                j.disc_amt = k.disc_amt\n                                j.discount_value = k.discount_value\n                                j.unit_price_document_currency = k.unit_price_document_currency\n                                j.base_price_list_rate = k.base_price_list_rate\n                            }\n                        })\n                        frm.refresh_field(\"items\")\n                    }\n                }\n            })\n            }\n        })\n    },\n    cr_date(frm){\n    \t$.each(frm.doc.items,function(i,d){\n\t\t    d.cr_date = frm.doc.cr_date\n\t\t})  \n    },\n    \n    delivery_date(frm){\n    \n\t$.each(frm.doc.items,function(i,d){\n\t   \n\t\td.delivery_date = frm.doc.delivery_date\n\t\t})  \n    },\n    \tclear(frm){\n    frm.get_field(\"margin_details_sm\").$wrapper.html('');\n\t},\n    merge_rows(frm){\n        $.each(frm.doc.items,function(i,j){\n            if(j.prevdoc_docname){\n            frappe.call({\n                method:\"norden.utils.get_detailed_quo\",\n                args:{\n                    'quotation':j.prevdoc_docname\n                },\n                callback(r){\n                if(r){\n                    $.each(r.message,function(i,k){\n                        if(k.item_code == j.item_code){\n                            j.price_list_rate = k.price_list_rate\n                            j.margin_percentage = k.margin_percentage\n                            j.margin_value = k.margin_value\n                            j.disc_amt = k.disc_amt\n                            j.unit_price_document_currency = k.unit_price_document_currency\n                            j.base_price_list_rate = k.base_price_list_rate\n                        }\n                    })\n                    frm.refresh_field(\"items\")\n                }\n                }\n            })\n            }\n        })\n    },\n    \n    price_list_region(frm){\n        if(frm.doc.price_list_region == \"Dubai\"){\n            frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region,\"default\":1\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n        \n        else{\n              frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t    if(frm.doc.price_list_region){\n\t         frm.set_value(\"margin_region_sm\",frm.doc.price_list_region)\n\t        frm.set_value(\"margin_region\",frm.doc.price_list_region)\n\t    }\n    },\n    // sale_person(frm){\n    //     frappe.db.get_value('Employee',{'user_id':frm.doc.sale_person},['name'])\n    //     .then(r => {\n    //         if(r.message.name){\n    //             frappe.db.get_value('Sales Person',{'employee':r.message.name},['name'])\n    //             .then(d => {\n    //                 if(d.message.name){\n    //                     frm.set_value('sales_person_user',d.message.name)\n    //                 }\n    //             })\n    //         }\n    //     })\n    // },\n    sales_person_user(frm){\n        frappe.db.get_value('Sales Person',{'name':frm.doc.sales_person_user},['employee'])\n        .then(r => {\n            if(r.message.employee){\n                frappe.db.get_value('Employee',{'name':r.message.employee},['user_id'])\n                .then(d => {\n                    if(d.message.user_id){\n                        frm.set_value('sale_person',d.message.user_id)\n                    }\n                })\n            }\n        })\n    },\n    custom_merge_items(frm){\n        if(!frm.doc.__islocal){\n            frappe.call({\n    \t        method : \"norden.custom.sales_order_duplicate\",\n    \t        args:{\n    \t            'sales_order' : frm.doc.name,\n    \t        },\n    \t        callback(r){\n\t            if (r.message ) {\n                    frm.clear_table('items')\n\t                $.each(r.message,function(i,d){\n     \t\t\t\t\tfrm.add_child('items',{\n     \t\t\t\t\t    'unit_price_document_currency':d.unit_price_document_currency,\n                            'item_code':d.item_code,\n                            'item_name':d.item_name,\n                            'material_request':d.material_request,\n                            'qty':d.qty,\n                            'material_request_item':d.material_request_item,\n                            'country_name':d.country_name,\n                            'warehouse':d.warehouse,\n                            'uom':d.uom,\n                            'is_free':d.is_free,\n                            'rate':d.rate,\n                            'base_rate':d.base_rate,\n                            'base_amount':d.base_amount,\n                            'is_free_item':d.is_free_item,\n                            'grant_commission':d.grant_commission,\n                            'net_rate':d.net_rate,\n                            'base_net_rate':d.base_net_rate,\n                            'base_net_amount':d.base_net_amount,\n                            'billed_amt':d.billed_amt,\n                            'net_amount':d.net_amount,\n                            'gross_profit':d.gross_profit,\n                            'bom_no':d.bom_no,\n                            'delivery_date':d.delivery_date,\n                            'description':d.description,\n                            'amount':d.amount,\n                            'gst_hsn_code':d.gst_hsn_code,\n                            'is_nil_exempt':d.is_nil_exempt,\n                            'special_cost':d.special_cost,\n                            'item_group':d.item_group,\n                            'is_non_gst':d.is_non_gst,\n                            'price_list_rate':d.price_list_rate,\n                            'discount_rate':d.discount_rate,\n                            'discount':d.discount,\n                            'conversion_factor':d.conversion_factor,\n                            'disc_amt':d.disc_amt,\n                            'discount_value':d.discount_value,\n                            'margin_percentage':d.margin_percentage,\n                            'margin_rate':d.margin_rate,\n                            'margin_value':d.margin_value,\n                            'base_price_list_rate':d.base_price_list_rate,\n                            'sales_price':d.sales_price,\n                            'prevdoc_docname':d.prevdoc_docname,\n    \t\t\t\t\t})\n\t                })\n\t\t\t\t\tfrm.refresh_field('items')\n\t\t\t\t}\n\t        }\n    \t    })\n        }\n    },\n    validate(frm){\n        if(frm.doc.__islocal){\n            frm.trigger(\"set_series\")\n        }\n        $.each(frm.doc.taxes,function(i,j){\n            if(j.actual_rate > 0){\n                j.tax_amount = (j.actual_rate * frm.doc.total) / 100\n            }\n        })\n        frm.refresh_field(\"taxes\")\n\t    var total_discount = 0\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\ttotal_discount = total_discount + d.disc_amt\n\t\t\tfrm.set_value(\"line_item_discount\", total_discount)\n \t\t})\n        if(frm.doc.items){\n          $.each(frm.doc.items, function (i, d) {\n               d.sales_price = d.rate\n          })  \n        }\n         \n        \n            frm.clear_table('sales_team')\n            if(frm.doc.sales_person_name){\n            frm.add_child('sales_team',{\n                'sales_person':frm.doc.sales_person_name,\n                'allocated_percentage':100\n        \n            })\n            frm.refresh_field('sales_team')\n}\n         \n        \n\n    },\n    \n    show_cost(frm){\n\t    var item_details_list = []\n\t\tvar item_details = {}\n\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\titem_details = {}\n\t\t\titem_details['item_code'] = d.item_code\n\t\t\titem_details['item_name'] = d.item_name\n\t\t\titem_details['description'] = d.description\n\t\t\titem_details['qty'] = d.qty\n\t\t\titem_details['rate'] = d.rate\n\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\titem_details['amount'] = d.amount\n\t\t\titem_details_list.push(item_details)\n\t\t})\n\t\t\n\t    frappe.call({\n\t\t\tmethod: \"norden.margin_details.margin_cost\",\n\t\t\targs: {\n\t\t\t\t'name': frm.doc.name,\n\t\t\t\t'item_details': item_details_list,\n\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n\t\t\t\t'user': frappe.session.user,\n\t\t\t\t'price_list': frm.doc.price_list,\n\t\t\t\t'territory': frm.doc.price_list_region,\n\t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n\t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n\t\t\t\t'footer_discount': frm.doc.discount_amount,\n\t\t\t\n\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tfrm.get_field(\"margin_detail\").$wrapper.html(r.message);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t},\n\n    price_list(frm){\n\t    var item_details_list = []\n\t\t\tvar item_details = {}\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\titem_details = {}\n\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\titem_details['description'] = d.description\n\t\t\t\titem_details['qty'] = d.qty\n\t\t\t\titem_details['rate'] = d.rate\n\t\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\t\titem_details['amount'] = d.amount\n\t\t\t\titem_details_list.push(item_details)\n\t\t\t})\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.margin_details.margin\",\n\t\t\t\targs: {\n\t\t\t\t\t'name': frm.doc.name,\n\t\t\t\t\t'item_details': item_details_list,\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n\t\t\t\t\t\"currency\": frm.doc.currency,\n\t\t\t\t\t\"margin_currency\":frm.doc.margin_currency,\n\t\t\t\t\t'user': frappe.session.user,\n\t\t\t\t\t'price_list': frm.doc.price_list,\n\t\t\t\t\t'territory': frm.doc.price_list_region,\n\t\t\t\t\t'line_item_addition':frm.doc.line_item_addition,\n\t\t\t\t\t'line_item_discount':frm.doc.line_item_discount,\n\t\t\t\t\t'footer_discount':frm.doc.discount_amount\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t    frm.get_field(\"margin_detail\").$wrapper.html(r.message);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t    \n\t},\n    get_details(frm){\n\t    frm.set_value('price_list','')\n\t    frm.get_field(\"margin_details\").$wrapper.html('');\n\t},\n    \n\n    onload(frm){\n        if(frm.doc.__islocal ){\n            if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n                frm.set_value('bank','RAK Bank');\n                frm.set_value('bank_account','Norden Communication Middle East FZE - RAK Bank')\n            }\n        }\n        if(frm.doc.price_list_region == \"Dubai\"){\n            frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region,\"default\":1\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n        \n        else{\n              frm.set_query(\"price_list\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"territory\": frm.doc.price_list_region\n\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n        if(frm.doc.__islocal ){\n\t   frm.set_value(\"prepared_by\",frappe.session.user)\n\t    }\n    },\n\t\n     after_cancel(frm){\n         let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\tsame_as(frm){\n\t    if(frm.doc.same_as == '1')\n\t    {\n\t        var add = 0\n\t        add = frm.doc.customer_address\n\t        frm.set_value('shipping_address_name',add)\n\t    }\n\t},\n\t\n\ton_submit(frm){\n\t    frappe.call({\n\t        method : \"norden.custom.create_material_request\",\n\t        args:{\n\t            'item_table':frm.doc.items,\n\t            'company' : frm.doc.company\n\t        },\n\t        callback(d){\n\t        }\n\t    })\n\t},\n\t// \tset_series(frm) {\n// \t    if(frm.doc.invoice_type == 'Taxable'){\n//         frappe.call({\n// \t\t\tmethod: \"norden.utils.get_series_with_tax\",\n// \t\t\targs: {\n// \t\t\t\tcompany: frm.doc.company,\n// \t\t\t\tdoctype: frm.doc.doctype\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t    console.log(r)\n// \t\t\t\t\tfrm.set_value('naming_series', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n//         }\n//         else{\n// \t\tfrappe.call({\n// \t\t\tmethod: \"norden.utils.get_series\",\n// \t\t\targs: {\n// \t\t\t\tcompany: frm.doc.company,\n// \t\t\t\tdoctype: frm.doc.doctype\n// \t\t\t},\n// \t\t\tcallback: function (r) {\n// \t\t\t\tif (r) {\n// \t\t\t\t\tfrm.set_value('file_number', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t});\n//         }\n// \t},\n\tfetch_discount(frm){\n\t    frm.trigger(\"get_quo_details\")\n// \t    var total_discount = 0\n// \t\t$.each(frm.doc.items, function (i, d) {\n// \t\t\ttotal_discount = total_discount + d.disc_amt\n// \t\t\tfrm.set_value(\"line_item_discount\", total_discount)\n// \t\t})\n\t},\n\trefresh(frm) {\n\t     if(frm.doc.workflow_state == \"Approved\"){\n\t        if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n\t            if(frm.doc.finance_head_approval == 'Pending'){\n\t                 if (frappe.user.has_role(\"Finance Head\")){\n\t                    frm.add_custom_button(__(\"Approve by Finance Head\"), function () {\n            \t            frappe.call({\n                    \t        method : \"norden.custom.get_pending_for_finance_head\",\n                    \t        args:{\n                                    \"name\":frm.doc.name\n                                    \n                    \t        },\n                    \t        callback(r){\n                    \t            if (r.message ) {\n                                        frm.set_value(\"finance_head_approval\",r.message)\n                    \t\t\t\t}\n                    \t        }\n                    \t    })\n    \t                }).css({ 'color': 'black', 'background-color': \"#32CD32\" });\n\t                }\n        \t        \n\t            }\n\t        }\n\t    }\n\t    \n\t    if(frappe.user.has_role(\"CFO\") || frappe.user.has_role(\"COO\") || frappe.user.has_role(\"Accounts User\")|| frappe.user.has_role(\"Operation Director\")){\n\t    var me = this;\n\t    frm.add_custom_button(__(\"Margin Details HOD\"), function () {\n\t        let d = new frappe.ui.Dialog({\n                size:\"extra-large\",\n                title: 'Margin Details',\n                fields: [\n                    {\n                        label: 'Price List',\n                        fieldname: 'price_list',\n                        fieldtype: 'Link',\n                        options:'Price List based on Territory',\n                        get_query: function () {\n            \t\t\t\treturn {\n            \t\t\t\t\tfilters: {\n            \t\t\t\t\t\t\"territory\": frm.doc.price_list_region\n            \t\t\t\t\t}\n            \t\t\t\t};\n            \t\t\t},\n                        onchange: function () {\n\t\t\t\t\t\t\tlet val = d.get_field(\"price_list\");\n\t\t\t\t\t\t\tvar item_details_list = []\n                    \t\tvar item_details = {}\n                    \t\t$.each(frm.doc.items, function (i, d) {\n                    \t\t\titem_details = {}\n                    \t\t\titem_details['item_code'] = d.item_code\n                    \t\t\titem_details['item_name'] = d.item_name\n                    \t\t\titem_details['description'] = d.description\n                    \t\t\titem_details['qty'] = d.qty\n                    \t\t\titem_details['rate'] = d.rate\n                    \t\t\titem_details['special_cost'] = d.special_cost\n                    \t\t\titem_details['internal_cost'] = d.internal_cost\n                    \t\t\titem_details['amount'] = d.amount\n                    \t\t\titem_details_list.push(item_details)\n                    \t\t})\n                            frappe.db.get_value('Price List based on Territory', { 'is_internal': 1, 'territory': frm.doc.price_list_region}, 'name')\n                    \t\t.then(k => {\n                        \t\tfrappe.call({\n                        \t\t\tmethod: \"norden.margin_details.margin\",\n                        \t\t\targs: {\n                        \t\t\t\t'name': frm.doc.name,\n                        \t\t\t\t'item_details': item_details_list,\n                        \t\t\t\t\"company\": frm.doc.company,\n                        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n                        \t\t\t\t\"currency\": frm.doc.currency,\n                        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n                        \t\t\t\t'user': frappe.session.user,\n                        \t\t\t\t'price_list': this.value,\n                        \t\t\t\t'territory': frm.doc.price_list_region,\n                        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n                        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n                        \t\t\t\t'footer_discount': frm.doc.discount_amount\n                        \n                        \t\t\t},\n                        \t\t\tcallback(r) {\n                        \t\t\t\tif (r.message) {\n\t\t\t\t                            d.fields_dict.margin_details.$wrapper.html(r.message);\n                    \t\t    \t\t}\n                        \t\t\t}\n                        \t\t})\n                    \t\t})\n\t\t\t\t\t\t}\n                    },\n                    {\n                        fieldname: 'column_break',\n                        fieldtype: 'Column Break',\n                    },\n                    {\n                        label: 'Show Cost',\n                        fieldname: 'show_cost',\n                        fieldtype: 'Button',\n                    },\n                    \n                    {\n                        fieldname: 'section_break',\n                        fieldtype: 'Section Break',\n                    },\n                    {\n                        label: 'Margin Details',\n                        fieldname: 'margin_details',\n                        fieldtype: 'HTML'\n                    },\n                    \n                ],\n            });\n            d.get_input(\"show_cost\").on(\"click\", function() {\n\t\t\t\tlet val = d.get_field(\"price_list\");\n\t\t\t\tvar item_details_list = []\n        \t\tvar item_details = {}\n        \t\t$.each(frm.doc.items, function (i, d) {\n        \t\t\titem_details = {}\n        \t\t\titem_details['item_code'] = d.item_code\n        \t\t\titem_details['item_name'] = d.item_name\n        \t\t\titem_details['description'] = d.description\n        \t\t\titem_details['qty'] = d.qty\n        \t\t\titem_details['rate'] = d.rate\n        \t\t\titem_details['special_cost'] = d.special_cost\n        \t\t\titem_details['internal_cost'] = d.internal_cost\n        \t\t\titem_details['amount'] = d.amount\n        \t\t\titem_details_list.push(item_details)\n        \t\t})\n        \t\tif(frm.doc.company == \"Norden Communication Middle East FZE\"){\n        \t\t    var price_list = \"STANDARD BUYING-USD\"\n        \t\t}\n        \t\telse{\n        \t\t    var price_list = \"Cost Rate - NCMEF\"\n        \t\t}\n                frappe.call({\n        \t\t\tmethod: \"norden.margin_details.margin_cost\",\n        \t\t\targs: {\n        \t\t\t\t'name': frm.doc.name,\n        \t\t\t\t'item_details': item_details_list,\n        \t\t\t\t\"company\": frm.doc.company,\n        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n        \t\t\t\t\"currency\": frm.doc.currency,\n        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n        \t\t\t\t'user': frappe.session.user,\n        \t\t\t\t'price_list': price_list,\n        \t\t\t\t'territory': frm.doc.price_list_region,\n        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n        \t\t\t\t'footer_discount': frm.doc.discount_amount\n        \n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r.message) {\n                            d.fields_dict.margin_details.$wrapper.html(r.message);\n    \t\t    \t\t}\n        \t\t\t}\n        \t\t})\n            });\n            d.show();\t\n\t    },__(\"More Details\"))\n\t    }\n\t    frm.add_custom_button(__(\"Stock Details\"), function () {\n\t\t\tvar item_details_list = []\n\t\t\tvar item_details = {}\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\titem_details = {}\n\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\titem_details['qty'] = d.qty\n\t\t\t\titem_details['rate'] = d.rate\n\t\t\t\titem_details_list.push(item_details)\n\t\t\t})\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.getstock_detail\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"item_details\": item_details_list\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\t\t\tsize: \"extra-large\",\n\t\t\t\t\t\t\ttitle: 'Stock Details',\n\t\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Stock Details',\n\t\t\t\t\t\t\t\t\tfieldname: 'stock_details',\n\t\t\t\t\t\t\t\t\tfieldtype: 'HTML'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\td.fields_dict.stock_details.$wrapper.html(r.message);\n\t\t\t\t\t\td.show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.getstock_detail\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\t\t\t\t\t\"item_details\": item_details_list\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t},__(\"More Details\"));\n\t    frm.add_custom_button(__(\"Margin Details\"), function () {\n\t        var item_details_list = []\n\t\t\tvar item_details = {}\n\t\t\t$.each(frm.doc.items, function (i, d) {\n\t\t\t\titem_details = {}\n\t\t\t\titem_details['item_code'] = d.item_code\n\t\t\t\titem_details['item_name'] = d.item_name\n\t\t\t\titem_details['description'] = d.description\n\t\t\t\titem_details['qty'] = d.qty\n\t\t\t\titem_details['rate'] = d.rate\n\t\t\t\titem_details['special_cost'] = d.special_cost\n\t\t\t\titem_details['internal_cost'] = d.internal_cost\n\t\t\t\titem_details['amount'] = d.amount\n\t\t\t\titem_details_list.push(item_details)\n\t\t\t})\n            frappe.db.get_value('Price List based on Territory', { 'is_internal': 1, 'territory': frm.doc.price_list_region}, 'name')\n    \t\t.then(k => {\n        \t\tfrappe.call({\n        \t\t\tmethod: \"norden.margin_details.margin\",\n        \t\t\targs: {\n        \t\t\t\t'name': frm.doc.name,\n        \t\t\t\t'item_details': item_details_list,\n        \t\t\t\t\"company\": frm.doc.company,\n        \t\t\t\t\"exchange_rate\": frm.doc.conversion_rate,\n        \t\t\t\t\"currency\": frm.doc.currency,\n        \t\t\t\t\"margin_currency\": frm.doc.margin_currency,\n        \t\t\t\t'user': frappe.session.user,\n        \t\t\t\t'price_list': k.message.name,\n        \t\t\t\t'territory': frm.doc.price_list_region,\n        \t\t\t\t'line_item_addition': frm.doc.line_item_addition,\n        \t\t\t\t'line_item_discount': frm.doc.line_item_discount,\n        \t\t\t\t'footer_discount': frm.doc.discount_amount\n        \n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r.message) {\n    \t\t\t            let d = new frappe.ui.Dialog({\n                                size:\"extra-large\",\n                                title: 'Margin Details',\n                                fields: [\n                                    {\n                                        label: 'Margin Details',\n                                        fieldname: 'margin_details',\n                                        fieldtype: 'HTML'\n                                    },\n                                ],\n                                        \n                            });\n                            d.fields_dict.margin_details.$wrapper.html(r.message);\n                            d.show();\t\n    \t\t    \t\t}\n        \t\t\t}\n        \t\t})\n    \t\t})\n\t    },__(\"More Details\"))\n\t    \n\t\tfrm.set_query(\"bank_account\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"bank\": frm.doc.bank\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    if(frm.doc.docstatus == 0){\n\t        frm.add_custom_button(__(\"Send a Reminder\"), function () {\n    \t\t    var cont = \"Dear Sir/Mam,</b><br><br><p>\" + frm.doc.doctype+\" No : \"+\"<b>\"+ frm.doc.name+\"</b>\"+\", Waiting for Your Approval<p><p> Please Kind Action <p>\"\n    \t\t\tlet dialog = new frappe.ui.Dialog({\n    \t\t\ttitle: __('Send Reminder Email'),\n    \t\t\tfields: [\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Message',\n    \t\t\t\t\tfieldtype: 'Small Text',\n    \t\t\t\t\tdefault:cont,\n    \t\t\t\t\tfieldname: 'message',\n    \t\t\t\t\tread_only : 1\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\tlabel: 'Email',\n    \t\t\t\t\tfieldtype: 'Link',\n    \t\t\t\t\toptions: 'User',\n    \t\t\t\t\treqd:1,\n    \t\t\t\t\tfieldname: 'email',  \n    \t\t\t\t},\n    \t\t\t],\n    \t\t\tprimary_action_label: __('Send'),\n    \t\t\tprimary_action: () => {\n    \t\t\t\tlet values = dialog.get_values();\n    \t\t\t\tif (values) {\n    \t\t\t\t// \tconsole.log(values)\n    \t\t\t\t\tfrappe.call({\n    \t\t\t\t\t    method:\"norden.custom.reminder_mail\",\n    \t\t\t\t\t    args:{\n    \t\t\t\t\t        \"message\":values['message'],\n    \t\t\t\t\t        \"email\":values['email']\n    \t\t\t\t\t    },\n    \t\t\t\t\t    callback(r){\n    \t\t\t\t\t        if(r){\n    \t\t\t\t\t            frappe.msgprint(\"A reminder mail has been sent to - \"+values['email'])\n    \t\t\t\t\t        }\n    \t\t\t\t\t    }\n    \t\t\t\t\t})\n    \t\t\t\t}\n    \t\t        dialog.hide();\n    \t\t\t},\n    \t\t});\n    \t\tdialog.show();\n    \t\t},__(\"More Details\"))\n\t    }\n\t    \n\t    frm.trigger(\"get_quo_details\")\n\t    $.each(frm.doc.taxes,function(i,j){\n            j.actual_rate = (j.tax_amount / frm.doc.total) * 100\n        })\n        frm.refresh_field(\"taxes\")\n\t   // if (frappe.user.has_role(\"Stock User\")) {\n\t   //     \t   if (frm.doc.docstatus == 1) {\n    //         frm.add_custom_button(__(\"Allocate\"), function () {\n    // \t\t\tfrappe.route_options = {\n    // \t\t\t\t'company': frm.doc.company,\n    // \t\t\t\t'customer': frm.doc.customer,\n    // \t\t\t\t'stock_entry_type': \"Material Transfer\",\n    // \t\t\t\t'linked_sales_order': frm.doc.name,\n    // \t\t\t}\n    // \t\t\tfrappe.new_doc('Stock Entry')\n                  \n    //         // \tfrappe.call({\n    //         // \t\tmethod: \"norden.custom.create_new_stock_entry\",\n    //         // \t\targs: {\n    //         // \t\t\t\"name\": frm.doc.name,\n    //         // \t\t\t\"item\": frm.doc.items\n    //         // \t\t},\n    //         // \t\tcallback(r) {\n            \n    //         // \t\t}\n    //         // \t});\n    //         },__(\"More Details\"));\n            \n    //     }\n\n\t   // }\n\t    if(frm.doc.docstatus == 1){\n\t\tfrm.add_custom_button(__('Logistics Request'), function(){\n\t\n\t    var lg = frappe.model.make_new_doc_and_get_name('Logistics Request');\n        lg = locals['Logistics Request'][lg];\n        lg.order_no = frm.doc.name\n        lg.logistic_type = \"Export\"\n        lg.po_so = \"Sales Order\"\n        lg.file_number = frm.doc.file_number\n        lg.product_description_so = frm.doc.items\n        frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n\t\t    \n\t    },__(\"More Details\"));\n\t    \n\t}\n\n\t    $.each(frm.doc.items,function(i,d){\n\t        frappe.db.get_value('Item',{'name':d.item_code},['item_sub_group'])\n            .then(r => {\n                if(r.message.item_sub_group == \"Eyenor\"){\n                    frm.set_value('eyenor',1)\n                }\n            })\n\t    })\n\t\tif(frm.doc.docstatus == 1){\n\t\tfrm.add_custom_button(__('Logistics Request'), function(){\n\t\n\t    var lg = frappe.model.make_new_doc_and_get_name('Logistics Request');\n        lg = locals['Logistics Request'][lg];\n        lg.order_no = frm.doc.name\n        lg.logistic_type = \"Export\"\n        lg.po_so = \"Sales Order\"\n        lg.file_number = frm.doc.file_number\n        lg.product_description_so = frm.doc.items\n        frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n\t\t    \n\t    },__(\"More Details\"));\n\t    \n\t}\n\t    frm.add_custom_button(__(\"Print Sales Order\"), function () {\n            var f_name = frm.doc.name\n            if(frm.doc.docstatus == 0){\n                if (frm.doc.company == 'Norden Communication Middle East FZE'){\n\t\t\t\t    var print_format = \"sale order Dubai\"\n                    \n                }\n\t\t\t\telse{\n                    var print_format = \"Sales Order Draft\"\n\t\t\t\t}\n            }\n            if(frm.doc.docstatus == 1){\n            \tif(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n\t\t\t\t    var print_format = \"Sparcom Sales Order\";\n            \t}\n            \telse if(frm.doc.company == 'Norden Communication Middle East FZE'){\n\t\t\t\t    var print_format = \"sale order Dubai\"\n            \t}\n            \telse{\n                    var print_format =\"Sale Order\";\n            \t}\n            }\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n            \n\n\t    }, __(\"Print\"));\n\t    if(frm.doc.docstatus == 1){\n\t        \n\t    \n            frm.add_custom_button(__(\"Print Proforma Invoice\"), function () {\n                var f_name = frm.doc.name\n            \tif(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n\t\t\t\tvar print_format = \"Sparcom Proforma Invoice\";\n            \t}\n            \telse if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n            \t   var print_format =\"Proforma Invoice MiddleEast\";\n                    }\n            \telse{\n                var print_format =\"Proforma Invoice\";\n            \t}\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            }, __(\"Print\"));\n\t    }\n\t        \n\t    \n            frm.add_custom_button(__(\"Picking List\"), function () {\n                var f_name = frm.doc.name\n\t\t\t\tvar print_format = \"Stock Details\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            }, __(\"Print\"));\n\t    if(frm.doc.docstatus == 1){\n\t        frm.add_custom_button(__(\"Partial Proforma Invoice\"), function () {\n                var f_name = frm.doc.name\n            \tif(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n\t\t\t\t    var print_format = \"Proforma Invoice Middle\";\n        \t    }\n        \t    else if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n            \t   var print_format =\"Proforma Invoice Middle\";\n                }\n            \telse{\n                    var print_format =\"Proforma Invoice Middle\";\n            \t}\n                window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                ));\n\t        }, __(\"Print\"));\n\t    }\n\t    frm.add_custom_button(__(\"Non Available Item List\"), function () {\n\t\t\tvar f_name = frm.doc.name\n                var print_format =\"Non Available Item List\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Sales Order\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n\t\t\t},__(\"Print\"));\n\t    \n            // if(frm.doc.workflow_state == 'Pending for COO' || frm.doc.workflow_state == 'Pending for CFO'){\n            //  frm.add_custom_button(__(\"Margin Details\"), function () {\n            //         var item_details_list = []\n            //         var item_details = {}\n            //         $.each(frm.doc.items, function (i, d) {\n            //             item_details = {}\n            //             item_details['item_code'] = d.item_code\n            //             item_details['item_name'] = d.item_name\n            //             item_details['description'] = d.description\n            //             item_details['qty'] = d.qty\n            //             item_details['rate'] = d.rate\n            //             item_details['special_cost'] = d.special_cost\n            //             item_details_list.push(item_details)\n            //         })\n                    \n            //         frappe.call({\n            // \t        method : \"norden.custom.get_margin_details\",\n            // \t        args:{\n            //                 'item_details': item_details_list,\n            //                 \"company\":frm.doc.company,\n            //                 \"exchange_rate\":frm.doc.conversion_rate,\n            //                 \"currency\":frm.doc.currency,\n            //                 \"name\":frm.doc.name\n                            \n            // \t        },\n            // \t        callback(r){\n            // \t            if (r.message ) {\n            //                     let d = new frappe.ui.Dialog({\n            //                         size:\"extra-large\",\n            //                         title: 'Margin',\n            //                         fields: [\n            //                             {\n            //                                 label: 'Margin',\n            //                                 fieldname: 'margin',\n            //                                 fieldtype: 'HTML'\n            //                             },\n            //                         ],\n                                    \n            //                     });\n            //                     d.fields_dict.margin.$wrapper.html(r.message);\n            //                     d.show();\n            \t\t\t\t\t\n            // \t\t\t\t}\n            // \t        }\n            // \t    })\n               \n                \n\n            // });\n            // }\n\t    \n\t    \n\t\tif(frm.doc.__islocal){\n\t\t    \n\t\t    if(frm.doc.converted_by){\n\t\t    frappe.call({\n\t        method: 'norden.custom.get_sales_person',\n\t        args:{\n\t            'converted_by':frm.doc.converted_by\n\t        },\n\t        callback(r){\n\t            if(r.message){\n\t                frm.add_child('sales_team',{\n\t                    sales_person : r.message[0],\n\t                    commission_rate : r.message[1],\n\t                    allocated_percentage : '100',\n\t                    allocated_amount : frm.doc.base_net_total,\n\t                    incentives : frm.doc.base_net_total/r.message[1]\n\t                })\n\t                frm.refresh_field('sales_team')\n\t            }\n\t        }\n\t\t    })\n\t\t}\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\tif (frm.doc.invoice_type){\n\t\t    frm.trigger(\"set_series\")\n\t\t}\n\t},\n\t\n\tcompany(frm) {\n\t    if(frm.doc.company ==\"Norden Communication Pvt Ltd\"){\n\t        frm.set_value(\"price_list_region\",\"India\")\n\t    }\n\t    if(frm.doc.company ==\"Norden Africa\"){\n\t        frm.set_value(\"price_list_region\",\"Africa\")\n\t    }\n\t    if(frm.doc.company ==\"Norden Communication Middle East FZE\"){\n\t        frm.set_value(\"price_list_region\",\"Dubai\")\n\t    }\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n    invoice_type(frm){\n        if(frm.doc.invoice_type){\n        frm.trigger(\"set_series\")\n        }\n    },\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t    if(frm.doc.invoice_type == 'Taxable'){\n                frappe.call({\n        \t\t\tmethod: \"norden.utils.get_series_with_tax\",\n        \t\t\targs: {\n        \t\t\t\tcompany: frm.doc.company,\n        \t\t\t\tdoctype: frm.doc.doctype\n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r) {\n        \t\t\t\t\tfrm.set_value('naming_series', r.message)\n        \t\t\t\t}\n        \t\t\t}\n        \t\t})\n\t\t    }\n            else{\n    \t\t\tfrappe.call({\n    \t\t\t\tmethod: \"norden.utils.get_series\",\n    \t\t\t\targs: {\n    \t\t\t\t\tcompany: frm.doc.company,\n    \t\t\t\t\tdoctype: frm.doc.doctype\n    \t\t\t\t},\n    \t\t\t\tcallback(r) {\n    \t\t\t\t\tif (r.message) {\n    \t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t})\n    \t\t}\n\t\t}\n\t},\n    \n\t\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t}\n})\n\n\n\nfrappe.ui.form.on('Sales Order Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t}\n})\n\nfrappe.ui.form.on('Sales Order Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n        frappe.db.get_value('Item',{'name':child.item_code},['item_sub_group'])\n        .then(r => {\n            if(r.message.item_sub_group == \"Eyenor\"){\n                frm.set_value('eyenor',1)\n            }\n        })\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'norden.custom.stock_popup',\n\t        args:{\n\t            'item_code':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_country_name\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t    child.country_name = d.message\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t     frappe.call({\n\t        method: 'norden.custom.po_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.out_qty_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})\n\nfrappe.ui.form.on('Sales Taxes and Charges', {\n\ttax_amount(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.tax_amount){\n\t        child.actual_rate = (child.tax_amount / frm.doc.total) * 100\n\t    }\n\t    frm.refresh_field(\"taxes\")\n\t}\n})\n\nfrappe.ui.form.on('Sales Order Details', {\n    qty(frm,cdt,cdn) {\n        var child = locals[cdt][cdn]\n        if(child.qty){\n            child.amount = (child.qty * child.rate)\n        }\n        frm.refresh_field('so_details')\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-03-03 18:49:03.449249",
  "module": null,
  "name": "Opportunity-Form",
  "script": "frappe.ui.form.on('Opportunity', {\n    // party_name(frm){\n    //     if (frm.doc.party_name){\n    //         frappe.call({\n    //             method : \"frappe.client.get_value\",\n    //             args : {\n    //                 doctype : frm.doc.opportunity_from,\n    //                 filters : {\n    //                     name : frm.doc.party_name\n    //                 },\n    //                 fieldname : ['customer_group']\n    //             },\n    //             callback(r){\n    //                 console.log(r.message)\n    //                 frm.set_value('group',r.message.customer_group)\n    //             }\n    //         })\n    //     }\n    // },\n    validate(frm){\n        if(frm.doc.territory == 'All Territories'){\n            frappe.validated = false\n            frappe.throw(\"Choose other territory because All Territories in not valid.\")\n        }\n       if(frm.doc.items){\n            var list = []\n            var item_details_list = []\n            var item_details = {}\n            $.each(frm.doc.items, function (i, d) {\n            item_details = {}\n            item_details['item_code'] = d.item_code\n            item_details['item_name'] = d.item_name\n            item_details['item_sub_heading'] = d.item_sub_heading\n            item_details['item_heading'] = d.item_heading\n            item_details['item_title_3'] = d.item_title_3\n            item_details_list.push(item_details)\n            })\n            \n            var item_heading = []\n            var item_head = {}\n            $.each(frm.doc.items, function (i, d) {\n                item_head = {}\n                item_head['item_sub_heading'] = d.item_sub_heading\n                item_head['item_heading'] = d.item_heading\n                item_heading.push(item_head)\n            })\n            \n            var item_titles = []\n            var item_title = {}\n            $.each(frm.doc.items, function (i, d) {\n                item_title = {}\n                item_title['item_sub_heading'] = d.item_sub_heading\n                item_title['item_heading'] = d.item_heading\n                item_title['item_title'] = d.item_title_3\n                item_titles.push(item_title)\n            })\n            \n        if(frm.doc.company == 'Norden Communication India' || frm.doc.company == 'Norden Communication Pvt Ltd' ){\n         frappe.call({\n            \tmethod: \"norden.custom.get_item_heading\",\n\t\t\targs: {\n\t\t\t    'item_details': item_details_list,\n\t\t\t},\n            callback(s){\n                if(s.message){\n                    frm.clear_table('heading')\n                     $.each(s.message,function(i,e){\n                         frm.add_child('heading',{\n                            main_title:e,\n                         })\n                          frm.refresh_field('heading')\n                     })\n                    \n                }\n            }\n            \n        \n        })\n        }\n        \n        frappe.call({\n        \tmethod: \"norden.custom.get_sub_heading\",\n\t\t\targs: {\n\t\t\t    'item_head': item_heading,\n\t\t\t},\n            callback(s){\n                if(s.message){\n                    frm.clear_table('sub_heading')\n                     $.each(s.message,function(i,e){\n                         console.log(e.item_heading)\n                         frm.add_child('sub_heading',{\n                            'heading':e.item_heading,\n                            'title':e.item_sub_heading,\n                         })\n                          frm.refresh_field('sub_heading')\n                     })\n                    \n                }\n            }\n            \n        \n        })\n        \n         frappe.call({\n        \tmethod: \"norden.custom.get_item_titles\",\n\t\t\targs: {\n\t\t\t    'item_title': item_titles,\n\t\t\t},\n            callback(s){\n                if(s.message){\n                    console.log(s.message)\n                    frm.clear_table('title_3')\n                     $.each(s.message,function(i,e){\n                         frm.add_child('title_3',{\n                            'heading':e.item_heading,\n                            'sub_heading':e.item_sub_heading,\n                            'title_3':e.item_title,\n                         })\n                         frm.refresh_field('title_3')\n                     })\n                    \n                }\n            }\n            \n        \n        })\n        \n//         frappe.call({\n//         \tmethod: \"norden.custom.get_item_titles\",\n// \t\t\targs: {\n// \t\t\t    'item_title': item_titles,\n// \t\t\t},\n//             callback(s){\n//                 if(s.message){\n//                     frm.clear_table('title_3')\n//                      $.each(s.message,function(i,e){\n//                          frm.add_child('title_3',{\n//                             'heading':e.item_heading,\n//                             'sub_heading':e.item_sub_heading,\n//                             'title_3':e.item_title,\n//                          })\n//                           frm.refresh_field('title_3')\n//                      })\n                    \n//                 }\n//             }\n            \n        \n//         })\n        \n        \n           \n        }\n    },\n    \n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n    converted_by(frm){\n        if(frm.doc.converted_by){\n    frappe.call({\n    \t\tmethod: \"frappe.client.get_list\",\n    \t\targs: {\n    \t\t\tdoctype: \"Contact\",\n    \t\t\tfilters: {\n    \t\t\t\t\"user\": frm.doc.converted_by\n    \t\t\t},\n\t\t\t\tfields:['phone', 'designation']\n    \t\t},\n\t\t\tcallback(r){\n\t            if(r.message){\n\t                console.log(r.message)\n\t\t\t\t\t$.each(r.message,function(i,v){\n\t\t\t\t\t    console.log(v.phone)\n\t\t\t\t\t    console.log(v.designation)\n\t\t\t\t\t\tfrm.set_value('sales_person_contact',v.phone)\n\t\t\t\t\t\tfrm.set_value('sales_person_designation',v.designation)\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t})\n        }\n    },\n\tsale_person(frm){\n    frappe.call({\n\t\t\tmethod: \"norden.utils.set_cluster\",\n\t\t\targs: {\n\t\t\t\t'sales_person': frm.doc.sale_person,\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t    frm.set_value(\"cluster\",r.message);\n\t\t\t\t}\n\n\t\t\t}\n\t\t})\n\t    if(frm.doc.sale_person == \"binu@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Binu A G\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"shaji@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Shaji M\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"sreekumar@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Sreekumar\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"suresh@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Suresh\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"yousef@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Benyoucef\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"ashick@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Ashick\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"ahmad.suleiman@nordencommunication.com\" ){\n\t        frm.set_value('cluster',\"Dubai - Ahmad Suleiman\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"aneez.abdul@norden.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Aneez\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"akmal@nordencommunication.com\" ){\n\t        frm.set_value('cluster',\"Dubai - Akmal\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"julie@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Julie\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"michelle@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Michelle\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"sobha@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Sobha\")\n\t    }\n\t    \n\t    if(frm.doc.sale_person == \"faisal@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Faisal\")\n\t    }\n\t    \n\t    \n\t    if(frm.doc.sale_person == \"asif@norden.co.uk\" ){\n\t        frm.set_value('cluster',\"Dubai - Asif\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"rabea@nordencommunication.com\" ){\n\t        frm.set_value('cluster',\"Dubai - Rabea\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"rijas@nordencommunication.com\" ){\n\t        frm.set_value('cluster',\"Dubai - Rijas\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"sujith@nordenco.ae\" ){\n\t        frm.set_value('cluster',\"Dubai - Sujith\")\n\t    }\n\t    \n\t     if(frm.doc.sale_person == \"syed@nordencommunication.com\" ){\n\t        frm.set_value('cluster',\"Dubai - Syed\")\n\t    }\n\t    \n\t    \n\t},\n\n     prepared_by(frm){\n        if(frm.doc.prepared_by){\n    frappe.call({\n    \t\tmethod: \"frappe.client.get_list\",\n    \t\targs: {\n    \t\t\tdoctype: \"Contact\",\n    \t\t\tfilters: {\n    \t\t\t\t\"user\": frm.doc.prepared_by\n    \t\t\t},\n\t\t\t\tfields:['phone', 'designation']\n    \t\t},\n\t\t\tcallback(r){\n\t            if(r.message){\n\t                console.log(r.message)\n\t\t\t\t\t$.each(r.message,function(i,v){\n\t\t\t\t\t    console.log(v.phone)\n\t\t\t\t\t    console.log(v.designation)\n\t\t\t\t\t\tfrm.set_value('prepared_contact',v.phone)\n\t\t\t\t\t\tfrm.set_value('prepared_designation',v.designation)\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}\n\t\t})\n        }\n    },\n\trefresh(frm) {\n\t\t\tif(frm.doc.__islocal){\n\t\t    frm.set_value('prepared_by',frappe.session.user)\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('national_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('national_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"National Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\t\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('regional_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('regional_distributor', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Regional Distributors\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('system_integrator', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('system_integrator', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"System Integrators\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('end_user', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('end_user', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"End Users\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.opportunity_from == 'Customer'){\n\t\t    frm.set_query('stockists', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Stockists\",\n\t\t\t\t}\n\t\t\t\n\t\t\t};\n\t\t});\n\t\t}\n\t\telse{\n\t\t    frm.set_query('stockists', function(doc) {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"customer_group\": \"Stockistss\",\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t    }\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t{\n\t\t    frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_default_currency\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t   console.log(r)\n\t\t\t\t\t   frm.set_value(\"currency\",r.message)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\t\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n\tfetch(frm){\n\t    frappe.call({\n\t        method: 'norden.custom.get_stock_balance',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_availability')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_availability',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'warehouse':v[2],\n\t                        'qty':v[3],\n\t                        'uom':v[4],\n\t                        'value':v[5]\n\t                    })\n\t                    frm.refresh_field('stock_availability')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t     frappe.call({\n\t        method: 'norden.custom.get_previous_po',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('previous_purchase_order')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('previous_purchase_order',{\n\t                        'item_code':v[0],\n\t                        'item_name':v[1],\n\t                        'supplier':v[2],\n\t                        'qty':v[3],\n\t                        'po_date':v[4],\n\t                        'amount':v[5],\n\t                        'purchase_order':v[6]\n\t                    })\n\t                    frm.refresh_field('previous_purchase_order')\n\t                })\n\t            }\n\t       }\n\t    })\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.get_out_qty',\n\t        args:{\n\t            'item_table':frm.doc.items\n\t        },\n\t        callback(d){\n\t            frm.clear_table('stock_out_qty')\n\t            if (d.message){\n\t                $.each(d.message,function(i,v){\n\t                    frm.add_child('stock_out_qty',{\n\t                        'item_code':v[0],\n\t                        'warehouse':v[1],\n\t                        'qty':v[2],\n\t                        'date':v[3],\n\t                        'out_type':v[4]\n\t                    })\n\t                    frm.refresh_field('stock_out_qty')\n\t                })\n\t            }\n\t       }\n\t    })\n\t}\n})\n\nfrappe.ui.form.on('Opportunity Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t}\n})\n\nfrappe.ui.form.on('Opportunity Item', {\n    item_code(frm,cdt,cdn) {\n\t    var child = locals[cdt][cdn]\n\t    if(child.item_code){\n\t  frm.trigger('fetch')\n\t  frappe.call({\n\t        method: 'norden.custom.stock_popup',\n\t        args:{\n\t            'item_code':child.item_code,\n\t            'company':frm.doc.company\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t                frm.get_field(\"items_html\").$wrapper.html(d.message);\n\t           }\n\t       }\n\t    })\n\t   //  frappe.call({\n\t   //     method: 'norden.custom.po_popup',\n\t   //     args:{\n\t   //         'item':child.item_code\n\t   //     },\n\t   //     callback(d){\n\t   //        if (d.message){\n\t   //            frappe.msgprint(d.message)\n\t   //        }\n\t   //    }\n\t   // })\n\t   frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_country_name\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t    child.country_name = d.message\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t    \n\t    frappe.call({\n\t        method: 'norden.custom.out_qty_popup',\n\t        args:{\n\t            'item':child.item_code\n\t        },\n\t        callback(d){\n\t           if (d.message){\n\t               frappe.msgprint(d.message)\n\t           }\n\t       }\n\t    })\n\t    \n\t    }\n\t},\n\titems_remove(frm){\n\t    frm.trigger('fetch')\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Product Sticker",
  "enabled": 1,
  "modified": "2021-12-21 12:40:35.731529",
  "module": null,
  "name": "Eyenor Product Sticker-Form",
  "script": "frappe.ui.form.on('Eyenor Product Sticker', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__('Generate PDF'), function() {\n\t        var f_name = frm.doc.name\n            var print_format =\"Eyenor Product Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Product Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t},);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Price Sticker",
  "enabled": 1,
  "modified": "2021-12-21 18:00:02.409552",
  "module": null,
  "name": "Eyenor Price Sticker-Form",
  "script": "frappe.ui.form.on('Eyenor Price Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Generate PDF'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Price Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Price Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t});\n\t\t\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Eyenor Adapter Sticker",
  "enabled": 1,
  "modified": "2021-12-21 19:13:55.827858",
  "module": null,
  "name": "Eyenor Adapter Sticker-Form",
  "script": "frappe.ui.form.on('Eyenor Adapter Sticker', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__('Generate PDF'), function() {\n\t\t\t\t    var f_name = frm.doc.name\n            var print_format =\"Eyenor Adapter Sticker\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Eyenor Adapter Sticker\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n\t\t\t\t});\n\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Delivery Note",
  "enabled": 1,
  "modified": "2023-12-16 17:30:17.903683",
  "module": null,
  "name": "Delivery Note-Form",
  "script": "frappe.ui.form.on('Delivery Note', {\n\n    validate(frm){\n        if(frm.doc.__islocal){\n            frm.trigger(\"set_series\")\n        }\n        $.each(frm.doc.taxes,function(i,j){\n            if(j.actual_rate > 0){\n                j.tax_amount = (j.actual_rate * frm.doc.total) / 100\n            }\n        })\n        frm.refresh_field(\"taxes\")\n        if(frm.doc.territory == 'All Territories'){\n            frappe.validated = false\n            frappe.throw(\"Choose other territory because All Territories in not valid.\")\n        }\n        \n        if(frm.doc.items){\n            $.each(frm.doc.items, function (i, d) {\n                d.delivered_qty = d.qty\n            })\n        }\n        \n    },\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\t\n\tskip_qc(frm){\n    if(frm.doc.skip_qc){\n       $.each(frm.doc.items, function (i, d) {\n        d.skip_qc = 1\n    })\n    }\n    else{\n        $.each(frm.doc.items, function (i, d) {\n        d.skip_qc = 0\n    })\n    }\n\t},\n\tinvoice_type(frm){\n        if(frm.doc.invoice_type){\n        frm.trigger(\"set_series\")\n        }\n    },\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t    if(frm.doc.invoice_type == 'Taxable'){\n                frappe.call({\n        \t\t\tmethod: \"norden.utils.get_series_with_tax\",\n        \t\t\targs: {\n        \t\t\t\tcompany: frm.doc.company,\n        \t\t\t\tdoctype: frm.doc.doctype\n        \t\t\t},\n        \t\t\tcallback(r) {\n        \t\t\t\tif (r) {\n        \t\t\t\t\tfrm.set_value('naming_series', r.message)\n        \t\t\t\t}\n        \t\t\t}\n        \t\t})\n            }\n            else{\n    \t\t\tfrappe.call({\n    \t\t\t\tmethod: \"norden.utils.get_series\",\n    \t\t\t\targs: {\n    \t\t\t\t\tcompany: frm.doc.company,\n    \t\t\t\t\tdoctype: frm.doc.doctype\n    \t\t\t\t},\n    \t\t\t\tcallback(r) {\n    \t\t\t\t\tif (r.message) {\n    \t\t\t\t\t\tfrm.set_value('naming_series', r.message)\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t})\n    \t\t}\n\t\t}\n\t},\n\t\n\tonload(frm){\n\t    if(frm.doc.__islocal){\n\t        if(frm.doc.additional_discountpercentage > 0){\n\t            frm.set_value(\"additional_discount_percentage\",frm.doc.additional_discountpercentage)\n\t        }\n\t    }\n\t    if (frm.doc.items) {\n            $.each(frm.doc.items, function (i, d) {\n                if(d.qty){\n                    // d.balance_qty = d.qty\n                    d.delivered_qty = d.qty\n                    d.sales_order_qty_ = d.qty\n                }\n            })\n        }\n\t},\n\t\n\trefresh(frm) {\n\t    $.each(frm.doc.taxes,function(i,j){\n            if(j.actual_rate > 0){\n                j.tax_amount = (j.actual_rate * frm.doc.total) / 100\n            }\n        })\n        frm.refresh_field(\"taxes\")\n\t\tif (!frm.doc.__islocal){\n\t\t    frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus ==0){\n    \t\t\t    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n    \t\t\t\t    var print_format = \"Sparcom Delivery Note\";\n                \t}\n                \telse if(frm.doc.company == 'Norden Communication Middle East FZE'){\n    \t\t\t        var print_format = \"Dubai Delivery\"\n    \t\t\t        var draft = 1\n    \t\t\t\t        \n    \t\t\t\t}\n                \telse{\n                        var print_format =\"Delivery\";\n                        var draft = 1\n                \t}\n                }\n                if(frm.doc.docstatus == 1){\n    \t\t\t    if(frm.doc.company == \"Sparcom Ningbo Telecom Ltd\"){\n    \t\t\t\t    var print_format = \"Sparcom Delivery Note\";\n                \t}\n                \telse if(frm.doc.company == 'Norden Communication Middle East FZE'){\n    \t\t\t        var print_format = \"Dubai Delivery\"\n    \t\t\t        var draft = 0\n    \t\t\t\t        \n    \t\t\t\t}\n                \telse{\n                        var print_format =\"Delivery\";\n                        var draft = 0\n                \t}\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Delivery Note\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n            });\n\t\t}\n\t},\n\tcompany(frm) {\n\t    \n\t    \n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t}\n\t},\n})\n\nfrappe.ui.form.on('Delivery Note Item', {\n    \n// add_serial_no(frm,cdt,cdn){\n//     frappe.provide(\"erpnext\");\n// frappe.provide(\"erpnext.utils\");\n//     \tvar child = locals[cdt][cdn];\n// let grid_row = cur_frm.open_grid_row();\n// if (!grid_row || !grid_row.grid_form.fields_dict.serial_no ||\n//     grid_row.grid_form.fields_dict.serial_no.get_status() !== \"Write\") return;\n\n// frappe.model.get_value('Item', {'name': grid_row.doc.item_code},\n//     ['has_serial_no', 'has_batch_no'], ({has_serial_no, has_batch_no}) => {\n//         Object.assign(grid_row.doc, {has_serial_no, has_batch_no});\n\n//         if (has_serial_no) {\n//             let button_field = grid_row.grid_form.fields_dict.add_serial_no;\n//             if (button_field) {\n//                 attach_selector_button(__(\"Add Serial No\"), button_field.$wrapper, this, grid_row);\n//             }\n//         }\n//     });\n// function attach_selector_button(inner_text, append_loction, context, grid_row) {\n// \tlet $btn_div = $(\"<div>\").css({\"margin-bottom\": \"10px\", \"margin-top\": \"10px\"})\n// \t\t.appendTo(append_loction);\n// \tlet $btn = $(`<button class=\"btn btn-sm btn-default\">${inner_text}</button>`)\n// \t\t.appendTo($btn_div);\n\n// \t$btn.on(\"click\", function() {\n// \t\tcontext.show_serial_batch_selector(grid_row.frm, grid_row.doc, \"\", \"\", true);\n// \t});\n// }\n\n// },\n    item_code(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n        frappe.call({\n    \t\t\t\tmethod: \"norden.custom.get_country_name\",\n    \t\t\t\targs: {\n    \t\t\t\t\t\"company\": frm.doc.company,\n    \n    \t\t\t\t},\n    \t\t\t\tcallback(d) {\n    \t\t\t\t\tif (d.message) {\n    \t\t\t\t\t    child.country_name = d.message\n    \t\t\t\t\t}\n    \n    \t\t\t\t}\n    \t\t\t})\n        },\n        delivered_qty(frm, cdt, cdn) {\n        var child = locals[cdt][cdn]\n        child.qty = child.delivered_qty\n        if(child.sales_order_qty_ == 0){\n            child.balance_qty = 0\n        }\n        else{\n            child.balance_qty =child.sales_order_qty_ - child.delivered_qty\n        }\n        frm.refresh_field(\"items\")\n    },\n\n    inspect(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n        var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n        ip = locals['Item Inspection'][ip];\n        ip.so_number = child.against_sales_order\n        ip.dn_number = frm.doc.name\n        ip.item_code = child.item_code\n        frappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n        \n    },\n})\n\n\n\n//  if (child.qty < child.delivered_qty){\n//         var s = child.qty\n//         var r = child.delivered_qty - s \n//         child.qty = r + child.qty\n//     }",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-12-21 23:11:02.373249",
  "module": null,
  "name": "Purchase Invoice-Form",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\tvalidate(frm){\n\t    var cal = (frm.doc.discount_amount / (frm.doc.total + frm.doc.total_taxes_and_charges)) * 100\n        frm.set_value('additional_discount_percentage',cal)\n\t},\n\tonload_post_render(frm){\n\t    frappe.db.get_value('Purchase Receipt', frm.doc.purchase_receipt_no, 'taxes_and_charges')\n        .then(r => {\n            frm.set_value('taxes_and_charges',r.message.taxes_and_charges)\n        })\n        \n\t    \n\t},\n\tonload(frm){\n\t    if(frm.doc.__islocal){\n\t        frappe.db.get_value('Purchase Receipt',frm.doc.purchase_receipt_no,'additional_discount_percentage',)\n            .then(r => {\n                var value = r.message.additional_discount_percentage\n                frm.set_value('additional_discount_percentage',value)\n            })\n            frappe.db.get_value('Purchase Receipt',frm.doc.purchase_receipt_no,'supplier_invoice_number')\n            .then(r => {\n                var value = r.message.supplier_invoice_number\n                frm.set_value('bill_no',value)\n            })\n\t    }\n\t},\n\t\n\trefresh(frm) {\n\t\tif(!frm.doc.__islocal){\n\t\t    frm.add_custom_button(__(\"Print Invoice Row\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus == 0){\n                    var print_format =\"Purchase Invoice Test\";\n                    var draft = 1\n                }\n                 if(frm.doc.docstatus == 1){\n                    var print_format =\"Purchase Invoice Test\";\n                    var draft = 0\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n             frm.add_custom_button(__(\"Print Invoice India\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus == 0){\n                    var print_format =\"Invoice India\";\n                    var draft = 1\n                }\n                if(frm.doc.docstatus == 1){\n                    var print_format =\"Invoice India\";\n                    var draft = 0\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n\t\t}\n\t\tif(frm.doc.status==\"Return\"){\n\t\t    frm.add_custom_button(__(\"Print Debit Note\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus==0){\n                    var print_format =\"Debit Note\";\n                    var draft = 1\n                }\n                if(frm.doc.docstatus==1){\n                    var print_format =\"Debit Note\";\n                    var draft = 0\n                }\n                  window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n\t\t}\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t},\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t    \n\t\t\n\t},\n\t\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Request for Quotation",
  "enabled": 1,
  "modified": "2022-04-27 15:10:04.735908",
  "module": null,
  "name": "Request for Quotation-Form",
  "script": "frappe.ui.form.on('Request for Quotation', {\n     after_cancel(frm){\n   \n         frappe.msgprint(\"please fill the cancellation remarks\")\n    \n\t   \n\t},\n\trefresh(frm) {\n\t    if(!frm.doc.__islocal){\n\t         frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                var print_format =\"Request for Quotation\";\n                 window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                    + \"doctype=\" + encodeURIComponent(\"Request for Quotation\")\n                    + \"&name=\" + encodeURIComponent(f_name)\n                    + \"&trigger_print=1\"\n                    + \"&format=\" + print_format\n                    + \"&no_letterhead=0\"\n                   ));\n            \n\n            });\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2023-09-12 15:15:54.625698",
  "module": null,
  "name": "Journal Entry-Form",
  "script": "frappe.ui.form.on('Journal Entry', {\n\trefresh(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\tfrm.add_custom_button(__(\"Print\"), function () {\n\t\t\tvar f_name = frm.doc.name\n\t\t\t\n\t\t\tvar print_format =\"Journal Entry\";\n\t\t\t\n\t\t\t\n\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Journal Entry\")\n\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t));\n\t\t        \n\t\t});\n\t},\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\n\nset_series(frm) {\n    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    }\n\t},\n\t\n// \tcompany(frm){\n// \t    if(frm.doc.company == 'Norden Communication Private Limited Panangad'){\n// \t        frm.set_value('naming_series','ACC-JV-NCPLP-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Private Limited Bangalore'){\n// \t        frm.set_value('naming_series','ACC-JV-NCPLB-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication India'){\n// \t        frm.set_value('naming_series','ACC-JV-NC-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Singapore PTE LTD'){\n// \t        frm.set_value('naming_series','ACC-JV-NSPL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication UK Limited'){\n// \t        frm.set_value('naming_series','ACC-JV-NCUL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Sparcom Ningbo Telecom Ltd'){\n// \t        frm.set_value('naming_series','ACC-JV-SNTL-.YYYY.-')\n// \t    }\n// \t    else if(frm.doc.company == 'Norden Communication Middle East FZE'){\n// \t        frm.set_value('naming_series','ACC-JV-NCMEF-.YYYY.-')\n// \t    }\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-01-02 11:41:14.107165",
  "module": null,
  "name": "Sales Invoice-Form",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    validate(frm){\n        \n        if(frm.doc.__islocal){\n            frm.trigger(\"set_series\")\n        }\n        // if(!frm.doc.__islocal){\n        //     // $.each(frm.doc.items,function(i,d){\n    \t   //     if(frm.doc.items[0].sales_order){\n        //             frappe.call({\n        //                 method:\"norden.custom.get_so_difference\",\n        //                 args:{\n        //                     'sales_order':frm.doc.items[0].sales_order,\n        //                     'sales_invoice':frm.doc.name\n        //                 },\n        //                 callback(r){\n        //                     if(r){\n        //                         $.each(r.message[0],function(i,j){\n        //                             $.each(r.message[1],function(i,k){\n        //                             if(j.item_code == k.item_code){\n        //                                 if(k.qty >j.qty){\n        //                                     frappe.msgprint(j.item_code+\" - \"+\"item quantity should not be greater than  \"+j.qty)\n        //                                     frappe.validated = false\n        //                                 }\n                                        \n        //                             }\n        //                             })\n        //                         })\n        //                     }\n        //                 }\n        //             })\n    \t   //     }\n            // })\n        // }\n        \n        \n        $.each(frm.doc.taxes,function(i,j){\n            if(j.actual_rate > 0){\n                j.tax_amount = (j.actual_rate * frm.doc.total) / 100\n            }\n        })\n        frm.refresh_field(\"taxes\")\n        if(frm.doc.prepared_by){\n            frappe.call({\n        method: 'norden.custom.get_prepared_by_name',\n        args: {\n            'email':frm.doc.prepared_by\n        },\n        callback(r) {\n            if (r.message){\n                // console.log(r)\n                frm.set_value(\"prepared_name\",r.message)\n        \n            }\n        }\n    })\n            \n    }\n    if(frm.doc.__islocal){\n    if (frm.doc.sales_invoice_type === 'Normal Invoice') {\n            // Check if any row in the items table has a value in the delivery_note field\n            var anyDeliveryNote = false;\n            $.each(frm.doc.items || [], function(i, item) {\n                if (item.delivery_note) {\n                    anyDeliveryNote = true;\n                    return false; // Exit the loop if a delivery note is found\n                }\n            });\n\n            // If no delivery notes are found, prevent saving and show an error message\n            // if (!anyDeliveryNote) {\n            //     frappe.msgprint(__('You cannot save or submit this Sales Invoice as a Normal Invoice without setting Delivery Notes.'));\n            //     frappe.validated = false;\n            // }\n        }\n    }\n        \n        \n    },\n\trefresh(frm) {\n\t    if(frm.doc.company==\"Norden Communication Pvt Ltd\"){\n\t\t        frm.add_custom_button(__(\"Sales Invoice India\"), function () {\n                    var f_name = frm.doc.name\n                    if(frm.doc.docstatus == 0){\n                        var print_format = \"Sales Invoice India1\"\n                        var draft = 1\n                    }\n                    else{\n                        var print_format = \"Sales Invoice India1\"\n                        var draft = 0\n                    }\n                        \n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            });\n\t\t}\n\t\tif(frm.doc.company==\"Norden Communication Pvt Ltd\"){\n    \t\tif(frappe.user.has_role(\"System Manager\")){\n\t\t        frm.add_custom_button(__(\"Sales Invoice Test\"), function () {\n                    var f_name = frm.doc.name\n                    if(frm.doc.docstatus == 0){\n                        var print_format = \"Sales Invoice International\"\n                        var draft = 1\n                    }\n                    else{\n                        var print_format = \"Sales Invoice International\"\n                        var draft = 0\n                    }\n                    window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n                });\n    \t\t}\n\t\t}\n\t   // Check the value of the \"Sales Invoice Type\" field\n    if (frm.doc.sales_invoice_type === \"Proforma Invoice\") {\n        frm.add_custom_button(__(\"Print Proforma Invoice\"), function () {\n            var f_name = frm.doc.name;\n            \n            // if (frm.doc.company === \"Norden Communication Middle East FZE\") {\n                if(frm.doc.docstatus == 0){\n                var print_format = \"Middle East Proforma Invoice\";\n                var draft = 0\n                }\n                else{\n                  var print_format = \"Middle East Proforma Invoice\";\n                    var draft = 0\n                }\n                \n            // }\n\n            window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n        });\n    }\n        $.each(frm.doc.taxes,function(i,j){\n            if(j.actual_rate > 0){\n                j.tax_amount = (j.actual_rate * frm.doc.total) / 100\n            }\n        \n        })\n        frm.refresh_field(\"taxes\")\n\t    $.each(frm.doc.items,function(i,j){\n            if(j.sales_order){\n            frappe.call({\n                method:\"norden.utils.get_detailed_so\",\n                args:{\n                    'sales_order':j.sales_order\n                },\n                callback(r){\n                    if(r){\n                        $.each(r.message,function(i,k){\n                            if(k.item_code == j.item_code){\n                                j.price_list_rate = k.price_list_rate\n                                j.margin_percentage = k.margin_percentage\n                                j.margin_value = k.margin_value\n                                j.disc_amt = k.disc_amt\n                                j.unit_price_document_currency = k.unit_price_document_currency\n                                j.base_price_list_rate = k.base_price_list_rate\n                            }\n                        })\n                        frm.refresh_field(\"items\")\n                    }\n                }\n            })\n            }\n        })\n\t        if (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\tif(!frm.doc.__islocal){\n\t\t\t    if(frm.doc.company == 'Norden Communication Middle East FZE'){\n\t\t\t    frm.add_custom_button(__(\"Print\"), function () {\n\t\t\t\tvar f_name = frm.doc.name\n\t\t\t\tif(frm.doc.is_return==0){\n\t\t\t\t    if(frm.doc.docstatus==0){\n\t\t\t\t        var print_format = \"Dubai Sales Invoice\";\n\t\t\t\t        var draft = 1\n\t\t\t\t    }\n\t\t\t\t    if(frm.doc.docstatus== 1 ){\n\t\t\t\t        var print_format = \"Dubai Sales Invoice\";\n\t\t\t\t        var draft = 0\n\t\t\t\t    }\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t    if(frm.doc.docstatus == 0){\n\t\t\t\t        var print_format =\"Credit Note1\";\n\t\t\t\t        var draft = 1\n\t\t\t\t    }\n\t\t\t\t    if(frm.doc.docstatus == 1){\n\t\t\t\t        var print_format =\"Credit Note1\";\n\t\t\t\t        var draft = 0\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t}\n\t\t\t\t\n\t\t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n\t\t\t        \n\t\t\t});\n\t\t}\n// \t\t\t   if(frm.doc.company==\"Norden Communication Pvt Ltd\"){\n// \t\t        frm.add_custom_button(__(\"Sales Invoice India\"), function () {\n//                     var f_name = frm.doc.name\n//                     var print_format = \"Sales Invoice India\"\n                        \n//                  window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n//                     + \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n//                     + \"&name=\" + encodeURIComponent(f_name)\n//                     + \"&trigger_print=1\"\n//                     + \"&format=\" + print_format\n//                     + \"&no_letterhead=0\"\n//                     + \"&letterhead=\" + encodeURIComponent(\"Norden\")\n//                   ));\n            \n\n//             }, __(\"Print Invoice for\"));\n// \t\t}\n\t\t\tif(frm.doc.company!=\"Norden Communication Pvt Ltd\"){\n             frm.add_custom_button(__(\"Sales Invoice\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus == 0){\n                    var print_format = \"Sales invoice1\"\n                    var draft = 1\n                }\n                else{\n                var print_format =\"Sales Invoice1\";\n                    var draft =0\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Sales Invoice\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));\n            \n\n            },__(\"Print Invoice for\"));\n\t\t\t        \n\t\t\t} \n\t\t\t    \n\t\t\t}\n\t\t\t\n\t \n    },\n\tsales_invoice_type(frm){\n\t    if(frm.doc.sales_invoice_type){\n            frm.trigger(\"set_series\")\n        }\n\t},\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\tif(frm.doc.company == \"Norden Communication Pvt Ltd\"){\n\t\t    frm.set_df_property('invoice_type', 'options', [\" \",'Domestic', 'Export']);\n\n\t\t}\n\t\telse if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n\t\t    frm.set_df_property('invoice_type', 'options', [\" \",\"Taxable\",\"Non Taxable\"]);\n\t\t}\n\t\t\n\t},\n\t\n\n\tonload(frm){\n\t    frm.trigger(\"company\")\n\t   if(frm.doc.territory == \"United Arab Emirates\" && frm.doc.customer_address){\n\t     frappe.db.get_value('Address',frm.doc.customer_address,['country','emirate'])\n                .then(r => {\n                    var value = r.message.country\n                    var emr = r.message.emirate\n                    console.log(emr)\n                    if(value == \"United Arab Emirates\"){\n                        frm.set_value(\"vat_emirate\",emr)\n                    }\n                //     frappe.db.get_value('Employee',value,'user_id')\n                // .then(r => {\n                //     var v = r.message.user_id\n                //     console.log(v)\n                //     frm.set_value('reports_to',v)\n                // })\n                })\n\t   }\n\t   \n\t    if(frm.doc.prepared_by){\n            frappe.call({\n        method: 'norden.custom.get_prepared_by_name',\n        args: {\n            'email':frm.doc.prepared_by\n        },\n        callback(r) {\n            if (r.message){\n                // console.log(r)\n                frm.set_value(\"prepared_name\",r.message)\n        \n            }\n        }\n    })\n            \n        }\n\tif(frm.doc.items[0].sales_order){\n\t    frappe.call({\n            method: 'norden.custom.check_tax',\n            args: {\n                'name':frm.doc.items[0].sales_order\n            },\n            callback(r) {\n                if (r.message){\n                    frm.set_value(\"taxes_and_charges\",r.message)\n            \n                }\n            }\n        })\n\t}\n\t\n\t // Check if any row in the items table has a value in the delivery_note field\n        var anyDeliveryNote = false;\n        $.each(frm.doc.items || [], function(i, item) {\n            if (item.delivery_note) {\n                anyDeliveryNote = true;\n                return false; // Exit the loop if a delivery note is found\n            }\n        });\n\n        // Set sales_invoice_type based on the presence of delivery notes\n        if (anyDeliveryNote) {\n            frm.set_value('sales_invoice_type', 'Normal Invoice');\n        } else {\n            frm.set_value('sales_invoice_type', 'Proforma Invoice');\n        }\n        \n        \n    \n                    \n\t},\n    invoice_type(frm){\n        if(frm.doc.invoice_type){\n        frm.trigger(\"set_series\")\n        }\n    },\n\tset_series(frm) {\n    if (frm.doc.__islocal) {\n        let seriesPrefix = \"SI\"; // Default series prefix\n        if (frm.doc.invoice_type == 'Taxable') {\n            frappe.call({\n                method: \"norden.utils.get_series_with_tax\",\n                args: {\n                    company: frm.doc.company,\n                    doctype: frm.doc.doctype\n                },\n                callback(r) {\n                    if (r) {\n                        if (frm.doc.is_return) {\n                            var new_series = r.message;\n                            frm.set_value('naming_series', new_series.replace(\"SI\", \"SR\"));\n                        } else {\n                            frm.set_value('naming_series', seriesPrefix + r.message.replace(\"SI\", \"\"));\n                        }\n                    }\n                }\n            });\n\t    }\n\t else{\n\t     frappe.call({\n\t     method: \"norden.utils.get_series\",\n        \t args: {\n        \t     company: frm.doc.company,\n        \t    doctype: frm.doc.doctype\n        \t     \n        \t },\n        \t  callback(r) {\n                    if (r) {\n                        \n                        if (frm.doc.is_return) {\n                            var new_series = r.message;\n                            frm.set_value('naming_series', new_series.replace(\"SI\", \"SR\"));\n                        } \n                        else if(frm.doc.company == \"Norden Communication Pvt Ltd\" && frm.doc.sales_invoice_type == \"Proforma Invoice\"){\n                            console.log(\"profor\")\n                            var new_seriess = r.message;\n                            frm.set_value('naming_series', new_seriess.replaceAll(\"SI\", \"PI\"));\n\t\t\t\t        }\n                        else {\n                            frm.set_value('naming_series', seriesPrefix + r.message.replace(\"SI\", \"\"));\n                        }\n                    }\n                }\n            });\n        }\n        \n        // Check if sales_invoice_type is Proforma Invoice and update seriesPrefix accordingly\n        if (frm.doc.sales_invoice_type == 'Proforma Invoice') {\n            seriesPrefix += \"-PI\";\n        }\n    }\n    }\n})\n\nfrappe.ui.form.on('Sales Invoice Item', {\n\trefresh(frm) {\n\t    {\n\t    var child = locals[cdt][cdn]\n\t    frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_country_name\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t    child.country_name = d.message\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t    }    \n    \n\t},\n// \tqty(frm,cdt,cdn){\n// \t    var child = locals[cdt][cdn]\n\t    \n// \t}\n\titem_code(frm, cdt, cdn) {\n\t    var child = locals[cdt][cdn]\n\t    frappe.call({\n\t\t\t\tmethod: \"norden.custom.get_country_name\",\n\t\t\t\targs: {\n\t\t\t\t\t\"company\": frm.doc.company,\n\n\t\t\t\t},\n\t\t\t\tcallback(d) {\n\t\t\t\t\tif (d.message) {\n\t\t\t\t\t    child.country_name = d.message\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t})\n\t    }\n})\n\nfrappe.ui.form.on('Sales Taxes and Charges', {\n\tactual_rate(frm, cdt, cdn) {\n\t    var child = locals[cdt][cdn]\n\t    child.tax_amount = (child.actual_rate * frm.doc.total) / 100\n\t   \n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2024-01-05 13:06:03.008218",
  "module": null,
  "name": "Purchase Receipt-Form",
  "script": "frappe.ui.form.on('Purchase Receipt', {\n//     validate(frm){\n        \n// \t\tif (frm.doc.discount_amount) {\n// \t\t\tvar additional_discount_percentage = (frm.doc.discount_amount / frm.doc.total) * 100\n// \t\t\tfrm.set_value(\"additional_discount_percentage\", additional_discount_percentage)\n// \t\t}\n\n//     },\n    merge_items(frm){\n        if(!frm.doc.__islocal){\n            frappe.call({\n                method : \"norden.custom.purchase_receipt_item\",\n    \t        args:{\n    \t            'purchase_receipt' : frm.doc.name,\n    \t        },\n    \t        callback(r){\n                    if (r.message ) {\n                        // frm.clear_table('items')\n                        $.each(r.message,function(i,d){\n                            // console.log(d)\n                            // frm.add_child('items',{\n            //                     'item_code':d.item_code,\n            //                         'item_name':d.item_name,\n            //                         'description':d.description,\n            //                         'item_group':d.item_group,\n            //                         'uom':d.uom,\n            //                         'ordered':d.ordered,\n            //                         'received_stock_qty':d.received_stock_qty,\n            //                         'stock_qty':d.stock_qty,\n            //                         'conversion_factor':d.conversion_factor,\n            //                         'stock_uom_rate':d.stock_uom_rate,\n            //                         'warehouse':d.warehouse,\n            //                         'item_inspection':d.item_inspection,\n            //                         'rejected_warehouse':d.rejected_warehouse,\n            //                         'material_request':d.material_request,\n            //                         'alpha_series':d.alpha_series,\n            //                         'starting_s_no':d.starting_s_no,\n            //                         'rejected_serial_no':d.rejected_serial_no,\n            //                         'serial_no':d.serial_no,\n            //                         'weight_uom':d.weight_uom,\n            //                         'manufacturer':d.manufacturer,\n            //                         'manufacturer_part_no':d.manufacturer_part_no,\n            //                         'provisional_expense_account':d.provisional_expense_account,\n            //                         'project':d.project,\n            //                         'schedule_date':d.schedule_date,\n            //                         'purchase_order':d.purchase_order,\n            //                         'expense_account':d.expense_account,\n            //                         'cost_center':d.cost_center,\n            //                         'received_qty':d.received_qty,\n            //                         'qty':d.qty,\n            //                         'balance':d.balance,\n            //                         'rejected_qty':d.rejected_qty,\n            //                         'price_list_rate':d.price_list_rate,\n            //                         'base_price_list_rate':d.base_price_list_rate,\n            //                         'discount_percentage':d.discount_percentage,\n            //                         'discount_amount':d.discount_amount,\n            //                         'rate':d.rate,\n            //                         'amount':d.amount,\n            //                         'base_rate':d.base_rate,\n            //                         'base_amount':d.base_amount,\n            //                         'net_rate':d.net_rate,\n            //                         'base_net_rate':d.base_net_rate,\n            //                         'base_net_amount':d.base_net_amount,\n            //                         'landed_cost_voucher_amount':d.landed_cost_voucher_amount,\n            //                         'billed_amt':d.billed_amt,\n            //                         'weight_per_unit':d.weight_per_unit,\n            //                         'total_weight':d.total_weight,\n        \t\t\t\t// \t})\n                        })\n        \t\t\t\t// frm.refresh_field('items')\n    \t\t\t    }\n                }\n    \t    })\n        }\n    },\n    \n    \n\trefresh(frm) {\n\t    var total = 0;\n        // $.each(items, function(i, v) {\n        //     if (v.custom_inspect_completed == 1) {\n        //         total += 1;\n        //         frm.set_value(\"custom_count_of_item_inspection\", total);\n        //     }\n        // });\n        \n\n\t   //frappe.call({\n\t   //     method:'norden.custom.update_qc_status',\n\t   //     args:{\n\t   //         'name':frm.doc.name,\n\t   //     },\n\t   //     callback(r){\n\t   //        if(r){\n\t   //            frm.set_value(\"custom_qc_percentage\",r.message*100)\n\t   //            if(r.message ==0){\n\t   //                frm.set_value(\"custom_qc_status\",\"QC Pending\")\n\t   //            }\n\t   //            else if(r.message ==1){\n\t   //                frm.set_value(\"custom_qc_status\",\"QC Completed\")\n\t   //            }\n\t   //            else{\n\t   //                frm.set_value(\"custom_qc_status\",\"QC Partially Completed\")\n\t   //            }\n\t   //        }\n\t   //     }\n\t   // })\n    \n\t\n\tif (frm.doc.company) {\n\t\tfrm.trigger(\"set_series\")\n\t}\n\t\t\n\tif(frm.doc.docstatus == 1){\n\t    frm.add_custom_button(__('Logistics Request'), function () {\n\t        \tfrappe.set_route(\"Form\", \"Logistics Request\",frm.doc.logistics)\n\t        })\n\t        \n\t  //  frm.add_custom_button(__('Inspection'), function () {\n\t        \n\t  //      })\n\t}\n\t\n// \t\tif(frappe.user.has_role(\"Stock User\") && !frappe.user.has_role(\"Stock Manager\")){\n// \t\t    frm.set_df_property('section_break0', 'hidden', true);\n//             frm.set_df_property('totals', 'hidden', true);\n//             frm.set_df_property('sec_tax_breakup', 'hidden', true);\n//             frm.set_df_property('section_break_42', 'hidden', true);\n//             frm.set_df_property('section_break_46', 'hidden', true);\n// \t    }\n                frm.add_custom_button(__(\"Print\"), function () {\n                var f_name = frm.doc.name\n                if(frm.doc.docstatus == 0){\n                    var print_format =\"Good Receipt Report\";\n                    var draft = 1\n                }\n                if(frm.doc.docstatus ==1){\n                    var print_format =\"Good Receipt Report\";\n                    var draft = 0\n                }\n                 window.open(frappe.urllib.get_full_url(\"/api/method/norden.utilities.pdf.download_pdf?\"\n\t\t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n\t\t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n\t\t\t\t\t+ \"&trigger_print=1\"\n\t\t\t\t\t+ \"&draft=\" + draft\n\t\t\t\t\t+ \"&format=\" + print_format\n\t\t\t\t\t+ \"&no_letterhead=0\"\n\t\t\t\t\t+ \"&letterhead=\" + encodeURIComponent(\"Norden\")\n\t\t\t\t));(\"Good Receipt Report\")\n            \n\n            });\n\n//             \tfrm.add_custom_button(__(\"Purchase Receipt\"), function () {\n//     \t\t    var f_name = frm.doc.name\n//     \t\t    var print_format = \"Purchase Receipt\";\n//     \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n//     \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n//     \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n//     \t\t\t\t+ \"&trigger_print=1\"\n//     \t\t\t\t+ \"&format=\" + print_format\n//     \t\t\t\t+ \"&no_letterhead=0\"\n//     \t\t\t\t// + \"&letterhead=\" + encodeURIComponent(letter_head)));\n//     \t\t));\t\n\n// \t});\n\t\n},\n\n    setup(frm){\n        if(frappe.user.has_role(\"Stock User\") || frappe.user.has_role(\"Stock Manager\")){\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"rate\",frm.doc.name);\n\t    df.hidden = 1\n\t    var df = frappe.meta.get_docfield(\"Purchase Receipt Item\",\"amount\",frm.doc.name);\n\t    df.hidden = 1\n\t   \n\t    }\n\t    \n\t    \n     \n    },\n    \n    \n    bill_of_entry(frm){\n        // if(frm.doc.__islocal){\n            \n            if(frm.doc.company == \"Norden Communication Pvt Ltd\" && frm.doc.bill_of_entry != \"NA\"){\n                frm.set_value(\"set_warehouse\",\"India Bonded Warehouse - NCPL\")\n            }\n        // }\n    },\n//     if(frm.doc.bill_of_entry || frm.doc.bom_out_bound){\n//         \tfrappe.call({\n// \t\t\tmethod: \"norden.custom.get_stock_entry\",\n// \t\t\targs:{\n// \t\t\t\t\"company\":frm.doc.company,\n// \t\t\t\t\"bom\": frm.doc.bill_of_entry\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t    if(r.message){\n// \t\t\t       console.log(r.message)\n// \t\t          frm.clear_table(\"items\")\n// \t\t          $.each(r.message,function(i,v){\n// \t\t              if(v.target_warehouse == \"India Bonded Warehouse - NCPL\"){\n// \t\t              frm.add_child('items',{\n//                 \t\titem_code:v.item_code,\n//                 \t\titem_name:v.item_name,\n//                 \t\tqty:v.balance_in_qty,\n//                 \t\tbalance:v.balance_in_qty,\n//                 \t\tdescription:v.item_name,\n//                 // \t\ttransfer_qty:v.balance_in_qty,\n//                 \t\tserial_no:v.updated_serial_no,\n//                 // \t\tbasic_rate:v.basic_rate,\n//                 \t\tbatch_no:v.batch,\n//                 // \t\ts_warehouse:v.target_warehouse,\n//                 // \t    basic_amount:v.basic_amount,\n//                 \t\tamount:v.amount,\n//                 // \t\tbatch_no:v.batch,\n//                 // \t\tadditional_cost : v.additional_cost,\n//                 // \t\titemwise_additional_cost : v.itemwise_additional_cost,\n//                 \t\tuom : v.uom\n//                     \t})\n// \t\t              }\n//             \tfrm.refresh_field('items')\n//             \t})\n//         }\n// \t\t\t}\n// \t\t})\n//  }\n// },\n    \n    \n\tafter_cancel(frm) {\n        let d = new frappe.ui.Dialog({\n            title: 'feedback form',\n            fields: [\n                {\n                    label: 'Reason',\n                    fieldname: 'reason',\n                    fieldtype: 'Small Text'\n                },\n               ],\n            primary_action_label: 'Submit',\n            primary_action(values) {\n                d.hide();\n                frm.set_value('cancellation_remark',values.reason);\n            }\n        \n        });\n        \n            d.show();\n\n\n        frappe.msgprint(\"please fill the cancellation remarks\")\n\n\n    },\n    company(frm) {\n        \n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t},\n\t\n// \tskip_qc(frm){\n//     if(frm.doc.skip_qc){\n//       $.each(frm.doc.items, function (i, d) {\n//         d.skip_qc = 1\n//     })\n//     }\n//     else{\n//         $.each(frm.doc.items, function (i, d) {\n//         d.skip_qc = 0\n//     })\n//     }\n// \t},\n\t\n\t\n    \n    set_series(frm) {\n        if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t},\n\t\t\n// \t\tfrm.add_custom_button(__(\"Purchase Receipt\"), function () {\n// \t\t    var f_name = frm.doc.name\n// \t\t    var print_format = \"Purchase Receipt\";\n// \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n// \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Purchase Receipt\")\n// \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n// \t\t\t\t+ \"&trigger_print=1\"\n// \t\t\t\t+ \"&format=\" + print_format\n// \t\t\t\t+ \"&no_letterhead=0\"\n// \t\t\t\t// + \"&letterhead=\" + encodeURIComponent(letter_head)));\n// \t\t});\t\n\n\tonload(frm){\n\t    if(frm.doc.__islocal){\n\t        frappe.db.get_value('Purchase Order',frm.doc.purchase_order_no,'additional_discount_percent')\n            .then(r => {\n                var value = r.message.additional_discount_percent\n                frm.set_value('additional_discount_percentage',value)\n            })\n\t \n    \t    frappe.call({\n        \t    method:'norden.custom.get_order_qty',\n        \t    args:{\n        \t        'po_no':frm.doc.purchase_order_no\n        \t    },\n        \t    callback(r){\n        \t        if (r.message){\n        \t            $.each(frm.doc.items,function(i,k){\n        \t                $.each(r.message,function(i,j){\n        \t                    if(k.item_code == j.item_code && k.qty == j.qty){\n        \t                        k.ordered = j.qty\n        \t                    }\n        \t                })\n        \t            })\n        \t            frm.refresh_field(\"items\")\n        \t            \n        \t        }\n        \t        \n        \t    }\n        \t})\n\t    }\n\t}\n}),\n\n\nfrappe.ui.form.on('Purchase Receipt Item', {\n\tis_free(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n\t    if (child.is_free == 1){\n\t        child.price_list_rate = 0\n\t        child.base_price_list_rate = 0\n\t        child.rate = 0\n\t        child.amount = 0\n\t        child.base_rate = 0\n\t        child.base_amount = 0\n\t        child.base_rate = 0\n\t        child.base_amount = 0\n\t        child.base_net_rate = 0\n\t        child.base_net_amount = 0\n\t        child.net_rate = 0\n\t        child.net_amount = 0\n\t    }\n\t    frm.refresh_field('items')\n\t},\n\tqty(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n\t    if (child.qty){\n\t        var quantity = child.received_qty  - child.qty\n\t        child.rejected_qty = quantity\n\t    }\n\t     \n    },\n\n// \tinspect(frm,cdt,cdn){\n// \t    var child = locals [cdt][cdn]\n// \t    if(child.custom_inspect_completed == 1){\n// \t        frappe.msgprint(\"Already Item Inspection Created Against this Item Code: \" + child.item_code);\n// \t    }\n// \t    else{\n//         var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n//         ip = locals['Item Inspection'][ip];\n//         ip.po_number = frm.doc.purchase_order_no\n//         ip.pr_number = frm.doc.name\n//         ip.item_code = child.item_code\n//         ip.received_qty = child.received_stock_qty\n//                 ip.warehouse = frm.doc.set_warehouse\n\n//         ip.inspection_lot_qty = child.received_qty\n//         ip.serial = child.serial_no\n//         ip.id = child.name\n//         ip.uom = child.stock_uom\n        \n//         ip.batch = child.batch_no\n//         ip.serial_and_batch_bundle = child.serial_and_batch_bundle\n        \n//         \tfrappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n// \t }\n\t     \n// },\ninspect(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n\t    if(child.custom_inspect_completed == 1){\n\t        frappe.msgprint(\"Already Item Inspection Created Against this Item Code: \" + child.item_code);\n\t    }\n\t    else{\n        var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n        ip = locals['Item Inspection'][ip];\n        ip.po_number = frm.doc.purchase_order_no\n        ip.pr_number = frm.doc.name\n        ip.item_code = child.item_code\n        ip.received_quantity = child.received_stock_qty\n                ip.warehouse = frm.doc.set_warehouse\n\n        ip.inspection_lot_qty = child.received_qty\n        ip.serial = child.serial_no\n        ip.id = child.name\n        ip.uom = child.stock_uom\n        \n        ip.batch = child.batch_no\n        ip.serial_and_batch_bundle = child.serial_and_batch_bundle\n        \n        \tfrappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n\t }\n\t     \n},\n\nfoc(frm,cdt,cdn){\n    \n\t    var child = locals[cdt][cdn]\n\t   \n\t    if (child.foc){\n\t        var focquantity = child.received_qty + child.foc\n\t         var rej = child.received_qty  - child.qty\n\t        child.qty = focquantity\n\t        child.received_qty = rej\n\t       \n\t        \n\t    }\n\t     \n},\n\n    generate_(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t    var s_no_list = []\n\t    var srs = []\n\t    var no_list = []\n\t    var series_lst = []\n\t    var alpha_list = []\n\t    var alpha = child.alpha_series\n\t    var s_no = parseInt(child.starting_s_no);\n\n\t    for(var i = 0; i < parseInt(child.received_qty); i++){\n\t        s_no_list.push(s_no)\n\t        alpha_list.push(alpha + s_no)\n\t        \n\t        alpha = alpha\n\t        s_no = s_no + 1\n\t       // no_list = alpha.join(s_no)\n\n\t    }\n\t   //  alpha_ls = s_no_list.join(alpha)\n\t   if(child.alpha_numeric_serial_no){\n\t   // no_list = alpha_list.join(s_no_list)\n\t    \n\t    s_no_list = alpha_list.join(\"\\n\")\n\t   }\n\t   else{\n\t        s_no_list = s_no_list.join('\\n')\n\t   }\n\t    child.serial_no = s_no_list\n\t    refresh_field(\"items\");\n}\n\n\t        \n\t    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "File Number Global Search",
  "enabled": 1,
  "modified": "2022-05-20 15:11:41.807714",
  "module": null,
  "name": "File Number Global Search-Form",
  "script": "frappe.ui.form.on('File Number Global Search', {\n\trefresh(frm) {\n\t\tfrm.disable_save()\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-12-24 12:16:38.887975",
  "module": "Norden",
  "name": "Stock Entry-Form",
  "script": "frappe.ui.form.on('Stock Entry', {\n    // validate(frm){\n    //     frm.trigger('from_warehouse')\n        \n    // },\n//     reschedule_allocation_date(frm){\n//         frappe.call({\n// \t\tmethod: \"norden.custom.re_allocation_date\",\n// \t\targs: {\n// \t\t\t\"name\": frm.doc.name,\n// \t\t\t\"posting_date\": frm.doc.posting_date\n// \t\t},\n// \t\tcallback(r) {\n\n// \t\t}\n// \t});\n//     },\n    \n\trefresh(frm) {\n\t    if(frm.doc.docstatus != 1){\n\t        if(frm.doc.allocate == 1){\n                frm.clear_table(\"additional_costs\")\n            }\n    \t\tif (frm.doc.company) {\n    \t\t\tfrm.trigger(\"set_series\")\n    \t\t}\n\t    }\n\t},\n\tsetup(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\tfrm.set_query(\"bill_of_entry\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"company\":frm.doc.company\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tfrm.set_query(\"bom_out_bound\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"boe_inbound\":frm.doc.bill_of_entry\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tstock_entry_type(frm){\n\t    if(frm.doc.stock_entry_type == \"Material Issue\"){\n\t        frm.clear_table(\"additional_costs\")\n\t    }\n\t},\n\tonload(frm){\n\t    if(frm.doc.docstatus != 1){\n\t       // if(frm.doc.linked_quotation){\n    \t   //     frappe.db.get_value('Quotation',{'name':frm.doc.linked_quotation},['party_name'])\n        //         .then(r => {\n        //             if(r.message.party_name){\n        //                 frm.set_value('customer',r.message.party_name)\n        //             }\n        //         })\n    \t   // }\n    \t   // if(frm.doc.linked_sales_order){\n    \t   //     frappe.db.get_value('Sales Order',{'name':frm.doc.linked_sales_order},['customer'])\n        //         .then(r => {\n        //             if(r.message.customer){\n        //                 frm.set_value('customer',r.message.customer)\n        //             }\n        //         })\n    \t   // }\n\t    \n        \n\t    if(frm.doc.__islocal){\n    \t   // if(frm.doc.linked_quotation){\n    \t   //     frm.set_value('allocate',1)\n    \t        \n    \t   //     frappe.db.get_value('Warehouse', {company:frm.doc.company,default_for_stock_transfer:1}, 'name')\n        //         .then(r => {\n        //             frm.set_value('from_warehouse',r.message.name)\n                    \n        //         })\n        //         frappe.db.get_value('Warehouse', {company:frm.doc.company,is_allocate:1}, 'name')\n        //         .then(r => {\n        //             frm.set_value('to_warehouse',r.message.name)\n        //         })\n            \n    \t   //     frappe.call({\n        // \t\t\tmethod: \"norden.custom.get_all_quot\",\n        // \t\t\targs:{\n        // \t\t\t    name:frm.doc.linked_quotation,\n        // \t\t\t},\n        // \t\t\tcallback(r){\n        // \t\t\t     frm.clear_table(\"items\")\n        //     \t\t\tif(r.message) {\n        //     \t\t\t    $.each(r.message,function(i,d){\n        //     \t\t\t        console.log(d)\n        //     \t\t\t        frm.add_child(\"items\",{\n        //     \t\t\t            'item_code':d.item_code,\n        //     \t\t\t            'item_name':d.item_name,\n        //     \t\t\t            'description':d.description,\n        //                             'qty':d.qty,\n        //                             'transfer_qty':d.stock_qty,\n        //                             'uom':d.uom,\n        //                             'cost_center':r.message.cost_center\n        //     \t\t\t        })\n        //     \t\t\t        frm.refresh_field(\"items\")\n        //     \t\t\t    })\n        //     \t\t\t}\n        // \t\t\t}\n        \t\t\t\n        \t\t  \n        // \t\t});\n    \t   // }\n\t    \n    \t   // if(frm.doc.linked_sales_order){\n    \t   //     frm.set_value('allocate',1)\n    \t        \n    \t   //     frappe.db.get_value('Warehouse', {company:frm.doc.company,default_for_stock_transfer:1}, 'name')\n        //         .then(r => {\n        //             frm.set_value('from_warehouse',r.message.name)\n        //         })\n        //         frappe.db.get_value('Warehouse', {company:frm.doc.company,is_allocate:1}, 'name')\n        //         .then(r => {\n        //             frm.set_value('to_warehouse',r.message.name)\n        //         })\n            \n    \t   //     frappe.call({\n        // \t\t\tmethod: \"norden.custom.get_all_so\",\n        // \t\t\targs:{\n        // \t\t\t    name:frm.doc.linked_sales_order,\n        // \t\t\t},\n        // \t\t\tcallback(r){\n        // \t\t\t     frm.clear_table(\"items\")\n        //     \t\t\tif(r.message) {\n        //     \t\t\t    $.each(r.message,function(i,d){\n        //     \t\t\t        console.log(d)\n        //     \t\t\t        frm.add_child(\"items\",{\n        //     \t\t\t            'item_code':d.item_code,\n        //     \t\t\t            'item_name':d.item_name,\n        //     \t\t\t            'description':d.description,\n        //                             'qty':d.qty,\n        //                             'transfer_qty':d.stock_qty,\n        //                             'uom':d.uom,\n        //                             'cost_center':r.message.cost_center,\n        //                             'conversion_factor':1\n        //     \t\t\t        })\n        //     \t\t\t        frm.refresh_field(\"items\")\n        //     \t\t\t    })\n        //     \t\t\t}\n        // \t\t\t}\n        \t\t\t\n        \t\t  \n        // \t\t});\n    \t   // }\n        \t\tvar data =[\n        \t\t        {'title':'Air Freight Payable -NCPL'},\n        \t\t\t\t{'title':'Clearing Charges Payable - NCPL'},\n        \t\t\t\t{'title':'Customs Duty Payable - NCPL'},\n        \t\t\t\t{'title':'Demurrage Payable - NCPL'},\n        \t\t\t\t{'title':'Interest on Duty Payable - NCPL'},\n        \t\t\t\t{'title':'Sea Frieght Payable - NCPL'},\n        \t\t]\n    \t       // if (frm.doc.stock_entry_type != \"Material Issue\"){\n        \t\t        frm.clear_table(\"additional_costs\")\n        \t\t        \n            \t\t\t\t$.each(data,function(i,v){\n            \t\t\t\t\tfrm.add_child('additional_costs',{\n            \t\t\t\t\t\texpense_account:v.title,\n            \t\t\t\t\t})\n            \t\t\t\t\n        \t\t\t\tfrm.refresh_field('additional_costs')\n        \t\t\t\t})\n        \t\t        \n        // \t\t}\n                \n\t        }\n\t    }\n\t},\n\t\n\tbill_of_entry(frm){\n\t   // if (frm.doc.__islocal) {\n\t   //     frm.set_value(\"from_warehouse\",\"India Bonded Warehouse - NCPL\")\n    //         frappe.db.get_value('Warehouse',{company:frm.doc.company,is_qc: 1 }, ['name'])\n    //         .then(r => {\n    //             if (r.message){\n    //                 frm.set_value('to_warehouse', r.message.name);\n    //             }\n    //         });\n    //     }\n    if(frm.doc.bill_of_entry || frm.doc.bom_out_bound){\n        \tfrappe.call({\n\t\t\tmethod: \"norden.custom.get_stock_entry\",\n\t\t\targs:{\n\t\t\t\t\"company\":frm.doc.company,\n\t\t\t\t\"bom\": frm.doc.bill_of_entry\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    if(r.message){\n\t\t\t       console.log(r.message)\n\t\t          frm.clear_table(\"items\")\n\t\t          $.each(r.message,function(i,v){\n\t\t              if(v.target_warehouse == \"India Bonded Warehouse - NCPL\"){\n\t\t              frm.add_child('items',{\n                \t\titem_code:v.item_code,\n                \t\tqty:v.balance_in_qty,\n                \t\ttransfer_qty:v.balance_in_qty,\n                \t\tserial_no:v.updated_serial_no,\n                \t\tbasic_rate:v.basic_rate,\n                \t\tbatch_no:v.batch,\n                \t\ts_warehouse:v.target_warehouse,\n                \t    basic_amount:v.basic_amount,\n                \t\tamount:v.amount,\n                \t\tbatch_no:v.batch,\n                \t\tadditional_cost : v.additional_cost,\n                \t\titemwise_additional_cost : v.itemwise_additional_cost,\n                \t\tuom : v.uom,\n                \t\tconversion_factor : 1\n                    \t})\n\t\t              }\n\t\t           \n\n\t\t            \n\t\t          //  else{\n\t\t          //  frm.add_child('items',{\n            // \t\titem_code:v.item_code,\n            // \t\tqty:v.bom_inbound_qty,\n            // \t\tserial_no:v.serial_no,\n            // \t\tbasic_rate:v.basic_rate\n            //     \t})\n\t\t                \n\t\t           \n\t\t          //  }\n\t\t            \n\t\t      //  })\n            \tfrm.refresh_field('items')\n            \t})\n        \n\t\t      //   $.each(r.message[0],function(i,v){\n        //         \tfrm.add_child('items',{\n        //         \t\titem_code:v.item_code,\n        //         \t\ts_warehouse:v.t_warehouse,\n        //         \t\tqty:v.qty,\n        //         \t\tserial_no:v.serial_no,\n        //         \t\tbasic_rate:v.basic_rate\n        //         \t})\n        //     \tfrm.refresh_field('items')\n        //     \t})\n            \t\n        //     \t $.each(r.message[1],function(i,v){\n        //         \tfrm.add_child('items',{\n        //         \t\titem_code:v.item_code,\n        //         \t\titem_name:v.item_name,\n        //         \t\tqty:v.qty,\n        //         \t\ts_warehouse:v.set_warehouse,\n        //         \t\tserial_no:v.serial_no\n        //         // \t\tuom:v.uom,\n        //         // \t\ts_warehouse:r.message[\"set_warehouse\"]\n        //         \t})\n        //     \tfrm.refresh_field('items')\n        //     \t})\n\t\t         \n\t\t\t    }\n\t\t\t    \n\t\t\t    \n\t\t         \n\t\t\n\t\t\t   \n\t\t\t}\n\t\t})\n//     frappe.call({\n//     \tmethod: \"frappe.client.get\",\n//     \targs: {\n//     \t\"doctype\" : \"Purchase Receipt\",\n//     \t\"fieldname\": \"items\",\n//     \t\"filters\" : {'bill_of_entry':frm.doc.bill_of_entry},\n//     \t},\n//     \tcallback(r){\n//     \t   frm.set_value(\"from_warehouse\",r.message[\"set_warehouse\"])\n//     \t frm.clear_table(\"items\")\n//     \t$.each(r.message['items'],function(i,v){\n//     \tfrm.add_child('items',{\n//     \t\titem_code:v.item_code,\n//     \t\tqty:v.qty,\n//     \t\tuom:v.uom,\n//     \t\ts_warehouse:r.message[\"set_warehouse\"]\n//     \t})\n//     \tfrm.refresh_field('items')\n//     \t})\n//     \t}\n// \t\t});\n\t\t\n// \t\tfrappe.call({\n//     \tmethod: \"frappe.client.get\",\n//     \targs: {\n//     \t\"doctype\" : \"Stock Entry\",\n//     \t\"fieldname\": \"items\",\n//     \t\"filters\" : {'bill_of_entry':frm.doc.bill_of_entry},\n//     \t},\n//     \tcallback(r){\n//     \t   //frm.set_value(\"from_warehouse\",r.message[\"set_warehouse\"])\n//     // \t frm.clear_table(\"items\")\n//     \t$.each(r.message['items'],function(i,v){\n//     \tfrm.add_child('items',{\n//     \t\titem_code:v.item_code,\n//     \t\tqty:v.qty,\n//     \t\tuom:v.uom,\n//     // \t\ts_warehouse:r.message[\"set_warehouse\"]\n//     \t})\n//     \tfrm.refresh_field('items')\n//     \t})\n//     \t}\n// \t\t});\n    }\n\t },\n\t from_warehouse(frm){\n\t     if(frm.doc.allocate == 1){\n\t         $.each(frm.doc.items,function(i,j){\n    \t         frappe.db.get_value('Bin', {warehouse:frm.doc.from_warehouse,item_code:j.item_code}, 'actual_qty')\n                .then(r => {\n                    j.stock_quantity = r.message.actual_qty\n                    if(j.qty > r.message.actual_qty){\n                        frappe.msgprint(\"Requested Stock Not Available for - \" +\"<b>\"+ j.item_code+\"</b>\" + \" in row #\" + j.idx)\n                        frappe.validated = false\n                    }\n                })\n    \t     })\n\t     }\n\t     \n\t },\n\t\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tset_series(frm) {\n\t    if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t //   console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    }\n\t},\n})\n\n\nfrappe.ui.form.on('Stock Entry Detail', {\n    custom_inspect(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n\t    if(child.custom_inspect_completed == 1){\n\t        frappe.msgprint(\"Item Inspection Already Created Against this Line Item: \" + child.item_code);\n\t    }\n\t    else{\n            var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n            ip = locals['Item Inspection'][ip];\n            ip.bill_of_entry = frm.doc.bill_of_entry\n            ip.stock_entry = frm.doc.name\n            ip.item_code = child.item_code\n            ip.company_name = frm.doc.company\n            ip.received_qty = child.qty\n            ip.warehouse = child.t_warehouse\n            ip.serial = child.serial_no\n            ip.row = child.name\n            ip.uom = child.stock_uom\n            ip.batch = child.batch_no\n            ip.serial_and_batch_bundle = child.serial_and_batch_bundle\n            frappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n\t    }\n    },\n\tgenerate(frm,cdt,cdn){\n\t    var child = locals[cdt][cdn]\n\t    var s_no_list = []\n\t    var srs = []\n\t    var no_list = []\n\t    var series_lst = []\n\t    var alpha_list = []\n\t    var alpha = child.alpha_series\n\t    var s_no = parseInt(child.starting_serial_no);\n\t    for(var i = 0; i < parseInt(child.qty); i++){\n\t       s_no_list.push(s_no)\n\t        alpha_list.push(alpha + s_no)\n\t       // console.log(alpha_list)\n\t        alpha = alpha\n\t        s_no = s_no + 1\n\t       // no_list = alpha.join(s_no)\n\n\t    }\n\t   //  alpha_ls = s_no_list.join(alpha)\n\t   if(child.alpha_numeric_serial_no){\n\t   // no_list = alpha_list.join(s_no_list)\n\t    \n\t    s_no_list = alpha_list.join(\"\\n\")\n\t   }\n\t   else{\n\t        s_no_list = s_no_list.join('\\n')\n\t   }\n\t    child.serial_no = s_no_list\n\t    refresh_field(\"items\");\n}\n})\n\nfrappe.ui.form.on('Landed Cost Taxes and Charges', {\n\tcompany_amount(frm,cdt,cdn) {\n\t    var row = locals[cdt][cdn]\n\t\tfrappe.call('norden.utils.update_company_currency', {\n    account_currency: row.account_currency,\n    company_currency: row.company_currency,\n}).then(r => {\n    var exc_rate = r.message\n    row.company_currency_exchange_rate = parseFloat(exc_rate)\n    row.amount = row.company_amount * exc_rate\n    frm.refresh_field(\"taxes\")\n})\n\n\t}\n\t\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2023-12-20 15:53:42.106208",
  "module": null,
  "name": "Payment Entry-Form",
  "script": "frappe.ui.form.on('Payment Entry', {\n    onload(frm){\n        frm.trigger(\"hide_amount\")\n    },\n    multi_currency(frm){\n        frm.trigger(\"hide_amount\")\n    },\n\thide_amount(frm){\n        if(frm.doc.multi_currency){\n            frm.set_df_property(\"paid_amount\", \"hidden\", 1)\n            frm.set_df_property(\"received_amount\", \"hidden\", 1)\n        }\n        else{\n            frm.set_df_property(\"paid_amount\", \"hidden\", 0)\n            frm.set_df_property(\"received_amount\", \"hidden\", 0)\n        }\n\t},\n     refresh(frm){\n       \n        frm.add_custom_button(__(\"Print\"), function () {\n        var f_name = frm.doc.name;\n        if(frm.doc.payment_type == 'Receive'){\n\t\t\tvar print_format = \"Receipt Voucher\"\n\t\t }\n\t\t \n\t\t else if(frm.doc.payment_type == 'Pay'){\n\t\t\tvar print_format = \"Payment Voucher\"\n\t\t }\n\t\t else {\n\t\t\tvar print_format = \"Bank and Cash Payment Voucher\"\n\t\t }\n         window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n            + \"doctype=\" + encodeURIComponent(\"Payment Entry\")\n            + \"&name=\" + encodeURIComponent(f_name)\n            + \"&trigger_print=1\"\n            + \"&format=\" + print_format\n            + \"&no_letterhead=0\"\n            + \"&letterhead=\" + encodeURIComponent\n        ));\n    });\n\t    \n\t    if(frm.doc.references){\n\t        $.each(frm.doc.references,function(i,d){\n\t            if(d.reference_doctype == \"Sales Invoice\"){\n    \t            frappe.db.get_value(d.reference_doctype, {\"name\": d.reference_name}, \"base_net_total\", (r) => {\n        \t\t\t     d.grand_total = r.base_net_total;\n    \t\t        });\n\t            }\n\t            \n\t\t        \n\t        })\n\t\tfrm.refresh_field(\"references\")\n\t    }\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\n\tcompany(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t},\n\tset_series(frm) {\n\t    console.log('hi')\n\t   // if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t   // }\n\t},\n\tcurrency(frm) {\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.update_company_currency_in_payments\",\n\t\t\targs: {\n\t\t\t\tselected_currency: frm.doc.currency,\n\t\t\t\taccount_currency: frm.doc.paid_from_account_currency\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t    var ex_rate = r.message\n\t\t\t\t    var rate = parseFloat(ex_rate)\n\t\t\t\t    frm.set_value(\"exchange_rate\",rate)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\ttotal_amount(frm){\n\t    if(frm.doc.multi_currency){\n    \t    var paid_amount = frm.doc.total_amount * frm.doc.exchange_rate\n    \t    frm.set_value(\"paid_amount\",paid_amount)\n    \t    frm.set_value(\"paid_amount_\",paid_amount)\n\t    }\n\t},\n\tvalidate(frm){\n\t    if(frm.doc.multi_currency){\n    \t    var paid_amount = frm.doc.total_amount * frm.doc.exchange_rate\n    \t    frm.set_value(\"paid_amount\",paid_amount)\n    \t    frm.set_value(\"paid_amount_\",paid_amount)\n\t    }\n\t},\n\treference_date(frm){\n\t    var referenceDate = frm.doc.reference_date;\n\t    var paymentType = frm.doc.payment_type;\n        var today = frappe.datetime.get_today();\n        var company=frm.doc.company;\n        var pdc_i = frm.doc.pdc_i;\n        var pdc_r = frm.doc.pdc_r;\n        if (company === 'Norden Communication Middle East FZE'){\n            if (referenceDate > today) {\n                if(paymentType ==\"Pay\"){\n                    frm.set_value('pdc_i', 1);\n                    frm.set_value('pdc_r',0);\n                    frm.set_value('paid_from', 'PDC-I - NCME');\n                    // frm.set_value('paid_to', ' Rakbank (The National Bank of Ras Al Khaimah) - NCME');\n                }\n              \n                else if(paymentType=='Receive'){\n                    frm.set_value('pdc_r',1);\n                    frm.set_value('pdc_i', 0); \n                    frm.set_value('paid_to', 'PDC-R - NCME');\n                    // frm.set_value('paid_from', 'Rakbank (The National Bank of Ras Al Khaimah) - NCME ');\n                }\n                else{\n                frm.set_value('pdc_r',0);\n                frm.set_value('pdc_i', 0);\n                // frm.set_value('paid_from', 'Trade Debtors - NCME');\n                // frm.set_value('paid_to', 'Rakbank (The National Bank of Ras Al Khaimah) - NCME');\n                }\n            }\n        \telse{\n        \t    frm.set_value('pdc_r',0);\n                frm.set_value('pdc_i', 0);\n                if (pdc_r === 0) {\n                    frm.set_value('paid_from', 'Rakbank (The National Bank of Ras Al Khaimah) - NCME');\n                    frm.set_value('paid_to', 'Trade Creditors - NCME');\n                } else if (pdc_i === 0) {\n                    frm.set_value('paid_to', 'Rakbank (The National Bank of Ras Al Khaimah) - NCME');\n                    frm.set_value('paid_from', 'Trade Debtors - NCME');\n                }\n        \t}\n        }\n\t\n},\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Request for Sample Item",
  "enabled": 1,
  "modified": "2023-11-29 14:42:31.870521",
  "module": null,
  "name": "Request for Sample Item-Form",
  "script": "frappe.ui.form.on('Request for Sample Item', {\n\trefresh(frm) {\n\t    frm.add_custom_button(__(\"Print\"), function () {\n            var f_name = frm.doc.name\n            var print_format =\"Request for Sample Item\";\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Request for Sample Item\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n            ));\n\t    });\n\t},\n\t\n\tcompany(frm){\n    \tif (frm.doc.company) {\n    \t    frappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\t\tcallback(r) {\n\t\t\t    console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t}\n\t},\n\t\n\tsetup: function (frm) {\n\t\t// \tif(frm.doc.add_sub){\n\t\tfrm.set_query(\"source_warehouse\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"company\": frm.doc.company\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tfrm.set_query(\"target_warehouse\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"company\": frm.doc.company\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\t\n\n\t\n\t \n\t     \n\t \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal",
  "enabled": 1,
  "modified": "2023-04-10 16:47:41.942625",
  "module": null,
  "name": "Appraisal-Form",
  "script": "frappe.ui.form.on('Appraisal', {\n\trefresh(frm) {\n}\n\t\n})\n\nfrappe.ui.form.on('Appraisal Goal', {\n\tactual_output: function (frm, cdt, cdn){\n    \t var row = locals[cdt][cdn];\n    \t var score_output = (row.actual_output / row.req_output ) * 5 \n    \t if(score_output > 5){\n    \t     row.score = 5\n    \t }\n    \t else{\n    \t     row.score = score_output\n    \t }\n\t frm.refresh_field('goals')\n\t    \n\tfrm.trigger(\"score_calculation\")\n\t},\n\tscore_calculation: function (frm, cdt, cdn) {\n\tvar row = locals[cdt][cdn];\n\trow.score = (row.req_output / row.actual_output) * 5\n// \t\t if (row.score > 5){\n// \t     row.score=5\n\t // }\n// \t\t console.log(\"row.score\")\n\t frm.refresh_field('goals')\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Logistics Request",
  "enabled": 1,
  "modified": "2023-11-28 11:49:59.395114",
  "module": null,
  "name": "Logistics Request-Form",
  "script": "frappe.ui.form.on('Logistics Request', {\n    refresh(frm){\n        if (frm.doc.company == \"Norden Communication Pvt Ltd\" || frm.doc.company == \"Norden research and Innovation Centre  Pvt. Ltd\") {\n\t\t\tfrm.set_df_property('custom_duty', 'hidden', 0);\n\t\t}\n\t\telse{\n\t\t    frm.set_df_property('custom_duty', 'hidden', 1);\n\t\t}\n    },\n \n\t\n\tvalidate(frm){\n    if(frm.doc.grand_total){\n\tfrappe.call({\n\t\tmethod: \"norden.utils.currency_conversion_lg\",\n\t\targs: {\n\t\t\t'gt': frm.doc.grand_total,\n\t\t\t\"cr\":frm.doc.currency\n\t\t},\n\t\tcallback(r) {\n\t\t\tif(r.message) {\n\t\t\t    console.log(r.message)\n\t\t\t    frm.set_value(\"custom_duty\",r.message * 0.45)\n\t\t\t}\n\t\t}\n\t})\n\t}\n\t},\n\t\n\tonload(frm) {\n\t     if(frm.doc.po_so == \"Sales Order\"){\n            frm.clear_table(\"product_description\")\n            frm.refresh_field('product_description')\n        }\n        \n        if(frm.doc.po_so == \"Purchase Order\"){\n            frm.clear_table(\"product_description_so\")\n            frm.refresh_field('product_description_so')\n        }\n        \n\t    window.onload = function() {\n  workflowState.update()\n    .then(() => {\n      location.reload();\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n}\n// \t    if(frm.doc.workflow_state == \"Logistics OPS\"){\n// \t\t    console.log(\"Yes\")\n// \t\t  frm.refresh();\n// \t\t}\n\t    if (frm.doc.company) {\n\t\tfrm.trigger(\"set_series\")\n\t    }\n\t\t\n\tif(frm.doc.order_no && frm.doc.po_so == \"Purchase Order\"){\n        frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Purchase Order\",\n\t\t\t\tfieldname:[\"currency\",\"conversion_rate\",\"buying_price_list\",\"price_list_currency\",\"plc_conversion_rate\"],\n\t\t\t\tfilters: {name:frm.doc.order_no}\n\t\t\t}\n\t\t}).then((r) => {\n\t\t\tif(r.message) {\n\t\t\tfrm.set_value(\"currency\",r.message.currency)\n\t\t\tfrm.set_value(\"conversion_rate\",r.message.conversion_rate)\n\t\t\tfrm.set_value(\"buying_price_list\",r.message.buying_price_list)\n\t\t\tfrm.set_value(\"price_list_currency\",r.message.price_list_currency)\n\t\t\tfrm.set_value(\"plc_conversion_rate\",r.message.plc_conversion_rate)\n\t\t\t}\n\t\t});\n\t}\n\t\n\tif(frm.doc.order_no && frm.doc.po_so == \"Sales Order\"){\n        frappe.call({\n\t\t\tmethod: \"frappe.client.get\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Sales Order\",\n\t\t\t\tfieldname:[\"currency\",\"conversion_rate\",\"selling_price_list\",\"price_list_currency\",\"plc_conversion_rate\"],\n\t\t\t\tfilters: {name:frm.doc.order_no}\n\t\t\t}\n\t\t}).then((r) => {\n\t\t\tif(r.message) {\n\t\t\tfrm.set_value(\"currency\",r.message.currency)\n\t\t\tfrm.set_value(\"conversion_rate\",r.message.conversion_rate)\n\t\t\tfrm.set_value(\"buying_price_list\",r.message.selling_price_list)\n\t\t\tfrm.set_value(\"price_list_currency\",r.message.price_list_currency)\n\t\t\tfrm.set_value(\"plc_conversion_rate\",r.message.plc_conversion_rate)\n\t\t\t}\n\t\t});\n\t}\n\t\n\t\n\t\n\t\n\t},\n\t\n\tset_series(frm) {\n\t\tif (frm.doc.__islocal) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\t\targs: {\n\t\t\t\t\tcompany: frm.doc.company,\n\t\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t\t},\n\t\t\t\tcallback(r) {\n\t\t\t\t\tif (r) {\n\t\t\t\t\t\tfrm.set_value('naming_series',r.message)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n\t\n\t\n// \tonload(frm){\n// \t    frappe.call({\n// \t\t\tmethod: \"norden.custom.fetch_file_number\",\n// \t\t\targs: {\n// \t\t\t\torder_no: frm.doc.order_no,\n// \t\t\t},\n// \t\t\tcallback(r) {\n// \t\t\t\tif (r.message) {\n// \t\t\t\t\tfrm.set_value('file_number', r.message)\n// \t\t\t\t}\n// \t\t\t}\n// \t\t})\n\t    \n// \t},\n\t\n\t\n\n})\n\nfrappe.ui.form.on('Purchase Order Item', {\n    \n    inspect(frm,cdt,cdn){\n\t    var child = locals [cdt][cdn]\n        var ip = frappe.model.make_new_doc_and_get_name('Item Inspection');\n        ip = locals['Item Inspection'][ip];\n        ip.po_number = frm.doc.order_no\n        ip.pr_number = frm.doc.name\n        ip.item_code = child.item_code\n        ip.logistics_request_number = frm.doc.name\n        // lg.logistic_type = \"Import\"\n        // lg.po_so = \"Purchase Order\"\n        // frappe.set_route(\"Form\",\"Logistics Request\",lg.name)\n        \tfrappe.set_route(\"Form\", \"Item Inspection\",ip.name)\n    }\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expense Claim",
  "enabled": 1,
  "modified": "2023-11-29 19:30:29.580636",
  "module": null,
  "name": "Expense Claim-Form",
  "script": "frappe.ui.form.on('Expense Claim', {\n\trefresh(frm) {\n\t   \n\t\tfrm.add_custom_button(__(\"Print Preview\"), function () {\n    \t\t\tvar f_name = frm.doc.name\n    \t\t\tvar print_format = \"Travel Claim\";\n    \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n    \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Expense Claim\")\n    \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n    \t\t\t\t+ \"&trigger_print=1\"\n    \t\t\t\t+ \"&format=\" + print_format\n    \t\t\t\t+ \"&no_letterhead=0\"\n    \t\t\t));\n\t    });\n\t    \n\t    \n\t    \n\t   },\n\t\n    validate(frm){\n        \n        if(frm.doc.total_sanctioned_amount){\n            frm.set_value(\"custom_sanctioned_amount\",frm.doc.total_sanctioned_amount)\n        }\n        if(frm.doc.round_total= 1) {\n         var str = frm.doc.custom_sanctioned_amount;\n         var num = parseFloat(str);\n         var str = num.toFixed(0);\n         console.log(str); \n         frm.set_value(\"custom_sanctioned_amount\",str)\n        }\n  \n\t    var amt = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Travel'){\n\t            amt = amt +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"travel_amount\",amt)\n\t\tvar toll = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Toll / Parking'){\n\t            toll = toll +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"toll\",toll)\n\t\tvar dear = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Dearness'){\n\t            dear = dear +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"dearness\",dear)\n\t\tvar acc = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'Accommodation'){\n\t            acc = acc +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"accommodation\",acc)\n\t\tvar rt = 0\n\t    $.each(frm.doc.expenses, function (i, v) {\n\t        if(v.type == 'RTPCR'){\n\t            rt = rt +v.amount\n\t        }\n\t\t});\n\t\tfrm.set_value(\"rtpcr\",rt)\n\t\tif(!frm.doc.__islocal){\n\t\t    if(frm.doc.grand_total == 0){\n    \t\t    frappe.throw(\"Grand total should be greater than 0\")\n    \t\t}\n\t\t}\n\t\n\t\t\n\t\t\n\t},\n\temployee(frm){\n\t    frm.set_value('admin_email_id','aiswarya@nordencommunication.com')\n\t    frm.set_value('hrm_email_id','kareem@nordencommunication.com')\n\t    frm.set_value('cfo_email_id','vijay@nordencommunication.com')\n\t    \n\t    if(frm.doc.company == 'Norden Singapore PTE LTD' || frm.doc.company == 'Norden Communication UK Limited'){\n\t    frm.set_value('finance_verifier_email_id_1','lakshmi.devi@norden.co.uk')\n\t    frm.set_value('accounts_email_id','lakshmi.devi@norden.co.uk')\n\t    }\n\t    else{\n\t        if (frm.doc.company == \"Norden Communication Pvt Ltd\"){\n\t            frm.set_value('finance_verifier_email_id_1','salini@nordencommunication.com')\n\t            frm.set_value('accounts_email_id','topson@nordencommunication.com')\n\t        }\n\t        else if(frm.doc.company == 'Norden research and Innovation Centre  Pvt. Ltd'){\n\t            frm.set_value('finance_verifier_email_id_1','nithin@nordencommunication.com')\n\t            frm.set_value('accounts_email_id','topson@nordencommunication.com')\n\t        }\n\t    }\n\t    \n\t    if (frm.doc.company == 'Norden Singapore PTE LTD') {\n            frm.fields_dict['expenses'].grid.toggle_enable('type',false);\n        }\n        \n        if (frm.doc.company != 'Norden Singapore PTE LTD') {\n            frm.fields_dict['expenses'].grid.toggle_enable('custom_sea_type',false);\n        }\n        \n\n        \n\n\t    \n\t   },\n\ttravel_request(frm){\n\t   frappe.call({\n            method: \"norden.custom.get_itinerary\",\n            args: {\n            \"travel_request\": frm.doc.travel_request,\n            },\n            callback(r) {\n                console.log(r.message)\n                frm.clear_table('expenses')\n                $.each(r.message, function (index, v) {\n                    frm.add_child('expenses',{\n                        'mot':v.mode_of_travel,\n                        'frloc':v.travel_from,\n                        'toloc':v.travel_to,\n                        'expense_date':v.departure_date,\n                    })\n                    \n                  \n                    \n                })\n                frm.refresh_field('expenses')\n            }\n        });\n\t},\n\t\n\t\n    company(frm){\n\t   if(frm.doc.company){\n\t       var emp_basic = frappe.db.get_value('Company', frm.doc.company, 'default_payable_account')\n\t       .then(r => {\n\t           console.log(r.message.default_payable_account)\n\t           frm.set_value('payable_account',r.message.default_payable_account)\n})\n\t   }\n\t   \n\t    \n},\n\n    cfo_email_id(frm){\n        if(frm.doc.workflow_state == \"Approved\"){\n            frm.set_value(\"cfos_mail_id\",1)\n    }\n    }\n\n});\n\nfrappe.ui.form.on('Expense Claim Detail', {\n    to_om(frm,cdt,cdn){\n        var row = locals[cdt][cdn]\n        row.expense_type = row.type\n        if(row.expense_type == 'Travel'){\n          if(row.mot == 'Own Car'){\n              if(row.fr_om && row.to_om){\n                  var km = row.to_om - row.fr_om\n                  row.km = km\n                  var amt = row.km * 14\n                  row.amount = amt\n                  row.amounts = row.amount\n                row.sanctioned_amount = row.amounts\n                  \n                  \n                  \n              }\n            }\n             else{\n                var kr = row.to_om - row.fr_om\n                row.km = kr\n                var amnt = row.km * 8\n                row.amount = amnt\n                row.amounts = row.amount\n\t    row.sanctioned_amount = row.amounts\n        }\n        frm.refresh_field(\"expenses\")\n        } \n       \n    },    \n    type(frm,cdt,cdn) {\n\t\tvar row = locals[cdt][cdn]\n\t\t row.expense_type = row.type\n\t\t frm.refresh_field(\"expenses\")\n\t},\n\t\n\tcustom_sea_type(frm,cdt,cdn) {\n\t\tvar row = locals[cdt][cdn]\n\t\t row.expense_type = row.custom_sea_type\n\t\t frm.refresh_field(\"expenses\")\n\t},\n\t\n    amounts(frm,cdt,cdn){\n\t    var row = locals[cdt][cdn]\n\t    row.amount = row.amounts\n\t    row.sanctioned_amount = row.amounts\n\t    frm.refresh_field(\"expenses\")\n\t},\n\t\n\tsanctioned(frm,cdt,cdn){\n        var child = locals[cdt][cdn];\n        var total_years = 0;\n        $.each(frm.doc.previous_employment_history,function(i,d){\n            if(d.experienceyears){\n                total_years += d.experienceyears;\n                frm.set_value(\"total_years\",total_years);\n            }\n        });\n        frm.refresh_field('previous_employment_history');\n    }\n\n\n})\n    \n  \n\n\n    \n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Pick List",
  "enabled": 1,
  "modified": "2023-12-29 12:01:18.918802",
  "module": null,
  "name": "Pick List-Form",
  "script": "frappe.ui.form.on('Pick List', {\n    refresh(frm){\n      if (frm.doc.company) {\n\t\tfrm.trigger(\"set_series\")\n\t}  \n    },\n    company(frm) {\n\t\tif (frm.doc.company) {\n\t\t\tfrm.trigger(\"set_series\")\n\t\t}\n\t\t\n\t},\n\tonload(frm){\n\t    var amt = 0\n\t    $.each(frm.doc.locations, function (i, d) {\n\t        amt = amt + d.amount\n    })\n        frm.set_value('rounded_total',amt)\n        \n        // console.log(numberToWords.toWords(amt))\n\t},\n\t set_series(frm) {\n        if(frm.doc.__islocal){\n\t\tfrappe.call({\n\t\t\tmethod: \"norden.utils.get_series\",\n\t\t\targs: {\n\t\t\t\tcompany: frm.doc.company,\n\t\t\t\tdoctype: frm.doc.doctype\n\t\t\t},\n\t\tcallback(r) {\n\t\t\t //   console.log(r)\n\t\t\t\tif (r) {\n\t\t\t\t\tfrm.set_value('naming_series', r.message)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n        }\n\t},\n// \tcustom_skip_qc(frm){\n//         if(frm.doc.custom_skip_qc){\n//           $.each(frm.doc.locations, function (i, d) {\n//                 d.custom_skip_qc = 1\n//             })\n//         }\n//         else{\n//             $.each(frm.doc.locations, function (i, d) {\n//                 d.custom_skip_qc = 0\n//             })\n//         }\n// \t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Travel Request",
  "enabled": 1,
  "modified": "2023-11-28 11:49:12.453434",
  "module": null,
  "name": "Travel Request-Form",
  "script": "frappe.ui.form.on('Travel Request', {\n    refresh(frm){\n        if(frm.doc.employee == \"2-01-101\"){\n\t\t    frm.set_value('coo','mnharis77@hotmail.com')\n\t\t}\n\t\tfrm.add_custom_button(__(\"Print Preview\"), function () {\n    \t\t\tvar f_name = frm.doc.name\n    \t\t\tvar print_format = \"Travel Request\";\n    \t\t\twindow.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n    \t\t\t\t+ \"doctype=\" + encodeURIComponent(\"Travel Request\")\n    \t\t\t\t+ \"&name=\" + encodeURIComponent(f_name)\n    \t\t\t\t+ \"&trigger_print=1\"\n    \t\t\t\t+ \"&format=\" + print_format\n    \t\t\t\t+ \"&no_letterhead=0\"\n    \t\t\t));\n\t    }); \n\t    \n\t     if(frm.doc.docstatus ==1 ){\n\t    frm.add_custom_button(__('Create Expense Claim'), function() {\n\t\tfrappe.route_options = {'travel_request':frm.doc.name}\n            frappe.set_route('Form','Expense Claim','new-expense-claim-1')\n        })\n\t    }\n\t    \n\t     if(frm.doc.docstatus ==1 ){\n\t    frm.add_custom_button(__('Create Employee Advance'), function() {\n\t\tfrappe.route_options = {'travel_request':frm.doc.name}\n            frappe.set_route('Form','Employee Advance','new-employee-advance-1')\n        })\n\t    }\n    },\n    reports_to(frm){\n        \n        \n        frappe.call({\n            'method':'norden.utils.get_user_id_travel_request',\n            'args':{\n                'reports_to':frm.doc.reports_to\n            },\n            callback(r){\n                frm.set_value('reporting_employee_name',r.message[0])\n\t\t\t\tfrm.set_value('reporting_user_id',r.message[1])\n\t\t\t\t\n            }\n        })\n    },\n    onload(frm){\n        frm.set_value('reporting_person_1','1-01-140')\n    },\n  \temployee(frm) {\n  \t   if(frm.doc.company == 'Norden Communication Pvt Ltd' || frm.doc.company == 'Norden research and Innovation Centre  Pvt. Ltd'){\n\t\t    frm.set_value('coo','shabil@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msg('Please Enter the Employee ID')\n\t\t}\n\t\tif(frm.doc.company == 'Norden Singapore PTE LTD' || frm.doc.company == 'Norden Communication UK Limited'){\n\t    frm.set_value('coo','anthony.koo@norden.com.sg')\n\t    \n\t    }\n\t\t\n\t},\n\t\n\tvisa_is_required(frm){\n\t    if(frm.doc.visa_is_required == \"Yes\"){\n\t    frappe.confirm(\"Please submit all required documents to HR & Admin for the Visa Process and kindly note It may required more time than expected.\")\n\t}\n\t}\n   })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 1,
  "modified": "2023-08-28 12:47:35.431321",
  "module": null,
  "name": "Salary Slip-Form",
  "script": "frappe.ui.form.on('Salary Slip', {\n\trefresh(frm) {\n\t   if(!frm.doc.__islocal){\n\t     if (frm.doc.company == \"Norden Communication Middle East FZE\") {\n                 frm.add_custom_button(__(\"Print Slip\"), function () {\n                \n                var print_format = \"Pay Slip UAE\"\n                 \n                var f_name = frm.doc.name\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Salary Slip\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n\t\n\t\n\n\n            ));\n                 });\n// \t});    \n            }\n              else {\n                  frm.add_custom_button(__(\"Print Slip\"), function () {\n               \n                var print_format = \"Pay Slip\"\n                 \n                var f_name = frm.doc.name\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Salary Slip\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n\t\n\t\n\n\n            ));\n                  });\n                \n            }\n            // if (!frm.doc.job_offer_type == \"ESS Trainee\" || \"EMS Trainee\") {\n            //     var print_format = \"Lateral Offer\"\n            // }\n           \n\t    }\n\t    \n\n\t\n},\n\t\n    onload(frm) {\n        // Fetch the base value from the Salary Structure Assignment\n        frappe.call({\n            method: \"norden.utils.get_salary_structure_assignment_base\",\n            args: {\n                \n                'employee': frm.doc.employee,\n                'docstatus': 1\n            },\n            callback: function(r) {\n                if (r.message) {\n                    console.log(r.message)\n                    var base = r.message;\n\n                    // Calculate Loss of Pay\n                    var total_working_days = frm.doc.total_working_days;\n                    var payment_days = frm.doc.payment_days;\n                    var loss_of_pay = (base / total_working_days) * (total_working_days - payment_days);\n\n                    // Set the calculated Loss of Pay value\n                    frm.set_value(\"loss_of_pay\", loss_of_pay);\n                }\n            }\n        });\n    }\n   \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2023-12-29 13:50:45.424516",
  "module": null,
  "name": "Leave Application-Form",
  "script": "frappe.ui.form.on('Leave Application', {\n    refresh(frm){if (frm.doc.leave_type == \"Annual Leave\"){\n                if (frm.doc.workflow_state == 'Approved') {\n                    frm.add_custom_button(__(\"Leave Salary\"), function () {\n                    frappe.db.get_value('Leave Salary', { 'employee_number': frm.doc.employee }, 'name')\n        \t\t\t.then(r => {\n        \t\t\t\tif (r.message && Object.entries(r.message).length === 0) {\n        \t\t\t\t\tfrappe.route_options = { 'employee_number': frm.doc.employee, 'leave_application': frm.doc.name,'type_of_request':\"Annual Leave\"};\n        \t\t\t\t\tfrappe.set_route('Form', 'Leave Salary', 'new');\n        \t\t\t\t}\n        \t\t\t\telse {\n        \t\t\t\t\tfrappe.set_route('Form', 'Leave Salary', r.message.name);\n        \t\t\t\t}\n        \t\t\t});\n                    });\n                    \n                }\n            }\n            \n        \n    },\n    \n    employee(frm) {\n\t\tif (frm.doc.employee){\n\t\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msgprint('Please Enter the Employee ID')\n\t\t}\n\t\tif (frm.doc.company == 'Norden Communication Middle East FZE'){\n\t\t    frm.set_value('custom_gm_id','faisal@nordenco.ae')\n\t\t}\n\t\n\t\t\n\t},\n\trefresh(frm){\n\t    if(frm.doc.workflow_state == 'Pending for HOD'){\n\t       \n\t}\n\t},\n\t\n\tvalidate(frm) {\n\t if(frm.doc.workflow_state == 'Preview'){\n\t    frappe.show_alert('Please Click on Action Button to Send to HOD',20)\n\t     \n\t }\n    if (frm.doc.workflow_state == \"Preview\" && frm.doc.company == 'Norden Communication Middle East FZE') {\n        if (frm.doc.custom_leave_approver_id == '') {\n            frm.set_value(\"custom_update_id\", 1);\n        } else {\n            frm.set_value(\"custom_update_id\", 0);\n        }\n    }\n\n\t     \n\t     \n\t   // if (frm.doc.total_leave_days && (frm.doc.company === 'Norden research and Innovation Centre  Pvt. Ltd' || frm.doc.company === 'Norden Communication Pvt Ltd')) {\n\t   //     frappe.call({\n    //         method: 'norden.custom.check_leave',\n    //         args: {\n    //             fd: frm.doc.from_date,\n    //             emp:frm.doc.employee\n    //         },\n    //         callback(r) {\n                \n    //             if (r.message == 2 && frm.doc.total_leave_days >= 1) {\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n    //             if (r.message == 1 && frm.doc.total_leave_days >= 2){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n                \n    //             if (r.message == 0 && frm.doc.total_leave_days > 2){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n                \n    //         }\n    //     });\n\t         \n\t         \n\t         \n\t   //  }\n\t     }\n\t\n\t\n\t     \n\t     \n    \n\t    \n});\n\t    \n\t",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance Request",
  "enabled": 1,
  "modified": "2022-10-13 11:02:30.158928",
  "module": null,
  "name": "Attendance Request-Form",
  "script": "frappe.ui.form.on('Attendance Request', {\n\temployee(frm) {\n\t\tif (frm.doc.employee){\n\t\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t\t}\n\t\telse{\n\t\t    frappe.msg('Please Enter the Employee ID')\n\t\t}\n\t},\n// \trefresh(frm){\n// \t    if(frm.doc.workflow_state == 'Pending for HOD'){\n// \t        console.log('hi')\n// \t    }\n// \t}    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Approvals",
  "enabled": 1,
  "modified": "2022-10-15 13:13:47.108878",
  "module": null,
  "name": "Approvals-Form",
  "script": "frappe.ui.form.on('Approvals', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"project\", function() {\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t['Project', 'customer', '=',frm.doc.customer],\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t},\n\t\n\tattach(frm){\n\t\tif(frm.doc.attach){\n\t\t\tfrm.call('get_data').then(r=>{\n\t\t\t\tif (r.message ) {\n\t\t\t\t\tfrm.fields_dict.html.$wrapper.empty().append(r.message)\n\t\t\t\t}\n\n\t\t\t})\t\n\n\t\t}\n\t\telse{\n\t\t    frm.fields_dict.html.$wrapper.empty().append('')\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Work From Home Request",
  "enabled": 1,
  "modified": "2023-12-08 12:31:26.654353",
  "module": null,
  "name": "Work From Home Request-Form",
  "script": "frappe.ui.form.on('Work From Home Request', {\n    \n    employee(frm){\n\t    frm.set_value('hr_email_id','hrd@nordencommunication.com')\n\t   // var user_id = frappe.db.get_value('Employee',{'name':frm.doc.employee},['user_id'])\n\t   // frm.set_value('employee_user_id',user_id)\n\t}\n\t\n\t \n    //  validate(frm) {\n    // \t// List of valid department names\n\t   // const TechnicalDept = ['Pre-sales  - NCPL','Pre-sales - NRIC',\n\t   // 'Product - NRIC','Product - NCPL',\n\t   // 'IT - NRIC', 'IT - NCPL',\n\t   // 'Quality - NRIC','Quality - NCPL'];\n\t   \n\t   // // Check if frm.doc.department is in the validDepartments array\n    //     if (frm.doc.total_working_days && TechnicalDept.includes(frm.doc.department)) {\n            \n    //         frappe.call({\n    //         method: 'norden.custom.check_wfh_tech',\n    //         args: {\n    //             fd: frm.doc.work_from_date,\n    //             emp:frm.doc.employee\n    //         },\n    //         callback(r) {\n                \n    //             if (r.message == 2 && frm.doc.total_working_days >= 1) {\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n    //             if (r.message == 1 && frm.doc.total_working_days >= 2){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n    //             console.log(r.message)\n    //             if (r.message == 0 && frm.doc.total_working_days > 2){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n                \n    //         }\n    //     });\n            \n\t    \n\t   //}\n\t    \n\t   // // List of valid department names\n\t   // const NonTechnicalDept = ['Sales - NRIC','Sales - NCPL',\n\t   // 'Marcom - NRIC','Marcom - NCPL',\n\t   // 'Accounts & Finance - NRIC','Accounts & Finance - NCPL',\n\t   // 'Warehouse - NCPL',\n\t   // 'HR & Admin - NRIC', 'HR & Admin - NCPL',\n\t   // 'Sales operations - NRIC', 'Sales Operations - NCPL',\n\t   // 'Operations & Development - NRIC','Operations & Development - NCPL',\n\t   // 'Purchase - NRIC', 'Purchase - NCPL',\n\t   // 'Logistics - NCPL','Lead Management - NRIC'];\n\t    \n\t   // // Check if frm.doc.department is in the validDepartments array\n\t   // if (frm.doc.total_working_days && NonTechnicalDept.includes(frm.doc.department)) {\n\t        \n\t   //      frappe.call({\n    //         method: 'norden.custom.check_wfh_non_tech',\n    //         args: {\n    //             fd: frm.doc.work_from_date,\n    //             emp:frm.doc.employee\n    //         },\n    //         callback(r) {\n                \n    //             if (r.message == 1 && frm.doc.total_working_days >= 1){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n               \n    //             if (r.message == 0 && frm.doc.total_working_days >1){\n    //                 frm.set_value(\"check_update\",1)\n    //             }\n                \n    //         }\n    //     });\n\t        \n        \n\t   // }\n        \n    // },\n    \n    // work_to_date(frm){\n    //   const workFromDate = frm.doc.work_from_date;\n    //   const workToDate = frm.doc.work_to_date;\n\n    // if (workFromDate && workToDate) {\n    //     const oneDay = 24 * 60 * 60 * 1000; // One day in milliseconds\n    //     const startDate = new Date(workFromDate);\n    //     const endDate = new Date(workToDate);\n\n    //     // Calculate the difference in days\n    //     const totalDays = Math.round(Math.abs((startDate - endDate) / oneDay)) + 1;\n\n    //     // Set the calculated total working days in the \"Total Working Days\" field\n    //     frm.set_value('total_working_days', totalDays);\n    // }\n    // }\n    \n    \n    \n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expense Claim",
  "enabled": 1,
  "modified": "2022-12-29 17:32:27.057553",
  "module": null,
  "name": "Expense Claim - List",
  "script": "frappe.listview_settings['Expense Claim'] = {\n\tadd_fields: [\"total_claimed_amount\", \"docstatus\", \"company\"],\n\tget_indicator: function(doc) {\n\t    \n\t\t\n\t\tif(doc.status == \"Paid\") {\n\t\t\treturn [__(\"Paid\"), \"green\", \"status,=,Paid\"];\n\t\t}else if(doc.status == \"Unpaid\") {\n\t\t\treturn [__(\"Unpaid\"), \"orange\", \"status,=,Unpaid\"];\n\t\t} else if(doc.status == \"Rejected\") {\n\t\t\treturn [__(\"Rejected\"), \"grey\", \"status,=,Rejected\"];\n\t\t}\n\t}\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Product Search",
  "enabled": 1,
  "modified": "2023-02-06 17:07:04.417891",
  "module": null,
  "name": "Product Search",
  "script": "frappe.ui.form.on('Product Search', {\n\trefresh(frm) {\n\t\tfrm.disable_save()\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bank Clearance",
  "enabled": 1,
  "modified": "2023-02-07 16:00:31.634576",
  "module": null,
  "name": "Bank Clearance",
  "script": "frappe.ui.form.on('Bank Clearance', {\n\taccount(frm) {\n\t\tfrm.trigger(\"gpe\")\n\t},\n\tfrom_date(frm) {\n\t\tfrm.trigger(\"gpe\")\n\t},\n\tto_date(frm) {\n\t\tfrm.trigger(\"gpe\")\n\t},\n\t\n\tgpe(frm){\n\t    frm.add_custom_button(__('Get Payment Entries'), () =>\n\t\t\t\tfrm.trigger(\"get_payment_entries\")\n\t\t\t);\n\n\t\t\tfrm.change_custom_button_type('Get Payment Entries', null, 'primary');\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Transfer India",
  "enabled": 1,
  "modified": "2023-02-15 17:16:24.739218",
  "module": "Norden",
  "name": "Stock Transfer India",
  "script": "frappe.ui.form.on('Stock Transfer India', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\tvaldiate(frm){\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "MRB",
  "enabled": 1,
  "modified": "2023-12-08 15:30:58.098142",
  "module": null,
  "name": "MRB",
  "script": "frappe.ui.form.on('MRB', {\n\trefresh(frm) {\n\t\t\n\t},\n\t\n\tonload(frm){\n\t    frm.set_query(\"rework_warehouse\", function () {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"company\": frm.doc.company\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t    if(frm.doc.item_code){\n\t        frappe.db.get_value('Item',frm.doc.item_code,'item_template')\n            .then(r => {\n                if(r.message.item_template){\n                     var value = r.message.item_template\n                    frm.set_value('download_report',value);\n                }\n                else{\n                    frm.set_df_property('download_report', 'hidden', 1);\n                }\n            })\n\t    }\n\t},\n// \trework(frm){\n// \t    if(frm.doc.rework > 0){\n//             frappe.call({\n//                 method:\"norden.custom.get_rework_warehouse\",\n//                 args:{\n//                     company:frm.doc.company,\n//                 },\n//                 callback(r){\n//                     if(r.message){\n//                         frm.set_value('rework_warehouse',r.message);\n//                     }\n//                 }\n//             })\n// \t    }\n        \n// \t},\n\treturn_to_vendor(frm){\n\t    if(frm.doc.return_to_vendor > 0){\n            frappe.call({\n                method:\"norden.custom.get_rtv_warehouse\",\n                args:{\n                    company:frm.doc.company,\n                },\n                callback(r){\n                    if(r.message){\n                        frm.set_value('return_to_vendor_warehouse',r.message);\n                    }\n                }\n            })\n\t    }\n\t},\n\tuse_as_is(frm){\n\t    if(frm.doc.scrap && frm.doc.rework){\n\t        frm.trigger('calculate')\n\t    }\n\t},\n\trework(frm){\n\t    if(frm.doc.scrap && frm.doc.use_as_is){\n\t        frm.trigger('calculate')\n\t    }\n\t},\n\tscrap(frm){\n\t    if(frm.doc.rework && frm.doc.use_as_is){\n\t        frm.trigger('calculate')\n\t    }\n\t},\n\t\n\tcalculate:function(frm){\n\t    if(frm.doc.qty){\n            var value1 = frm.doc.qty\n            var value2 = frm.doc.use_as_is\n            var value3 = frm.doc.rework\n            var value4 = frm.doc.scrap\n            var rtv = value1 - (value2 + value4 + value3)\n            frm.set_value(\"return_to_vendor\",rtv)\n        }\n\t},\n\t    \n\t\n\treturn_to_vendor(frm){\n\t    if(frm.doc.qty && frm.doc.use_as_is && frm.doc.scrap){\n\t        var value1 = frm.doc.qty\n            var value2 = frm.doc.use_as_is\n            var value3 = frm.doc.scrap\n            var value4 = frm.doc.return_to_vendor\n            var reject = value1 - (value2 + value3 + value4)\n            frm.set_value(\"rework\",reject)\n\t    }\n\t   // if(frm.doc.qty && frm.doc.use_as_is && frm.doc.scrap && frm.doc.return_to_vendor && dem.doc.rework){\n\t   //     var value1 = frm.doc.qty\n    //         var value2 = frm.doc.use_as_is\n    //         var value3 = frm.doc.scrap\n    //         var value4 = frm.doc.rework\n    //         var value5 = frm.doc.return_to_vendor\n    //         var val = value2 + value3 + value4 + value5\n    //         if (val > value1){\n    //             frappe.msgprint(\"Rejected Qty Must Be Equal To MRB Action Qty\")\n    //             frappe.validated = false\n    //         }\n\t   // }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Manpower Request",
  "enabled": 1,
  "modified": "2023-07-20 20:14:28.410780",
  "module": null,
  "name": "Staffing Plan",
  "script": "frappe.ui.form.on('Staffing Plan', {\n\tonload(frm) {\n\t\tif(frm.doc.workflow_state == 'Draft'){\n\t\t    frm.set_df_property('approved_by_hod', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by_cfo', 'hidden', 1);\n\t\t    frm.set_df_property('date_of_approval1', 'hidden', 1);\n\t\t    frm.set_df_property('remarks__if_any3', 'hidden', 1);\n\t\t    frm.set_df_property('for_hr_use_only', 'hidden', 1);\n\t\t    frm.set_df_property('remarks_', 'hidden', 1);\n\t\t    frm.set_df_property('by_hr_department', 'hidden', 1);\n\t\t    frm.set_df_property('remarks__if_any4', 'hidden', 1);\n\t\t    frm.set_df_property('date_of_close', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by_hr', 'hidden', 1);\n\t\t    frm.set_df_property('closed_by', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by', 'hidden', 1)\n\t\t    frm.set_df_property('request_received_on','hidden',1)\n\t\t};\n\t\tif(frm.doc.workflow_state == 'Pending for HOD'){\n\t\t    frm.set_df_property('approved_by_hod', 'hidden', 0);\n\t\t  //  frm.set_value('approved_by_hod', frappe.session.user);\n\t\t    frm.set_df_property('date_of_approval', 'hidden', 0);\n\t\t    frm.set_df_property('remarks__if_any2', 'hidden', 0);\n\t\t    frm.set_df_property('approved_by_cfo', 'hidden', 1);\n\t\t    frm.set_df_property('date_of_approval1', 'hidden', 1);\n\t\t    frm.set_df_property('remarks__if_any3', 'hidden', 1);\n\t\t    frm.set_df_property('for_hr_use_only', 'hidden', 1);\n\t\t    frm.set_df_property('remarks_', 'hidden', 1);\n\t\t    frm.set_df_property('by_hr_department', 'hidden', 1);\n\t\t    frm.set_df_property('remarks__if_any4', 'hidden', 1);\n\t\t    frm.set_df_property('date_of_close', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by_hr', 'hidden', 1);\n\t\t    frm.set_df_property('closed_by', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by', 'hidden', 1)\n\t\t    frm.set_df_property('request_received_on','hidden',1)\n\t\t};\n\t\tif(frm.doc.workflow_state == 'Pending for CFO'){\n\t\t    frm.set_df_property('approved_by_cfo', 'hidden', 0);\n\t\t  //  frm.set_value('approved_by_cfo', frappe.session.user);\n\t\t    frm.set_df_property('date_of_approval1', 'hidden', 0);\n\t\t    frm.set_df_property('remarks__if_any3', 'hidden', 0);\n\t\t    frm.set_df_property('for_hr_use_only', 'hidden', 1);\n\t\t    frm.set_df_property('remarks_', 'hidden', 1);\n\t\t    frm.set_df_property('by_hr_department', 'hidden', 1);\n\t\t    frm.set_df_property('remarks__if_any4', 'hidden', 1);\n\t\t    frm.set_df_property('date_of_close', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by_hr', 'hidden', 1);\n\t\t    frm.set_df_property('closed_by', 'hidden', 1);\n\t\t    frm.set_df_property('approved_by', 'hidden', 1)\n\t\t    frm.set_df_property('request_received_on','hidden',1)\n\t\t};\n\t\tif(frm.doc.workflow_state == 'Pending for HR'){\n\t\t  //  frm.set_value('approved_by_hr', frappe.session.user);\n\t\t    frm.set_df_property('for_hr_use_only', 'hidden', 0);\n\t\t    frm.set_df_property('remarks_', 'hidden', 0);\n\t\t    frm.set_df_property('by_hr_department', 'hidden', 0);\n\t\t    frm.set_df_property('remarks__if_any4', 'hidden', 0);\n\t\t    frm.set_df_property('date_of_close', 'hidden', 0);\n\t\t    frm.set_df_property('approved_by_hr', 'hidden', 0);\n\t\t    frm.set_df_property('closed_by', 'hidden', 0);\n\t\t    frm.set_df_property('approved_by', 'hidden', 1);\n\t\t    frm.set_df_property('request_received_on','hidden',0)\n\t\t};\n\t\tif(frm.doc.workflow_state == 'Pending for COO'){\n\t\t  //  frm.set_value('approved_by', frappe.session.user);\n\t\t    frm.set_df_property('approved_by', 'hidden', 0)\n\t\t};\n\t\t\n\t\t\n\t},\n\tno_of_position(frm){\n\t    if (frm.doc.designation){\n\t        frm.clear_table(\"staffing_details\")\n\t        frm.add_child(\"staffing_details\",{\n\t            \"designation\": frm.doc.designation,\n                \"vacancies\":frm.doc.no_of_position\n\t        })\n\t        frm.refresh_field(\"staffing_details\")\n\t    }\n// \t},\n//     no_of_position(frm){\n// \t    if (frm.doc.designation){\n// \t        frm.clear_table(\"staffing_details\")\n// \t        frm.add_child(\"staffing_details\",{\n// \t            \"designation\": frm.doc.designation,\n//                 \"vacancies\":frm.doc.no_of_position\n// \t        })\n// \t        frm.refresh_field(\"staffing_details\")\n\t   // }\n\t},\n\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Promotion",
  "enabled": 1,
  "modified": "2023-06-08 18:11:59.408730",
  "module": null,
  "name": "Employee Promotion Form",
  "script": "frappe.ui.form.on('Employee Promotion', {\n\trefresh(frm) {\n\t\tfrm.add_custom_button(__(\"Print\"), function () {\n            if(frm.doc.parent_company){\n                var letter_head = frm.doc.parent_company\n            }\n            else{\n                var letter_head = frm.doc.company\n            } \n            var f_name = frm.doc.name\n            var print_format =\"Employee Promotion\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Employee Promotion\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n                + \"&letterhead=\" + encodeURIComponent(letter_head) \n               ));\n        });\n        \tfrm.add_custom_button(__(\"ECSA\"), function () {\n            if(frm.doc.parent_company){\n                var letter_head = frm.doc.parent_company\n            }\n            else{\n                var letter_head = frm.doc.company\n            } \n            var f_name = frm.doc.name\n            var print_format =\"ECSA\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Employee Promotion\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n                + \"&letterhead=\" + encodeURIComponent(letter_head) \n               ));\n        });\n\t},\n\t\temployee: function (frm) {\n\t\t    frm.clear_table(\"goals\")\n\t\t    frappe.call({\n\t\t\t\tmethod: 'norden.custom.get_appraisal_kra',\n\t\t\t\targs: {\n\t\t\t\t\t\"employee\": frm.doc.employee,\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\tcallback:function(r){\n\t\t\t\t    if(r){\n\t\t\t\t        \t$.each(r.message , function(i,d){\n\t\t\t\t        \t    console.log(d)\n\t\t\t\t        \t    \tvar row = frappe.model.add_child(frm.doc, \"Appraisal Template Goal\", \"goals\");\n\t\t\t\t        \t    \trow.kra = d.kra,\n                                   row.req_output = d.req_output,\n                                   row.min_output = d.min_output,\n                                    row.per_weightage = d.per_weightage\n\t\t\t\t        \t})\n\t\t\t\t        \trefresh_field(\"goals\");\n\t\t\t\t        \n\t\t\t\t    }\n\t\t\t\t}\n\n\t\t\t})\n\t\t}\n\t\n});\n\nfrappe.ui.form.on('Employee Property History', {\n    // new_value:(frm,cdt,cdn) => {\n    // let row = frm.selected_doc;\n    // if (row.new_value){\n    //     console.log(row.new_value);\n    //     frm.set_value(\"revised_ctc\",row.new_value);\n    // }\n    // }\n    new: (frm,cdt,cdn) => {\n        let row = frm.selected_doc;\n        if (row.property == \"Gross Pay\"){\n            console.log(\"HI\")\n            console.log(row.new);\n            frm.set_value(\"revised_\",row.new);\n        }\n    },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Holiday List",
  "enabled": 1,
  "modified": "2023-04-20 13:45:21.676864",
  "module": null,
  "name": "Holiday List",
  "script": "frappe.ui.form.on('Holiday List', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\t\n    setup(frm){\n\tfrm.get_docfield('holidays').allow_bulk_edit = 1\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Advance",
  "enabled": 1,
  "modified": "2023-11-28 11:49:38.213499",
  "module": null,
  "name": "Employee Advance",
  "script": "frappe.ui.form.on('Employee Advance', {\n\trefresh(frm) {\n\t    if (frm.doc.company == \"Norden Communication Pvt Ltd\" || frm.doc.company == 'Norden research and Innovation Centre  Pvt. Ltd'){\n\t       frm.set_value('cfo_approver','vijay@nordencommunication.com')\n\t       frm.set_value('finance_approver','topson@nordencommunication.com')\n\t     }\n\t     else if(frm.doc.company == 'Norden Singapore PTE LTD' || frm.doc.company == 'Norden Communication UK Limited'){\n\t         frm.set_value('cfo_approver','vijay@nordencommunication.com')\n\t         frm.set_value('finance_approver','lakshmi.devi@norden.co.uk')\n\t         \n\t     }\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "ToDo",
  "enabled": 0,
  "modified": "2023-05-15 15:47:12.005235",
  "module": null,
  "name": "ToDo",
  "script": "frappe.ui.form.on('ToDo', {\n    refresh(frm){\n        // if(frm.doc.__islocal){\n            frm.set_value('assigned_by',frappe.session.user)\n        // }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 1,
  "modified": "2023-05-15 20:01:57.643642",
  "module": null,
  "name": "Task",
  "script": "frappe.ui.form.on('Task', {\n\tonload(frm) {\n\t    if(frm.doc.__islocal){\n\t\t    frm.set_value('created_by',frappe.session.user)\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "SCAR",
  "enabled": 1,
  "modified": "2023-05-22 10:12:45.265768",
  "module": null,
  "name": "SCAR Form",
  "script": "frappe.ui.form.on('SCAR', {\n\trefresh(frm) {\n\t     frm.add_custom_button(__(\"Print\"), function () {\n            var f_name = frm.doc.name\n            var print_format =\"SCAR Print\";\n             window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"SCAR\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n               ));\n        });\n\t\tif (frm.doc.__islocal) {\n           frm.set_value(\"initiator\",frappe.session.user)\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Allocation Details",
  "enabled": 1,
  "modified": "2023-08-31 14:48:14.109845",
  "module": "Norden",
  "name": "Allocation Details",
  "script": "frappe.ui.form.on('Allocation Details', {\n\tonload(frm) {\n\t\tconst queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const item_code = urlParams.get('item_code')\n        frm.set_value('item_code',item_code.split(':')[1])\n        frm.set_value('company',item_code.split(':')[0])\n\t},\n\trefresh(frm) {\n\t\tfrm.disable_save()\n\t},\n\titem_code(frm){\n\t    frm.clear_table(\"price_list_details\")\n        frm.clear_table(\"allocated_item_details\")\n        frm.clear_table(\"so_details\")\n        frm.clear_table(\"po_details\")\n\t    frappe.call({\n\t        method:\"norden.custom.all_stock\",\n\t        args:{\n\t            \"company\":frm.doc.company,\n\t            \"item_code\":frm.doc.item_code,\n\t        },\n\t        callback(r){\n\t            if(r){\n\t                console.log(r)\n\t                $.each(r.message,function(i,j){\n\t                    frm.add_child(\"allocated_item_details\",{\n    \t                    'stock_entry':j.stock_entry,\n    \t                    'type':j.type,\n    \t                    'date':j.transaction_date,\n    \t                    'status':j.status,\n    \t                    'company':j.company,\n    \t                    'file_no':j.file_number,\n    \t                    'link_document':j.doc_name,\n    \t                    \"qty\":j.qty,\n    \t                    \"unit\":j.uom\n    \t                })\n    \t                frm.refresh_field(\"allocated_item_details\")\n\t                })\n\t            }\n\t        }\n\t    })\n\t    frappe.call({\n\t        method:\"norden.custom.get_detail_so\",\n\t        args:{\n\t            \"company\":frm.doc.company,\n\t            \"item_code\":frm.doc.item_code\n\t        },\n\t        callback(r){\n\t            if(r){\n\t               $.each(r.message,function(i,j){\n\t                    frm.add_child(\"so_details\",{\n    \t                    'so_number':j.parent,\n    \t                    'so_date':j.transaction_date,\n    \t                    'order_qty':j.qty,\n    \t                    'pending_qty':j.pending_qty,\n    \t                    'delivered_qty':j.delivered_qty,\n    \t                })\n    \t                frm.refresh_field(\"so_details\")\n\t                })\n\t            }\n\t        }\n\t    })\n\t    frappe.call({\n\t        method:\"norden.custom.get_detail_po\",\n\t        args:{\n\t            \"company\":frm.doc.company,\n\t            \"item_code\":frm.doc.item_code\n\t        },\n\t        callback(r){\n\t            if(r){\n\t               $.each(r.message,function(i,j){\n\t                    frm.add_child(\"po_details\",{\n\t                        'mr_qty':j.mr,\n\t                        'qc_qty':j.qc,\n    \t                    'po_number':j.parent,\n    \t                    'po_date':j.transaction_date,\n    \t                    'order_qty':j.qty,\n    \t                    'bal_qty':j.bal_qty,\n    \t                    \n    \t                })\n    \t                frm.refresh_field(\"po_details\")\n\t                })\n\t            }\n\t        }\n\t    })\n        var user = frappe.session.user\n\t     frappe.call({\n\t        method:\"norden.custom.get_item_price_dt\",\n\t        args:{\n\t            \"item_code\":frm.doc.item_code,\n\t            \"user\":user,\n\t        },\n\t        callback(r){\n\t            if(r){\n\t                \n\t                $.each(r.message,function(i,d){\n\t                   $.each(d,function(i,j){\n                        frm.add_child(\"price_list_details\",{\n    \t                    \"price_list_rate\":j.price_list_rate,\n    \t                    \"price_list\":j.price_list\n    \t                })\n\t                   })\n    \t                frm.refresh_field(\"price_list_details\")\n\t                })\n\t            }\n\t        }\n\t    })\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Price Details",
  "enabled": 1,
  "modified": "2023-05-23 18:57:58.034223",
  "module": null,
  "name": "Item Price Details",
  "script": "frappe.ui.form.on('Item Price Details', {\n    refresh(frm){\n        frm.disable_save()\n    },\n\titem_code(frm) {\n        \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Training Certificate",
  "enabled": 1,
  "modified": "2023-06-17 17:33:12.156604",
  "module": null,
  "name": "Training Certificate",
  "script": "frappe.ui.form.on('Training Certificate', {\n\trefresh(frm) {\n\t\tif(!frm.doc.__islocal){\n            if (frm.doc.course == \"EYENOR DISMANTLING\"){\n                frm.add_custom_button(__(\"Print\"), function () {\n                    var letter_head = frm.doc.letterhead;\n                    var f_name = frm.doc.name;\n                    var print_format =\"Eyenor Print\";\n                    window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                        + \"doctype=\" + encodeURIComponent(\"Training Certificate\")\n                        + \"&name=\" + encodeURIComponent(f_name)\n                        + \"&trigger_print=1\"\n                        + \"&format=\" + print_format\n                        + \"&no_letterhead=0\"\n                        + \"&letterhead=\" + encodeURIComponent(letter_head) \n                      ));\n                });\n            }\n            else if (frm.doc.course == \"NORDEN CERTIFIED CABLE INSTALLER(NCCI)\"){\n                frm.add_custom_button(__(\"Print\"), function () {\n                    var letter_head = frm.doc.letterhead;\n                    var f_name = frm.doc.name;\n                    var print_format =\"NCCI\";\n                    window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                        + \"doctype=\" + encodeURIComponent(\"Training Certificate\")\n                        + \"&name=\" + encodeURIComponent(f_name)\n                        + \"&trigger_print=1\"\n                        + \"&format=\" + print_format\n                        + \"&no_letterhead=0\"\n                        + \"&letterhead=\" + encodeURIComponent(letter_head) \n                      ));\n                });\n            }\n            else {\n                frm.add_custom_button(__(\"Print\"), function () {\n                    var letter_head = frm.doc.letterhead;\n                    var f_name = frm.doc.name;\n                    var print_format =\"ECSA\";\n                    window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                        + \"doctype=\" + encodeURIComponent(\"Training Certificate\")\n                        + \"&name=\" + encodeURIComponent(f_name)\n                        + \"&trigger_print=1\"\n                        + \"&format=\" + print_format\n                        + \"&no_letterhead=0\"\n                        + \"&letterhead=\" + encodeURIComponent(letter_head) \n                      ));\n                });\n          }\n      }\n    },\n    date: function(frm) {\n        frm.set_value(\"expiry_date\", frappe.datetime.add_months(frm.doc.date,(frm.doc.validity * 12)));\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Serial No Global Search",
  "enabled": 1,
  "modified": "2023-11-20 18:54:47.950590",
  "module": null,
  "name": "Serial No Global Search",
  "script": "frappe.ui.form.on('Serial No Global Search', {\n\tserial_number(frm) {\n// \t\tfrappe.call({\n// \t\t    method:\"norden.custom.get_serial_no_details\",\n// \t\t    args:{\n// \t\t        'serial_no':frm.doc.serial_number\n// \t\t    },\n// \t\t    callback(r){\n// \t\t        if(r){\n// \t\t\t\t\tfrm.get_field(\"html\").$wrapper.html(r.message);\n// \t\t        }\n// \t\t    }\n// \t\t})\n\t\tfrappe.call({\n\t\t    method:\"norden.custom.get_data\",\n\t\t    args:{\n\t\t        'serial_no':frm.doc.serial_number\n\t\t    },\n\t\t    callback(r){\n\t\t        if(r){\n\t\t\t\t\tfrm.get_field(\"html\").$wrapper.html(r.message);\n\t\t        }\n\t\t    }\n\t\t})\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Electra Product Search",
  "enabled": 1,
  "modified": "2023-07-13 20:26:40.893226",
  "module": null,
  "name": "Electra Product Search",
  "script": "frappe.ui.form.on('Electra Product Search', {\n\trefresh(frm) {\n\t\tfrm.disable_save()\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "OT Process",
  "enabled": 1,
  "modified": "2023-08-28 16:20:51.800819",
  "module": null,
  "name": "OT Process",
  "script": "frappe.ui.form.on('OT Process', {\n    date_of_overtime(frm) {\n        var dateOfOvertime = frm.doc.date_of_overtime;\n            \n        var dayOfWeek = moment(dateOfOvertime).format(\"dddd\");\n        console.log(dayOfWeek)\n        frm.set_value(\"day\",dayOfWeek)\n\t},\n\n    validate(frm){\n        if(frm.doc.from_time && frm.doc.to_time){\n    \t\tfrappe.call({\n                method: 'norden.custom.time_difference',\n                args: {\n                    'to_time':frm.doc.to_time,\n                    'from_time':frm.doc.from_time\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        console.log(r.message)\n                        frm.set_value(\"total_hours\",r.message)\n                    }\n                }\n            });\n        }\n        if(frm.doc.from_time && frm.doc.to_time &&frm.doc.amount &&frm.doc.over_time){\n    \t\tfrappe.call({\n                method: 'norden.custom.minutes_calculate',\n                args: {\n                    'to_time':frm.doc.to_time,\n                    'from_time':frm.doc.from_time,\n                    'amount':frm.doc.amount,\n                    'over_time':frm.doc.over_time\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        console.log(r.message)\n                        frm.set_value(\"total_amount\",r.message)\n                        \n                        \n                    }\n                }\n            });\n        }\n    },\n     employee(frm){\n        if(frm.doc.employee_name){\n            frappe.db.get_value(\"Employee\",{\"employee_number\":frm.doc.employee},[\"earnings_gross\"])\n            .then(r => {\n                if(r.message.earnings_gross){\n                    frm.set_value('amount',r.message.earnings_gross)\n                    console.log(r.message.earnings_gross)\n                }\n            })\n            if(frm.doc.amount){\n            frappe.call({\n                method:\"norden.custom.amount_calculate\",\n                args:{\n                    total_amount:frm.doc.amount,\n                },\n                callback(r){\n                    if(r.message){\n                        frm.set_value('over_time',r.message)\n                    }\n                }\n            })\n        }\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Salary",
  "enabled": 1,
  "modified": "2023-08-24 19:18:13.770786",
  "module": null,
  "name": "Leave Salary",
  "script": "frappe.ui.form.on('Leave Salary', {\n\trefresh(frm) {\n\t\tif(frm.doc.leaves_encashed > frm.doc.leave_balance){\n            frappe.validated = false;\n            frappe.msgprint(\"Leaves Encashed Days Greater then Leave Balance Days\");\n\t\t}\n\t\tif(!frm.doc.__islocal){\n\t    \n                 frm.add_custom_button(__(\"Print\"), function () {\n                \n                var print_format = \"Leave Salary\"\n                 \n                var f_name = frm.doc.name\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Leave Salary\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n\t\n\t\n\n\n            ));\n                 });\n// \t});    \n            }\n\t},\n\temployee(frm){\n\t    if(frm.doc.employee){\n        frm.call('get_leave_application').then(d=>{\n                if (d.message[4]== 'Annual Leave'){\n    \t            console.log(d.message);\n    \t            frm.set_value('leave_start_date',d.message[0]);\n    \t            frm.set_value('leave_end_date',d.message[1]);\n    \t            \n    \t            frm.set_value('accrued_leaves',d.message[3]);\n    \t            frm.set_value('leaves_availed',d.message[2]);\n    \t            if (d.message[3] > d.message[2]){\n    \t                frm.set_value('leave_balance',d.message[3] - d.message[2]);\n    \t            }\n    \t            else{\n    \t           \n    \t                frm.set_value('leave_balance',0);\n    \t            }\n\t\t\t}\n        })\n\t    }\n\t},\n\tleaves_availed(frm){\n        var nodw = frm.doc.leaves_availed;\n        var bas = frm.doc.basic;\n        var ebasic = (bas/30)* (nodw);\n        console.log(ebasic);\n        var fd_al = frm.doc.hra;\n        var fd = (fd_al/30)*(nodw);\n        var me_al = frm.doc.ta_others;\n        var eme = (me_al/30)*(nodw);\n        var hra = frm.doc.telephone_allowance;\n        var ehra = (hra/30)*(nodw);\n        frm.set_value('earned_basic',ebasic);\n        frm.set_value('earned_hra',fd);\n        frm.set_value('earned_ta_others',eme);\n        frm.set_value('earned_telephone_allowance',ehra);\n    },\n\tearned_telephone_allowance(frm){\n\t    var ma = parseFloat(frm.doc.earned_basic);\n\t    var sal = parseFloat(frm.doc.earned_hra);\n\t    var food = parseFloat(frm.doc.earned_ta_others);\n\t    var trans = parseFloat(frm.doc.earned_telephone_allowance);\n\t    var total = (ma + sal + food + trans );\n        frm.set_value('total_salary',total.toFixed(2));\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "PDC Management",
  "enabled": 1,
  "modified": "2023-09-07 13:36:54.730537",
  "module": null,
  "name": "PDC Management",
  "script": "frappe.ui.form.on('PDC Management', {\n    pay_type(frm){\n       frm.clear_table('pay_entry')\n        frappe.call({\n            method:'norden.custom.pay_entry',\n            args:{\n               'type':frm.doc.pay_type,\n            },\n            callback(r){\n                if(r.message.length == 0){\n                    frm.clear_table(\"pay_entry\")\n                }\n                else{\n                    $.each(r.message, function (i, e) {\n                        if(frm.doc.pay_type==\"Payable\"){\n            \t\t\t\tfrm.add_child('pay_entry', {\n            \t\t\t\t\t'payment_entry_no': e.name,\n            \t\t\t\t\t'reference_date': e.posting_date,\n            \t\t\t\t\t'cheque_no':e.reference_no,\n            \t\t\t\t\t'cheque_date':e.reference_date,\n            \t\t\t\t\t'amount':e.paid_amount,\n            \t\t\t\t\t'deposited_bank':\"Rakbank (The National Bank of Ras Al Khaimah) - NCM\"\n            \t\t\t\t})\n        \t\t\t\t}\n        \t\t\t\telse{\n        \t\t\t\t    frm.add_child('pay_entry', {\n            \t\t\t\t\t'payment_entry_no': e.name,\n            \t\t\t\t\t'reference_date': e.posting_date,\n            \t\t\t\t\t'cheque_no':e.reference_no,\n            \t\t\t\t\t'cheque_date':e.reference_date,\n            \t\t\t\t\t'amount':e.paid_amount,\n            \t\t\t\t\t'deposited_bank':\"Rakbank (The National Bank of Ras Al Khaimah) - NCM\"\n        \t\t\t\t})\n        \t\t\t}\n                })\n\t\t\t\tfrm.refresh_field('pay_entry')\n            }\n            }\n        });\n       \n    },\n    refresh(frm){\n        frm.disable_save()\n    }\n    });\n\nfrappe.ui.form.on('Pay Entry', {\n\tbutton(frm, cdt, cdn) {\n\t\tvar child = locals[cdt][cdn]\n\t\t if(child.je_created ==0){\n    \t\t frappe.call({\n                method:'norden.custom.create_journal_entry',\n                args:{\n                    'type':frm.doc.pay_type,\n            \t\t'payment_entry':child.payment_entry_no,\n            \t\t'date':child.reference_date\n                },\n                callback(r){\n                    if(r.message){\n                        child.je_created = 1\n                        frappe.msgprint(\"Journal Entry Is Created\"+\" \"+\"-<b> \"+ r.message+\"</b>\");\n\t\t                frm.refresh_field('pay_entry')\n                    }\n                }\n            })\n\t\t }\n\t\t  frm.save()\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Prepayment",
  "enabled": 1,
  "modified": "2023-09-28 18:03:00.035415",
  "module": null,
  "name": "Prepayment",
  "script": "frappe.ui.form.on('Prepayment', {\n    refresh(frm){\n        if(frm.doc.company){\n            frm.set_value('company',\"Norden Communication Middle East FZE\")\n        }\n    },\n    \n    company(frm){\n        if(frm.doc.company == \"Norden Communication Middle East FZE\"){\n            frm.set_value('payment_account',\"Prepayments - NCME\")\n        }\n        frm.set_query(\"prepayment_account\",  () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"parent_account\": frm.doc.payment_account\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tfrm.set_query(\"expense_account_name\",  () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"account_type\": frm.doc.account_type\n\t\t\t\t}\n\t\t\t}\n\t\t})\n    },\n        \n    validate(frm){\n        if(frm.doc.company == \"Norden Communication Middle East FZE \"){\n            frm.set_value('payment_account',\"Prepayments - NCME\")\n        }\n    },\n    \n    party_type(frm){\n        if(frm.doc.party_type == \"Supplier\"){\n            frm.set_value(\"party_account\",\"Trade Creditors - NCME\")\n        }\n        else if(frm.doc.party_type == \"Employee\"){\n            frm.set_value(\"party_account\",\"Staff account - NCME\")\n        }\n    },\n    total_number_of_prepayment(frm){\n        if(frm.doc.total_amount_to_be_paid){\n            frm.trigger(\"calculate\")\n        }\n    },\n    total_amount_to_be_paid(frm){\n        if(frm.doc.total_number_of_prepayment){\n            frm.trigger(\"calculate\")\n        }\n    },\n    calculate(frm) {\n\t\tfrm.call('child_payment').then(r=>{\n\t\t\tif (r.message) {\n\t\t\t    frm.set_value('payment_amount',r.message[0])\n\t\t\t    frm.set_value('first_month_amount',r.message[2])\n\t\t\t    frm.clear_table('prepayment_details')\n                $.each(r.message[1],function(i,d){\n \t\t\t        frm.add_child('prepayment_details',{\n                        'date':d.date,\n                        'prepayment_amount':d.prepayment_amount,\n                        'accumulated_amount':d.accumulated_amount,\n \t\t\t        })\n \t\t\t        frm.refresh_field(\"prepayment_details\");\n                })\n\t\t    }\n\t\t})\n        \n    },\n})\n\nfrappe.ui.form.on('Prepayment Details', {\n    journal_entry(frm,cdt,cdn){\n        var child = locals[cdt][cdn]\n\t    if(!child.journal_entry_number){\n    \t\tfrappe.call({\n                method:'norden.custom.prepayment_journal_entry',\n                args:{\n            \t\t'name':frm.doc.name,\n            \t\t'date':child.date,\n            \t\t'party_type':frm.doc.party_type,\n                },\n                callback(r){\n                    if(r.message){\n                        frappe.msgprint(\"Journal Entry Is Created\"+\" \"+\"-<b> \"+ r.message+\"</b>\");\n\t\t\t\t\tfrm.refresh();\n                    }\n                }\n            });\n\t    }\n\t    else if (child.journal_entry_number){\n\t        frappe.msgprint('Journal Entry Already Created')\n\t    }\n        frm.save()\n        frm.submit()\n    },\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Partial Proforma Invoice",
  "enabled": 1,
  "modified": "2023-09-05 21:26:49.828944",
  "module": null,
  "name": "Partial Proforma Invoice",
  "script": "frappe.ui.form.on('Partial Proforma Invoice', {\n    refresh(frm) {\n        frm.add_custom_button(__(\"Print\"), function () {\n            var f_name = frm.doc.name\n\t\t\t var print_format = \"Partial Proforma Invoice - Middle East\";\n        \t\n            window.open(frappe.urllib.get_full_url(\"/api/method/frappe.utils.print_format.download_pdf?\"\n                + \"doctype=\" + encodeURIComponent(\"Partial Proforma Invoice\")\n                + \"&name=\" + encodeURIComponent(f_name)\n                + \"&trigger_print=1\"\n                + \"&format=\" + print_format\n                + \"&no_letterhead=0\"\n            ));\n        });\n\t}\n})\n\nfrappe.ui.form.on('Sales Order Details', {\n\tqty(frm,cdt,cdn) {\n        var child = locals[cdt][cdn]\n        if(child.qty){\n            child.amount = (child.qty * child.rate)\n        }\n        frm.refresh_field('sales_order_details')\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-11-27 16:37:19.953707",
  "module": null,
  "name": "Quotation List",
  "script": "frappe.listview_settings['Order Schedule'] = {\r\n    onload: function(listview) {\r\n        listview.filter_area.clear();\r\n\r\n        var currentDate = frappe.datetime.now_date();\r\n        var startDate = frappe.datetime.month_start(currentDate);\r\n        var endDate = frappe.datetime.month_end(currentDate);\r\n\r\n        var dateFormat = \"dd-mm-yyyy\";\r\n\r\n        // Set the date format in the filter\r\n        frappe.model.set_value(\r\n            listview.doctype,\r\n            '__default_filters',\r\n            'Order Schedule_schedule_date',\r\n            startDate + \"|\" + endDate + \"|\" + dateFormat\r\n        );\r\n    }\r\n};\r\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Issue",
  "enabled": 1,
  "modified": "2024-01-05 18:38:52.829549",
  "module": null,
  "name": "Issue-Form",
  "script": "frappe.ui.form.on('Issue', {\r\n    refresh(frm) {\r\n        // Add the custom button\r\n        var myButton = frm.add_custom_button(__('Send to TEAMPRO'), function() {\r\n            var f_name = frm.doc.name;\r\n\r\n            // Call the custom method using frappe.call\r\n            frappe.call({\r\n                method: 'norden.utils.send_mail_to_teampro',  // Replace with your actual method path\r\n                args: {\r\n                    subject: frm.doc.subject,\r\n                    message: frm.doc.description,\r\n                    recipients: 'it.support@groupteampro.com',\r\n                    // cc: 'norden@123.com',\r\n                    sender: 'erp@nordencommunication.com',\r\n                    // Additional parameters or customization as needed\r\n                },\r\n                callback: function(response) {\r\n                    if (response.message) {\r\n                       frappe.msgprint({\r\n                        title: __('Issue raised Successfully'),\r\n                        indicator: 'pink',\r\n                        message: __('The mail for the issue \"<b>{0}</b>\" has been sent successfully to TEAMPRO.', [frm.doc.name])\r\n                    });\r\n\r\n                    } else {\r\n                        frappe.msgprint(__('Failed to send mail.'));\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Apply CSS styling after a brief timeout to ensure the button is rendered\r\n        setTimeout(function() {\r\n            // Make sure the selector correctly targets the button\r\n            $('button[data-label=\"Send%20to%20TEAMPRO\"]:visible').css({\r\n                'background-color': '#2685F0', //Blue\r\n                'color': 'black'\r\n            });\r\n        }, 100);\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n",
  "view": "Form"
 }
]